{"ast":null,"code":"// LinkedIn API适配器\n// 处理LinkedIn Jobs API的请求和响应\n\nimport ApiAdapter from './ApiAdapter';\nimport { buildQueryString } from './httpUtils';\nimport logoService from '../logoService';\nimport { formatRelativeDate, extractSkills, extractTeam, estimateSalary, generateRandomStats, extractQualifications } from './responseTransformer';\nclass LinkedInApiAdapter extends ApiAdapter {\n  constructor(options = {}) {\n    // LinkedIn API基础URL\n    super('https://api.linkedin.com/v2', options);\n    this.clientId = options.clientId || '';\n    this.clientSecret = options.clientSecret || '';\n    this.redirectUri = options.redirectUri || window.location.origin;\n    this.accessToken = options.accessToken || '';\n    this.tokenExpiry = options.tokenExpiry || 0;\n  }\n\n  /**\r\n   * 获取OAuth授权URL\r\n   * @returns {string} - 授权URL\r\n   */\n  getAuthorizationUrl() {\n    const params = {\n      response_type: 'code',\n      client_id: this.clientId,\n      redirect_uri: this.redirectUri,\n      scope: 'r_liteprofile r_emailaddress w_member_social',\n      state: Math.random().toString(36).substring(2)\n    };\n    return `https://www.linkedin.com/oauth/v2/authorization${buildQueryString(params)}`;\n  }\n\n  /**\r\n   * 使用授权码获取访问令牌\r\n   * @param {string} code - 授权码\r\n   * @returns {Promise<Object>} - 包含访问令牌的对象\r\n   */\n  async getAccessToken(code) {\n    const params = {\n      grant_type: 'authorization_code',\n      code,\n      client_id: this.clientId,\n      client_secret: this.clientSecret,\n      redirect_uri: this.redirectUri\n    };\n    try {\n      const response = await this.request('/oauth/v2/accessToken', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams(params)\n      });\n      this.accessToken = response.access_token;\n      this.tokenExpiry = Date.now() + response.expires_in * 1000;\n      return {\n        accessToken: this.accessToken,\n        expiresIn: response.expires_in,\n        expiryDate: new Date(this.tokenExpiry)\n      };\n    } catch (error) {\n      throw this.handleError(error, 'LinkedIn OAuth');\n    }\n  }\n\n  /**\r\n   * 检查访问令牌是否有效\r\n   * @returns {boolean} - 令牌是否有效\r\n   */\n  isTokenValid() {\n    return this.accessToken && this.tokenExpiry > Date.now();\n  }\n\n  /**\r\n   * 确保有有效的访问令牌\r\n   * @returns {Promise<void>}\r\n   */\n  async ensureValidToken() {\n    if (!this.isTokenValid()) {\n      throw new Error('LinkedIn access token is invalid or expired. User authentication required.');\n    }\n  }\n\n  /**\r\n   * 搜索工作\r\n   * @param {string} searchTerm - 搜索关键词\r\n   * @param {Object} filters - 筛选条件\r\n   * @param {number} page - 页码\r\n   * @returns {Promise<Object>} - 工作搜索结果\r\n   */\n  async searchJobs(searchTerm = '', filters = {}, page = 0) {\n    try {\n      // 检查是否有有效的访问令牌\n      if (!this.isTokenValid() && this.clientId && this.clientSecret) {\n        try {\n          // 尝试使用客户端凭据流程获取访问令牌\n          await this.getClientCredentialsToken();\n        } catch (tokenError) {\n          console.error('Failed to get LinkedIn access token:', tokenError);\n          // 继续使用模拟数据\n        }\n      }\n      console.log('Searching LinkedIn jobs with term:', searchTerm, 'filters:', filters, 'page:', page);\n\n      // 如果有有效的访问令牌，尝试使用真实API\n      if (this.isTokenValid()) {\n        try {\n          // 构建查询参数\n          const queryParams = {\n            keywords: searchTerm,\n            location: filters.location || 'worldwide',\n            start: page * 10,\n            // 每页10个结果\n            count: 10\n          };\n\n          // 添加筛选条件\n          if (filters.jobType) {\n            queryParams.f_JT = this.mapJobType(filters.jobType);\n          }\n\n          // 发送API请求\n          const response = await this.request(`/jobs/search${buildQueryString(queryParams)}`, {\n            headers: {\n              'Authorization': `Bearer ${this.accessToken}`\n            }\n          });\n\n          // 转换响应数据\n          const jobs = response.elements.map(job => this.transformJob(job));\n          return {\n            jobs,\n            total: response.paging.total,\n            page,\n            pageSize: 10\n          };\n        } catch (apiError) {\n          console.error('LinkedIn API request failed:', apiError);\n          // 如果API请求失败，回退到模拟数据\n        }\n      }\n\n      // 如果没有有效的访问令牌或API请求失败，使用模拟数据\n      console.log('Using mock data for LinkedIn jobs');\n      return this.getMockLinkedInJobs(searchTerm, filters, page);\n    } catch (error) {\n      const errorInfo = this.handleError(error, 'LinkedIn Jobs Search');\n\n      // 返回空结果\n      return {\n        jobs: [],\n        total: 0,\n        page: page,\n        pageSize: 10\n      };\n    }\n  }\n\n  /**\r\n   * 使用客户端凭据流程获取访问令牌\r\n   * @returns {Promise<Object>} - 包含访问令牌的对象\r\n   */\n  async getClientCredentialsToken() {\n    const params = {\n      grant_type: 'client_credentials',\n      client_id: this.clientId,\n      client_secret: this.clientSecret,\n      scope: 'r_liteprofile r_emailaddress w_member_social'\n    };\n    try {\n      const response = await fetch('https://www.linkedin.com/oauth/v2/accessToken', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams(params)\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to get access token: ${response.status}`);\n      }\n      const data = await response.json();\n      this.accessToken = data.access_token;\n      this.tokenExpiry = Date.now() + data.expires_in * 1000;\n      return {\n        accessToken: this.accessToken,\n        expiresIn: data.expires_in,\n        expiryDate: new Date(this.tokenExpiry)\n      };\n    } catch (error) {\n      throw this.handleError(error, 'LinkedIn OAuth Client Credentials');\n    }\n  }\n\n  /**\r\n   * 将工作类型映射到LinkedIn API参数\r\n   * @param {string} jobType - 工作类型\r\n   * @returns {string} - LinkedIn API参数\r\n   */\n  mapJobType(jobType) {\n    const typeMap = {\n      'Full-time': 'F',\n      'Part-time': 'P',\n      'Contract': 'C',\n      'Temporary': 'T',\n      'Volunteer': 'V',\n      'Internship': 'I'\n    };\n    return typeMap[jobType] || 'F';\n  }\n\n  /**\r\n   * 获取工作详情\r\n   * @param {string} jobId - 工作ID\r\n   * @returns {Promise<Object>} - 工作详情\r\n   */\n  async getJobDetails(jobId) {\n    try {\n      // 检查是否有有效的访问令牌\n      if (!this.isTokenValid() && this.clientId && this.clientSecret) {\n        try {\n          // 尝试使用客户端凭据流程获取访问令牌\n          await this.getClientCredentialsToken();\n        } catch (tokenError) {\n          console.error('Failed to get LinkedIn access token:', tokenError);\n          // 继续使用模拟数据\n        }\n      }\n      console.log('Fetching LinkedIn job details for ID:', jobId);\n\n      // 如果有有效的访问令牌，尝试使用真实API\n      if (this.isTokenValid()) {\n        try {\n          // 发送API请求\n          const response = await this.request(`/jobs/${jobId}`, {\n            headers: {\n              'Authorization': `Bearer ${this.accessToken}`\n            }\n          });\n\n          // 转换响应数据\n          return this.transformJobDetail(response);\n        } catch (apiError) {\n          console.error('LinkedIn API request failed:', apiError);\n          // 如果API请求失败，回退到模拟数据\n        }\n      }\n\n      // 如果没有有效的访问令牌或API请求失败，使用模拟数据\n      console.log('Using mock data for LinkedIn job details');\n      return this.getMockJobDetails(jobId);\n    } catch (error) {\n      throw this.handleError(error, 'LinkedIn Job Details');\n    }\n  }\n\n  /**\r\n   * 将LinkedIn工作数据转换为统一格式\r\n   * @param {Object} linkedInJob - LinkedIn工作数据\r\n   * @returns {Object} - 统一格式的工作数据\r\n   */\n  transformJob(linkedInJob) {\n    return {\n      id: linkedInJob.id,\n      title: linkedInJob.title,\n      company: linkedInJob.company.name,\n      companyLogo: linkedInJob.company.logoUrl || `https://logo.clearbit.com/${linkedInJob.company.name.toLowerCase().replace(/\\s+/g, '')}.com`,\n      location: linkedInJob.location || 'Remote',\n      type: linkedInJob.jobType || 'Full-time',\n      salary: estimateSalary(linkedInJob.title),\n      team: extractTeam(linkedInJob.title),\n      postedDate: formatRelativeDate(linkedInJob.listedAt),\n      views: linkedInJob.views || generateRandomStats().views,\n      applicants: linkedInJob.applicants || generateRandomStats().applicants,\n      description: linkedInJob.description || 'No description available',\n      skills: extractSkills(linkedInJob.description || linkedInJob.title),\n      source: 'LinkedIn',\n      sourceUrl: linkedInJob.url || `https://www.linkedin.com/jobs/view/${linkedInJob.id}`,\n      sourceId: linkedInJob.id\n    };\n  }\n\n  /**\r\n   * 将LinkedIn工作详情转换为统一格式\r\n   * @param {Object} linkedInJobDetail - LinkedIn工作详情\r\n   * @returns {Object} - 统一格式的工作详情\r\n   */\n  transformJobDetail(linkedInJobDetail) {\n    const qualifications = extractQualifications(linkedInJobDetail.description || '');\n    return {\n      ...this.transformJob(linkedInJobDetail),\n      minimumQualifications: qualifications.minimumQualifications,\n      preferredQualifications: qualifications.preferredQualifications,\n      aboutJob: linkedInJobDetail.description || 'No description available',\n      companyInfo: linkedInJobDetail.companyDetails || 'No company information available',\n      benefits: linkedInJobDetail.benefits || [],\n      applicationUrl: linkedInJobDetail.applyUrl || `https://www.linkedin.com/jobs/view/${linkedInJobDetail.id}`\n    };\n  }\n\n  /**\r\n   * 获取模拟的LinkedIn工作数据\r\n   * @param {string} searchTerm - 搜索关键词\r\n   * @param {Object} filters - 筛选条件\r\n   * @param {number} page - 页码\r\n   * @returns {Object} - 工作搜索结果\r\n   */\n  getMockLinkedInJobs(searchTerm = '', filters = {}, page = 0) {\n    const pageSize = 10;\n    const allJobs = [{\n      id: 'li-1',\n      title: 'Senior Frontend Developer',\n      company: {\n        name: 'Microsoft',\n        logoUrl: 'https://logo.clearbit.com/microsoft.com'\n      },\n      location: 'Remote - US',\n      jobType: 'Full-time',\n      listedAt: '2023-07-20T10:30:00Z',\n      views: 412,\n      applicants: 45,\n      description: 'Join our team to build innovative web applications using React and TypeScript. You will work on challenging projects and collaborate with talented engineers.',\n      url: 'https://www.linkedin.com/jobs/view/li-1'\n    }, {\n      id: 'li-2',\n      title: 'Product Manager - Remote',\n      company: {\n        name: 'Amazon',\n        logoUrl: 'https://logo.clearbit.com/amazon.com'\n      },\n      location: 'Remote - Global',\n      jobType: 'Full-time',\n      listedAt: '2023-07-18T14:15:00Z',\n      views: 378,\n      applicants: 32,\n      description: 'Lead product development for our innovative platform. Define product strategy and work closely with engineering teams to deliver exceptional user experiences.',\n      url: 'https://www.linkedin.com/jobs/view/li-2'\n    }, {\n      id: 'li-3',\n      title: 'Senior Frontend Engineer',\n      company: {\n        name: 'Google',\n        logoUrl: 'https://logo.clearbit.com/google.com'\n      },\n      location: 'Remote - Europe',\n      jobType: 'Full-time',\n      listedAt: '2023-07-19T09:45:00Z',\n      views: 521,\n      applicants: 37,\n      description: 'Join our team to build and improve the Google web applications. You will work with cutting-edge technologies and contribute to products used by millions.',\n      url: 'https://www.linkedin.com/jobs/view/li-3'\n    }, {\n      id: 'li-4',\n      title: 'Data Scientist',\n      company: {\n        name: 'Netflix',\n        logoUrl: 'https://logo.clearbit.com/netflix.com'\n      },\n      location: 'Remote - US',\n      jobType: 'Full-time',\n      listedAt: '2023-07-16T11:20:00Z',\n      views: 456,\n      applicants: 48,\n      description: 'Apply machine learning and statistical analysis to improve our recommendation systems. Work with large datasets and develop algorithms that enhance user experience.',\n      url: 'https://www.linkedin.com/jobs/view/li-4'\n    }, {\n      id: 'li-5',\n      title: 'UX Researcher',\n      company: {\n        name: 'Slack',\n        logoUrl: 'https://logo.clearbit.com/slack.com'\n      },\n      location: 'Remote - Americas',\n      jobType: 'Full-time',\n      listedAt: '2023-07-14T13:10:00Z',\n      views: 298,\n      applicants: 23,\n      description: 'Conduct user research to inform product decisions and improve user experience. Design and execute user studies, analyze data, and present findings to stakeholders.',\n      url: 'https://www.linkedin.com/jobs/view/li-5'\n    }, {\n      id: 'li-6',\n      title: 'DevOps Engineer',\n      company: {\n        name: 'Atlassian',\n        logoUrl: 'https://logo.clearbit.com/atlassian.com'\n      },\n      location: 'Remote - Global',\n      jobType: 'Full-time',\n      listedAt: '2023-07-17T08:30:00Z',\n      views: 342,\n      applicants: 29,\n      description: 'Build and maintain our cloud infrastructure using Kubernetes, Docker, and AWS. Implement CI/CD pipelines and ensure high availability of our services.',\n      url: 'https://www.linkedin.com/jobs/view/li-6'\n    }, {\n      id: 'li-7',\n      title: 'Backend Developer (Python)',\n      company: {\n        name: 'Dropbox',\n        logoUrl: 'https://logo.clearbit.com/dropbox.com'\n      },\n      location: 'Remote - US',\n      jobType: 'Full-time',\n      listedAt: '2023-07-15T15:45:00Z',\n      views: 387,\n      applicants: 41,\n      description: 'Develop and maintain our backend services using Python and Django. Design and implement APIs, optimize database queries, and ensure scalability.',\n      url: 'https://www.linkedin.com/jobs/view/li-7'\n    }, {\n      id: 'li-8',\n      title: 'Mobile Developer (React Native)',\n      company: {\n        name: 'Spotify',\n        logoUrl: 'https://logo.clearbit.com/spotify.com'\n      },\n      location: 'Remote - Europe',\n      jobType: 'Full-time',\n      listedAt: '2023-07-18T10:20:00Z',\n      views: 312,\n      applicants: 27,\n      description: 'Build and improve our mobile applications using React Native. Implement new features, fix bugs, and ensure a smooth user experience across different devices.',\n      url: 'https://www.linkedin.com/jobs/view/li-8'\n    }, {\n      id: 'li-9',\n      title: 'Technical Writer',\n      company: {\n        name: 'GitHub',\n        logoUrl: 'https://logo.clearbit.com/github.com'\n      },\n      location: 'Remote - Global',\n      jobType: 'Full-time',\n      listedAt: '2023-07-13T09:15:00Z',\n      views: 245,\n      applicants: 19,\n      description: 'Create and maintain technical documentation for our products. Work closely with engineering teams to ensure accurate and comprehensive documentation.',\n      url: 'https://www.linkedin.com/jobs/view/li-9'\n    }, {\n      id: 'li-10',\n      title: 'Security Engineer',\n      company: {\n        name: 'Cloudflare',\n        logoUrl: 'https://logo.clearbit.com/cloudflare.com'\n      },\n      location: 'Remote - US',\n      jobType: 'Full-time',\n      listedAt: '2023-07-16T14:30:00Z',\n      views: 289,\n      applicants: 31,\n      description: 'Identify and address security vulnerabilities in our systems. Implement security best practices and ensure compliance with industry standards.',\n      url: 'https://www.linkedin.com/jobs/view/li-10'\n    }];\n\n    // 如果有搜索词，过滤结果\n    let filteredJobs = allJobs;\n    if (searchTerm) {\n      filteredJobs = allJobs.filter(job => job.title.toLowerCase().includes(searchTerm.toLowerCase()) || job.company.name.toLowerCase().includes(searchTerm.toLowerCase()) || job.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    // 应用位置筛选\n    if (filters.location) {\n      filteredJobs = filteredJobs.filter(job => job.location.toLowerCase().includes(filters.location.toLowerCase()));\n    }\n\n    // 应用工作类型筛选\n    if (filters.jobType) {\n      filteredJobs = filteredJobs.filter(job => job.jobType.toLowerCase() === filters.jobType.toLowerCase());\n    }\n\n    // 计算分页\n    const startIndex = page * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedJobs = filteredJobs.slice(startIndex, endIndex);\n\n    // 转换为统一格式\n    const transformedJobs = paginatedJobs.map(job => this.transformJob(job));\n    return {\n      jobs: transformedJobs,\n      total: filteredJobs.length,\n      page: page,\n      pageSize: pageSize\n    };\n  }\n\n  /**\r\n   * 获取模拟的工作详情\r\n   * @param {string} jobId - 工作ID\r\n   * @returns {Object} - 工作详情\r\n   */\n  getMockJobDetails(jobId) {\n    // 查找基本工作信息\n    const allJobs = this.getMockLinkedInJobs('', {}, 0).jobs;\n    const job = allJobs.find(job => job.id === jobId);\n    if (!job) {\n      throw new Error(`Job with ID ${jobId} not found`);\n    }\n\n    // 添加详细信息\n    const jobDetail = {\n      ...job,\n      minimumQualifications: ['5+ years of experience in frontend development', 'Strong proficiency with JavaScript, HTML, and CSS', 'Experience with React or similar frontend frameworks', 'Bachelor\\'s degree in Computer Science or related field', 'Excellent problem-solving skills'],\n      preferredQualifications: ['Experience with TypeScript and state management libraries', 'Knowledge of web accessibility standards', 'Experience with CI/CD pipelines', 'Contributions to open-source projects', 'Experience with agile development methodologies'],\n      aboutJob: `We are looking for a talented ${job.title} to join our team. You will be responsible for developing and maintaining web applications, collaborating with cross-functional teams, and ensuring high-quality code.\n\nKey Responsibilities:\n- Develop and maintain frontend applications using modern JavaScript frameworks\n- Collaborate with designers to implement user interfaces\n- Write clean, maintainable, and efficient code\n- Participate in code reviews and provide constructive feedback\n- Troubleshoot and fix bugs in existing applications\n\nThis is a remote position with flexible working hours. We offer competitive salary, health benefits, and opportunities for professional growth.`,\n      companyInfo: `${job.company} is a leading technology company that provides innovative solutions to businesses worldwide. We are committed to creating a diverse and inclusive workplace where all employees can thrive.\n\nOur mission is to build products that make people's lives easier and more productive. We value collaboration, innovation, and continuous learning.`,\n      benefits: ['Competitive salary and equity', 'Health, dental, and vision insurance', 'Flexible working hours', 'Remote work options', 'Professional development budget', 'Generous paid time off'],\n      applicationUrl: job.sourceUrl\n    };\n    return jobDetail;\n  }\n}\nexport default LinkedInApiAdapter;","map":{"version":3,"names":["ApiAdapter","buildQueryString","logoService","formatRelativeDate","extractSkills","extractTeam","estimateSalary","generateRandomStats","extractQualifications","LinkedInApiAdapter","constructor","options","clientId","clientSecret","redirectUri","window","location","origin","accessToken","tokenExpiry","getAuthorizationUrl","params","response_type","client_id","redirect_uri","scope","state","Math","random","toString","substring","getAccessToken","code","grant_type","client_secret","response","request","method","headers","body","URLSearchParams","access_token","Date","now","expires_in","expiresIn","expiryDate","error","handleError","isTokenValid","ensureValidToken","Error","searchJobs","searchTerm","filters","page","getClientCredentialsToken","tokenError","console","log","queryParams","keywords","start","count","jobType","f_JT","mapJobType","jobs","elements","map","job","transformJob","total","paging","pageSize","apiError","getMockLinkedInJobs","errorInfo","fetch","ok","status","data","json","typeMap","getJobDetails","jobId","transformJobDetail","getMockJobDetails","linkedInJob","id","title","company","name","companyLogo","logoUrl","toLowerCase","replace","type","salary","team","postedDate","listedAt","views","applicants","description","skills","source","sourceUrl","url","sourceId","linkedInJobDetail","qualifications","minimumQualifications","preferredQualifications","aboutJob","companyInfo","companyDetails","benefits","applicationUrl","applyUrl","allJobs","filteredJobs","filter","includes","startIndex","endIndex","paginatedJobs","slice","transformedJobs","length","find","jobDetail"],"sources":["D:/Kiro/remote-job-website/src/services/api/LinkedInApiAdapter.js"],"sourcesContent":["// LinkedIn API适配器\r\n// 处理LinkedIn Jobs API的请求和响应\r\n\r\nimport ApiAdapter from './ApiAdapter';\r\nimport { buildQueryString } from './httpUtils';\r\nimport logoService from '../logoService';\r\nimport { \r\n  formatRelativeDate, \r\n  extractSkills, \r\n  extractTeam, \r\n  estimateSalary, \r\n  generateRandomStats,\r\n  extractQualifications\r\n} from './responseTransformer';\r\n\r\nclass LinkedInApiAdapter extends ApiAdapter {\r\n  constructor(options = {}) {\r\n    // LinkedIn API基础URL\r\n    super('https://api.linkedin.com/v2', options);\r\n    \r\n    this.clientId = options.clientId || '';\r\n    this.clientSecret = options.clientSecret || '';\r\n    this.redirectUri = options.redirectUri || window.location.origin;\r\n    this.accessToken = options.accessToken || '';\r\n    this.tokenExpiry = options.tokenExpiry || 0;\r\n  }\r\n\r\n  /**\r\n   * 获取OAuth授权URL\r\n   * @returns {string} - 授权URL\r\n   */\r\n  getAuthorizationUrl() {\r\n    const params = {\r\n      response_type: 'code',\r\n      client_id: this.clientId,\r\n      redirect_uri: this.redirectUri,\r\n      scope: 'r_liteprofile r_emailaddress w_member_social',\r\n      state: Math.random().toString(36).substring(2)\r\n    };\r\n    \r\n    return `https://www.linkedin.com/oauth/v2/authorization${buildQueryString(params)}`;\r\n  }\r\n\r\n  /**\r\n   * 使用授权码获取访问令牌\r\n   * @param {string} code - 授权码\r\n   * @returns {Promise<Object>} - 包含访问令牌的对象\r\n   */\r\n  async getAccessToken(code) {\r\n    const params = {\r\n      grant_type: 'authorization_code',\r\n      code,\r\n      client_id: this.clientId,\r\n      client_secret: this.clientSecret,\r\n      redirect_uri: this.redirectUri\r\n    };\r\n    \r\n    try {\r\n      const response = await this.request('/oauth/v2/accessToken', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: new URLSearchParams(params)\r\n      });\r\n      \r\n      this.accessToken = response.access_token;\r\n      this.tokenExpiry = Date.now() + (response.expires_in * 1000);\r\n      \r\n      return {\r\n        accessToken: this.accessToken,\r\n        expiresIn: response.expires_in,\r\n        expiryDate: new Date(this.tokenExpiry)\r\n      };\r\n    } catch (error) {\r\n      throw this.handleError(error, 'LinkedIn OAuth');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检查访问令牌是否有效\r\n   * @returns {boolean} - 令牌是否有效\r\n   */\r\n  isTokenValid() {\r\n    return this.accessToken && this.tokenExpiry > Date.now();\r\n  }\r\n\r\n  /**\r\n   * 确保有有效的访问令牌\r\n   * @returns {Promise<void>}\r\n   */\r\n  async ensureValidToken() {\r\n    if (!this.isTokenValid()) {\r\n      throw new Error('LinkedIn access token is invalid or expired. User authentication required.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 搜索工作\r\n   * @param {string} searchTerm - 搜索关键词\r\n   * @param {Object} filters - 筛选条件\r\n   * @param {number} page - 页码\r\n   * @returns {Promise<Object>} - 工作搜索结果\r\n   */\r\n  async searchJobs(searchTerm = '', filters = {}, page = 0) {\r\n    try {\r\n      // 检查是否有有效的访问令牌\r\n      if (!this.isTokenValid() && this.clientId && this.clientSecret) {\r\n        try {\r\n          // 尝试使用客户端凭据流程获取访问令牌\r\n          await this.getClientCredentialsToken();\r\n        } catch (tokenError) {\r\n          console.error('Failed to get LinkedIn access token:', tokenError);\r\n          // 继续使用模拟数据\r\n        }\r\n      }\r\n      \r\n      console.log('Searching LinkedIn jobs with term:', searchTerm, 'filters:', filters, 'page:', page);\r\n      \r\n      // 如果有有效的访问令牌，尝试使用真实API\r\n      if (this.isTokenValid()) {\r\n        try {\r\n          // 构建查询参数\r\n          const queryParams = {\r\n            keywords: searchTerm,\r\n            location: filters.location || 'worldwide',\r\n            start: page * 10, // 每页10个结果\r\n            count: 10\r\n          };\r\n          \r\n          // 添加筛选条件\r\n          if (filters.jobType) {\r\n            queryParams.f_JT = this.mapJobType(filters.jobType);\r\n          }\r\n          \r\n          // 发送API请求\r\n          const response = await this.request(`/jobs/search${buildQueryString(queryParams)}`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n          });\r\n          \r\n          // 转换响应数据\r\n          const jobs = response.elements.map(job => this.transformJob(job));\r\n          \r\n          return {\r\n            jobs,\r\n            total: response.paging.total,\r\n            page,\r\n            pageSize: 10\r\n          };\r\n        } catch (apiError) {\r\n          console.error('LinkedIn API request failed:', apiError);\r\n          // 如果API请求失败，回退到模拟数据\r\n        }\r\n      }\r\n      \r\n      // 如果没有有效的访问令牌或API请求失败，使用模拟数据\r\n      console.log('Using mock data for LinkedIn jobs');\r\n      return this.getMockLinkedInJobs(searchTerm, filters, page);\r\n    } catch (error) {\r\n      const errorInfo = this.handleError(error, 'LinkedIn Jobs Search');\r\n      \r\n      // 返回空结果\r\n      return {\r\n        jobs: [],\r\n        total: 0,\r\n        page: page,\r\n        pageSize: 10\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 使用客户端凭据流程获取访问令牌\r\n   * @returns {Promise<Object>} - 包含访问令牌的对象\r\n   */\r\n  async getClientCredentialsToken() {\r\n    const params = {\r\n      grant_type: 'client_credentials',\r\n      client_id: this.clientId,\r\n      client_secret: this.clientSecret,\r\n      scope: 'r_liteprofile r_emailaddress w_member_social'\r\n    };\r\n    \r\n    try {\r\n      const response = await fetch('https://www.linkedin.com/oauth/v2/accessToken', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: new URLSearchParams(params)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to get access token: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      this.accessToken = data.access_token;\r\n      this.tokenExpiry = Date.now() + (data.expires_in * 1000);\r\n      \r\n      return {\r\n        accessToken: this.accessToken,\r\n        expiresIn: data.expires_in,\r\n        expiryDate: new Date(this.tokenExpiry)\r\n      };\r\n    } catch (error) {\r\n      throw this.handleError(error, 'LinkedIn OAuth Client Credentials');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 将工作类型映射到LinkedIn API参数\r\n   * @param {string} jobType - 工作类型\r\n   * @returns {string} - LinkedIn API参数\r\n   */\r\n  mapJobType(jobType) {\r\n    const typeMap = {\r\n      'Full-time': 'F',\r\n      'Part-time': 'P',\r\n      'Contract': 'C',\r\n      'Temporary': 'T',\r\n      'Volunteer': 'V',\r\n      'Internship': 'I'\r\n    };\r\n    \r\n    return typeMap[jobType] || 'F';\r\n  }\r\n\r\n  /**\r\n   * 获取工作详情\r\n   * @param {string} jobId - 工作ID\r\n   * @returns {Promise<Object>} - 工作详情\r\n   */\r\n  async getJobDetails(jobId) {\r\n    try {\r\n      // 检查是否有有效的访问令牌\r\n      if (!this.isTokenValid() && this.clientId && this.clientSecret) {\r\n        try {\r\n          // 尝试使用客户端凭据流程获取访问令牌\r\n          await this.getClientCredentialsToken();\r\n        } catch (tokenError) {\r\n          console.error('Failed to get LinkedIn access token:', tokenError);\r\n          // 继续使用模拟数据\r\n        }\r\n      }\r\n      \r\n      console.log('Fetching LinkedIn job details for ID:', jobId);\r\n      \r\n      // 如果有有效的访问令牌，尝试使用真实API\r\n      if (this.isTokenValid()) {\r\n        try {\r\n          // 发送API请求\r\n          const response = await this.request(`/jobs/${jobId}`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n          });\r\n          \r\n          // 转换响应数据\r\n          return this.transformJobDetail(response);\r\n        } catch (apiError) {\r\n          console.error('LinkedIn API request failed:', apiError);\r\n          // 如果API请求失败，回退到模拟数据\r\n        }\r\n      }\r\n      \r\n      // 如果没有有效的访问令牌或API请求失败，使用模拟数据\r\n      console.log('Using mock data for LinkedIn job details');\r\n      return this.getMockJobDetails(jobId);\r\n    } catch (error) {\r\n      throw this.handleError(error, 'LinkedIn Job Details');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 将LinkedIn工作数据转换为统一格式\r\n   * @param {Object} linkedInJob - LinkedIn工作数据\r\n   * @returns {Object} - 统一格式的工作数据\r\n   */\r\n  transformJob(linkedInJob) {\r\n    return {\r\n      id: linkedInJob.id,\r\n      title: linkedInJob.title,\r\n      company: linkedInJob.company.name,\r\n      companyLogo: linkedInJob.company.logoUrl || `https://logo.clearbit.com/${linkedInJob.company.name.toLowerCase().replace(/\\s+/g, '')}.com`,\r\n      location: linkedInJob.location || 'Remote',\r\n      type: linkedInJob.jobType || 'Full-time',\r\n      salary: estimateSalary(linkedInJob.title),\r\n      team: extractTeam(linkedInJob.title),\r\n      postedDate: formatRelativeDate(linkedInJob.listedAt),\r\n      views: linkedInJob.views || generateRandomStats().views,\r\n      applicants: linkedInJob.applicants || generateRandomStats().applicants,\r\n      description: linkedInJob.description || 'No description available',\r\n      skills: extractSkills(linkedInJob.description || linkedInJob.title),\r\n      source: 'LinkedIn',\r\n      sourceUrl: linkedInJob.url || `https://www.linkedin.com/jobs/view/${linkedInJob.id}`,\r\n      sourceId: linkedInJob.id\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 将LinkedIn工作详情转换为统一格式\r\n   * @param {Object} linkedInJobDetail - LinkedIn工作详情\r\n   * @returns {Object} - 统一格式的工作详情\r\n   */\r\n  transformJobDetail(linkedInJobDetail) {\r\n    const qualifications = extractQualifications(linkedInJobDetail.description || '');\r\n    \r\n    return {\r\n      ...this.transformJob(linkedInJobDetail),\r\n      minimumQualifications: qualifications.minimumQualifications,\r\n      preferredQualifications: qualifications.preferredQualifications,\r\n      aboutJob: linkedInJobDetail.description || 'No description available',\r\n      companyInfo: linkedInJobDetail.companyDetails || 'No company information available',\r\n      benefits: linkedInJobDetail.benefits || [],\r\n      applicationUrl: linkedInJobDetail.applyUrl || `https://www.linkedin.com/jobs/view/${linkedInJobDetail.id}`\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取模拟的LinkedIn工作数据\r\n   * @param {string} searchTerm - 搜索关键词\r\n   * @param {Object} filters - 筛选条件\r\n   * @param {number} page - 页码\r\n   * @returns {Object} - 工作搜索结果\r\n   */\r\n  getMockLinkedInJobs(searchTerm = '', filters = {}, page = 0) {\r\n    const pageSize = 10;\r\n    \r\n    const allJobs = [\r\n      {\r\n        id: 'li-1',\r\n        title: 'Senior Frontend Developer',\r\n        company: {\r\n          name: 'Microsoft',\r\n          logoUrl: 'https://logo.clearbit.com/microsoft.com'\r\n        },\r\n        location: 'Remote - US',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-20T10:30:00Z',\r\n        views: 412,\r\n        applicants: 45,\r\n        description: 'Join our team to build innovative web applications using React and TypeScript. You will work on challenging projects and collaborate with talented engineers.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-1'\r\n      },\r\n      {\r\n        id: 'li-2',\r\n        title: 'Product Manager - Remote',\r\n        company: {\r\n          name: 'Amazon',\r\n          logoUrl: 'https://logo.clearbit.com/amazon.com'\r\n        },\r\n        location: 'Remote - Global',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-18T14:15:00Z',\r\n        views: 378,\r\n        applicants: 32,\r\n        description: 'Lead product development for our innovative platform. Define product strategy and work closely with engineering teams to deliver exceptional user experiences.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-2'\r\n      },\r\n      {\r\n        id: 'li-3',\r\n        title: 'Senior Frontend Engineer',\r\n        company: {\r\n          name: 'Google',\r\n          logoUrl: 'https://logo.clearbit.com/google.com'\r\n        },\r\n        location: 'Remote - Europe',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-19T09:45:00Z',\r\n        views: 521,\r\n        applicants: 37,\r\n        description: 'Join our team to build and improve the Google web applications. You will work with cutting-edge technologies and contribute to products used by millions.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-3'\r\n      },\r\n      {\r\n        id: 'li-4',\r\n        title: 'Data Scientist',\r\n        company: {\r\n          name: 'Netflix',\r\n          logoUrl: 'https://logo.clearbit.com/netflix.com'\r\n        },\r\n        location: 'Remote - US',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-16T11:20:00Z',\r\n        views: 456,\r\n        applicants: 48,\r\n        description: 'Apply machine learning and statistical analysis to improve our recommendation systems. Work with large datasets and develop algorithms that enhance user experience.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-4'\r\n      },\r\n      {\r\n        id: 'li-5',\r\n        title: 'UX Researcher',\r\n        company: {\r\n          name: 'Slack',\r\n          logoUrl: 'https://logo.clearbit.com/slack.com'\r\n        },\r\n        location: 'Remote - Americas',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-14T13:10:00Z',\r\n        views: 298,\r\n        applicants: 23,\r\n        description: 'Conduct user research to inform product decisions and improve user experience. Design and execute user studies, analyze data, and present findings to stakeholders.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-5'\r\n      },\r\n      {\r\n        id: 'li-6',\r\n        title: 'DevOps Engineer',\r\n        company: {\r\n          name: 'Atlassian',\r\n          logoUrl: 'https://logo.clearbit.com/atlassian.com'\r\n        },\r\n        location: 'Remote - Global',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-17T08:30:00Z',\r\n        views: 342,\r\n        applicants: 29,\r\n        description: 'Build and maintain our cloud infrastructure using Kubernetes, Docker, and AWS. Implement CI/CD pipelines and ensure high availability of our services.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-6'\r\n      },\r\n      {\r\n        id: 'li-7',\r\n        title: 'Backend Developer (Python)',\r\n        company: {\r\n          name: 'Dropbox',\r\n          logoUrl: 'https://logo.clearbit.com/dropbox.com'\r\n        },\r\n        location: 'Remote - US',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-15T15:45:00Z',\r\n        views: 387,\r\n        applicants: 41,\r\n        description: 'Develop and maintain our backend services using Python and Django. Design and implement APIs, optimize database queries, and ensure scalability.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-7'\r\n      },\r\n      {\r\n        id: 'li-8',\r\n        title: 'Mobile Developer (React Native)',\r\n        company: {\r\n          name: 'Spotify',\r\n          logoUrl: 'https://logo.clearbit.com/spotify.com'\r\n        },\r\n        location: 'Remote - Europe',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-18T10:20:00Z',\r\n        views: 312,\r\n        applicants: 27,\r\n        description: 'Build and improve our mobile applications using React Native. Implement new features, fix bugs, and ensure a smooth user experience across different devices.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-8'\r\n      },\r\n      {\r\n        id: 'li-9',\r\n        title: 'Technical Writer',\r\n        company: {\r\n          name: 'GitHub',\r\n          logoUrl: 'https://logo.clearbit.com/github.com'\r\n        },\r\n        location: 'Remote - Global',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-13T09:15:00Z',\r\n        views: 245,\r\n        applicants: 19,\r\n        description: 'Create and maintain technical documentation for our products. Work closely with engineering teams to ensure accurate and comprehensive documentation.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-9'\r\n      },\r\n      {\r\n        id: 'li-10',\r\n        title: 'Security Engineer',\r\n        company: {\r\n          name: 'Cloudflare',\r\n          logoUrl: 'https://logo.clearbit.com/cloudflare.com'\r\n        },\r\n        location: 'Remote - US',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-16T14:30:00Z',\r\n        views: 289,\r\n        applicants: 31,\r\n        description: 'Identify and address security vulnerabilities in our systems. Implement security best practices and ensure compliance with industry standards.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-10'\r\n      }\r\n    ];\r\n    \r\n    // 如果有搜索词，过滤结果\r\n    let filteredJobs = allJobs;\r\n    if (searchTerm) {\r\n      filteredJobs = allJobs.filter(job => \r\n        job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        job.company.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        job.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    // 应用位置筛选\r\n    if (filters.location) {\r\n      filteredJobs = filteredJobs.filter(job => \r\n        job.location.toLowerCase().includes(filters.location.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    // 应用工作类型筛选\r\n    if (filters.jobType) {\r\n      filteredJobs = filteredJobs.filter(job => \r\n        job.jobType.toLowerCase() === filters.jobType.toLowerCase()\r\n      );\r\n    }\r\n    \r\n    // 计算分页\r\n    const startIndex = page * pageSize;\r\n    const endIndex = startIndex + pageSize;\r\n    const paginatedJobs = filteredJobs.slice(startIndex, endIndex);\r\n    \r\n    // 转换为统一格式\r\n    const transformedJobs = paginatedJobs.map(job => this.transformJob(job));\r\n    \r\n    return {\r\n      jobs: transformedJobs,\r\n      total: filteredJobs.length,\r\n      page: page,\r\n      pageSize: pageSize\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取模拟的工作详情\r\n   * @param {string} jobId - 工作ID\r\n   * @returns {Object} - 工作详情\r\n   */\r\n  getMockJobDetails(jobId) {\r\n    // 查找基本工作信息\r\n    const allJobs = this.getMockLinkedInJobs('', {}, 0).jobs;\r\n    const job = allJobs.find(job => job.id === jobId);\r\n    \r\n    if (!job) {\r\n      throw new Error(`Job with ID ${jobId} not found`);\r\n    }\r\n    \r\n    // 添加详细信息\r\n    const jobDetail = {\r\n      ...job,\r\n      minimumQualifications: [\r\n        '5+ years of experience in frontend development',\r\n        'Strong proficiency with JavaScript, HTML, and CSS',\r\n        'Experience with React or similar frontend frameworks',\r\n        'Bachelor\\'s degree in Computer Science or related field',\r\n        'Excellent problem-solving skills'\r\n      ],\r\n      preferredQualifications: [\r\n        'Experience with TypeScript and state management libraries',\r\n        'Knowledge of web accessibility standards',\r\n        'Experience with CI/CD pipelines',\r\n        'Contributions to open-source projects',\r\n        'Experience with agile development methodologies'\r\n      ],\r\n      aboutJob: `We are looking for a talented ${job.title} to join our team. You will be responsible for developing and maintaining web applications, collaborating with cross-functional teams, and ensuring high-quality code.\r\n\r\nKey Responsibilities:\r\n- Develop and maintain frontend applications using modern JavaScript frameworks\r\n- Collaborate with designers to implement user interfaces\r\n- Write clean, maintainable, and efficient code\r\n- Participate in code reviews and provide constructive feedback\r\n- Troubleshoot and fix bugs in existing applications\r\n\r\nThis is a remote position with flexible working hours. We offer competitive salary, health benefits, and opportunities for professional growth.`,\r\n      companyInfo: `${job.company} is a leading technology company that provides innovative solutions to businesses worldwide. We are committed to creating a diverse and inclusive workplace where all employees can thrive.\r\n\r\nOur mission is to build products that make people's lives easier and more productive. We value collaboration, innovation, and continuous learning.`,\r\n      benefits: [\r\n        'Competitive salary and equity',\r\n        'Health, dental, and vision insurance',\r\n        'Flexible working hours',\r\n        'Remote work options',\r\n        'Professional development budget',\r\n        'Generous paid time off'\r\n      ],\r\n      applicationUrl: job.sourceUrl\r\n    };\r\n    \r\n    return jobDetail;\r\n  }\r\n}\r\n\r\nexport default LinkedInApiAdapter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}