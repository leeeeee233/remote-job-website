{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kiro\\\\remote-job-website\\\\src\\\\pages\\\\JobFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Header from '../components/Header';\nimport JobCard from '../components/JobCard';\nimport JobDetailsDrawer from '../components/JobDetailsDrawer';\nimport { mockJobs } from '../services/mockData';\nimport jobService from '../services/jobService';\nimport './JobFeed.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobFeed = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searching, setSearching] = useState(false);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [activeFilters, setActiveFilters] = useState([]);\n  const [dataSources, setDataSources] = useState([]);\n  const observer = useRef();\n  const lastJobElementRef = useCallback(node => {\n    if (loading || loadingMore) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        loadMoreJobs();\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, loadingMore, hasMore]);\n\n  // 加载更多工作\n  const loadMoreJobs = async () => {\n    if (loadingMore || !hasMore) return;\n    setLoadingMore(true);\n    try {\n      const nextPage = page + 1;\n      const designSearchTerms = searchTerm || '';\n      const result = await jobService.searchRemoteJobs(designSearchTerms, {\n        ...activeFilters,\n        category: 'design',\n        page: nextPage\n      });\n      if (result.jobs.length === 0) {\n        setHasMore(false);\n      } else {\n        // 过滤出只包含UX designer和Product designer的工作\n        const designJobs = filterDesignJobs(result.jobs);\n        if (designJobs.length === 0) {\n          setHasMore(false);\n        } else {\n          setJobs(prevJobs => [...prevJobs, ...designJobs]);\n          setFilteredJobs(prevFiltered => [...prevFiltered, ...designJobs]);\n          setPage(nextPage);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load more jobs:', error);\n    } finally {\n      setLoadingMore(false);\n    }\n  };\n\n  // 过滤函数：只保留UX designer和Product designer的工作\n  const filterDesignJobs = jobs => {\n    console.log('Filtering jobs, total jobs:', jobs.length);\n    const filteredJobs = jobs.filter(job => {\n      const title = job.title.toLowerCase();\n      const description = job.description ? job.description.toLowerCase() : '';\n      const skills = job.skills ? job.skills.join(' ').toLowerCase() : '';\n      const company = job.company ? job.company.toLowerCase() : '';\n\n      // 扩展的UX designer相关关键词\n      const uxKeywords = ['ux', 'user experience', 'ux designer', 'ux/ui', 'ui/ux', 'user interface', 'interaction design', 'usability', 'user research', 'experience design', 'design researcher', 'ux research'];\n\n      // 扩展的Product designer相关关键词\n      const productKeywords = ['product designer', 'product design', 'digital product', 'product manager', 'design lead', 'senior designer', 'visual designer', 'graphic designer', 'web designer'];\n\n      // 检查是否包含UX相关关键词\n      const isUXDesigner = uxKeywords.some(keyword => title.includes(keyword) || description.includes(keyword) || skills.includes(keyword));\n\n      // 检查是否包含Product designer相关关键词\n      const isProductDesigner = productKeywords.some(keyword => title.includes(keyword) || description.includes(keyword) || skills.includes(keyword));\n\n      // 检查是否同时包含\"product\"和\"design\"\n      const hasProductAndDesign = title.includes('product') && title.includes('design') || description.includes('product') && description.includes('design');\n      const isDesignJob = isUXDesigner || isProductDesigner || hasProductAndDesign;\n      if (isDesignJob) {\n        console.log('Found design job:', job.title, 'at', job.company);\n      }\n      return isDesignJob;\n    });\n    console.log('Filtered jobs count:', filteredJobs.length);\n    return filteredJobs;\n  };\n  useEffect(() => {\n    // 获取真实的远程工作数据\n    const fetchJobs = async () => {\n      setLoading(true);\n      setJobs([]);\n      setFilteredJobs([]);\n      setPage(0);\n      setHasMore(true);\n      try {\n        // 使用更通用的搜索词来获取更多结果\n        const designSearchTerms = searchTerm || '';\n\n        // 尝试从真实API获取数据\n        const result = await jobService.searchRemoteJobs(designSearchTerms, {\n          ...activeFilters,\n          category: 'design' // 如果API支持分类，优先获取设计类工作\n        });\n\n        // 先查看所有返回的工作，然后再过滤\n        console.log('All jobs returned from API:', result.jobs.length);\n        console.log('Sample jobs:', result.jobs.slice(0, 5).map(job => ({\n          title: job.title,\n          company: job.company,\n          description: job.description ? job.description.substring(0, 100) + '...' : 'No description',\n          skills: job.skills\n        })));\n\n        // 过滤出只包含UX designer和Product designer的工作\n        const designJobs = filterDesignJobs(result.jobs);\n\n        // 如果没有找到设计工作，显示所有工作\n        if (designJobs.length === 0) {\n          console.log('No design jobs found, showing all jobs');\n          setJobs(result.jobs);\n          setFilteredJobs(result.jobs);\n        } else {\n          console.log(`Found ${designJobs.length} design jobs out of ${result.jobs.length} total jobs`);\n          setJobs(designJobs);\n          setFilteredJobs(designJobs);\n        }\n        setDataSources(result.sources || []);\n\n        // 如果返回的工作数量小于预期，可能没有更多数据了\n        if (result.jobs.length < 20) {\n          setHasMore(false);\n        }\n      } catch (error) {\n        console.error('Failed to fetch jobs from API, using mock data:', error);\n        // 如果API失败，使用模拟数据作为后备，但仍然过滤设计工作\n        const filteredMockJobs = filterDesignJobs(mockJobs);\n        setJobs(filteredMockJobs);\n        setFilteredJobs(filteredMockJobs);\n        setDataSources(['Mock Data']);\n        setHasMore(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, [searchTerm, JSON.stringify(activeFilters)]);\n  const handleSearch = term => {\n    // 更新搜索词状态\n    if (term !== undefined && term !== null) {\n      setSearchTerm(term);\n    }\n\n    // 设置搜索状态为正在搜索\n    setSearching(true);\n\n    // 使用setTimeout模拟搜索延迟，提供更好的用户体验\n    setTimeout(() => {\n      // 重新应用筛选器，包括新的搜索词\n      applyFiltersToJobs(activeFilters);\n      setSearching(false);\n    }, 300); // 300ms的延迟，提供更流畅的搜索体验\n  };\n  const handleFilter = filterIds => {\n    console.log('筛选器更新:', filterIds);\n\n    // 立即应用筛选到当前已加载的工作\n    applyFiltersToJobs(filterIds);\n  };\n\n  // 应用筛选器到工作列表\n  const applyFiltersToJobs = filterIds => {\n    let results = [...jobs];\n\n    // 首先按搜索词过滤\n    if (searchTerm) {\n      results = results.filter(job => job.title.toLowerCase().includes(searchTerm.toLowerCase()) || job.company.toLowerCase().includes(searchTerm.toLowerCase()) || job.location.toLowerCase().includes(searchTerm.toLowerCase()) || job.description && job.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    // 然后按职位类型筛选\n    if (filterIds && filterIds.length > 0) {\n      results = results.filter(job => {\n        const title = job.title.toLowerCase();\n        const description = job.description ? job.description.toLowerCase() : '';\n        const skills = job.skills ? job.skills.join(' ').toLowerCase() : '';\n\n        // 检查每个激活的筛选器\n        return filterIds.some(filterId => {\n          switch (filterId) {\n            case 'ux-designer':\n              return title.includes('ux') || title.includes('user experience') || description.includes('ux') || description.includes('user experience') || skills.includes('ux') || skills.includes('user experience');\n            case 'ui-designer':\n              return title.includes('ui') || title.includes('user interface') || description.includes('ui') || description.includes('user interface') || skills.includes('ui') || skills.includes('user interface');\n            case 'product-designer':\n              return title.includes('product') || title.includes('product design') || description.includes('product design') || skills.includes('product design') || title.includes('product') && (title.includes('design') || description.includes('design'));\n            case 'visual-identity':\n              return title.includes('visual') || title.includes('graphic') || title.includes('brand') || title.includes('identity') || description.includes('visual') || description.includes('graphic') || description.includes('brand') || skills.includes('visual') || skills.includes('graphic design');\n            default:\n              return false;\n          }\n        });\n      });\n    }\n    console.log(`筛选结果: ${results.length} 个工作 (原始: ${jobs.length}, 筛选器: ${filterIds})`);\n    setFilteredJobs(results);\n  };\n\n  // 处理工作卡片点击\n  const handleJobSelect = job => {\n    setSelectedJob(job);\n    setIsDrawerOpen(true);\n  };\n\n  // 处理关闭抽屉\n  const handleCloseDrawer = () => {\n    setIsDrawerOpen(false);\n  };\n\n  // 处理申请工作\n  const handleApplyJob = jobId => {\n    console.log(`Applying for job: ${jobId}`);\n\n    // 直接使用selectedJob，而不是从jobs数组中查找\n    const job = selectedJob;\n    if (!job) {\n      console.error('No selected job found');\n      alert('无法找到选中的工作');\n      return;\n    }\n\n    // 详细记录工作对象，帮助调试\n    console.log('Selected job details:', {\n      id: job.id,\n      title: job.title,\n      company: job.company,\n      source: job.source,\n      sourceUrl: job.sourceUrl,\n      sourceId: job.sourceId\n    });\n\n    // 创建一个隐藏的a标签来打开链接，这样可以避免弹出窗口被阻止\n    const openLink = url => {\n      console.log(`Attempting to open URL: ${url}`);\n\n      // 创建一个隐藏的a标签\n      const link = document.createElement('a');\n      link.href = url;\n      link.target = '_blank';\n      link.rel = 'noopener noreferrer';\n\n      // 添加到文档中并触发点击\n      document.body.appendChild(link);\n      link.click();\n\n      // 清理\n      setTimeout(() => {\n        document.body.removeChild(link);\n      }, 100);\n    };\n    let finalUrl = '';\n    if (job.sourceUrl) {\n      // 如果有源URL，使用它\n      console.log(`Using source URL: ${job.sourceUrl}`);\n      finalUrl = job.sourceUrl;\n    } else if (job.source) {\n      // 如果没有源URL但有来源信息，尝试构建URL\n      switch (job.source) {\n        case 'LinkedIn':\n          finalUrl = `https://www.linkedin.com/jobs/view/${job.sourceId || job.id}`;\n          break;\n        case 'WeWorkRemotely':\n          // 尝试使用更可能正确的WeWorkRemotely URL格式\n          if (job.company && job.title) {\n            // 将公司名和职位名转换为URL友好的格式\n            const companySlug = job.company.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n            const titleSlug = job.title.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n            finalUrl = `https://weworkremotely.com/remote-jobs/${companySlug}-${titleSlug}`;\n          } else {\n            finalUrl = `https://weworkremotely.com/remote-jobs/${job.sourceId || job.id}`;\n          }\n          break;\n        case 'RemoteOK':\n          finalUrl = `https://remoteok.io/l/${job.sourceId || job.id}`;\n          break;\n        default:\n          // 如果无法确定来源，尝试使用通用搜索\n          finalUrl = `https://www.google.com/search?q=${encodeURIComponent(`${job.title} ${job.company} job`)}`;\n      }\n      console.log(`Constructed URL: ${finalUrl}`);\n    } else {\n      // 如果没有任何链接信息，显示提示并使用Google搜索\n      console.error('No source URL or source information found for job:', job);\n      finalUrl = `https://www.google.com/search?q=${encodeURIComponent(`${job.title} ${job.company} job`)}`;\n      alert('无法找到精确的工作链接，将使用Google搜索');\n    }\n\n    // 尝试打开链接\n    if (finalUrl) {\n      openLink(finalUrl);\n    } else {\n      alert('无法生成有效的工作链接');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `job-feed ${isDrawerOpen ? 'drawer-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onSearch: term => handleSearch(term),\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-list-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this) : searching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searching-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Searching...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: filteredJobs.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-count\",\n            children: [\"\\u627E\\u5230 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"count-highlight\",\n              children: filteredJobs.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 22\n            }, this), \" \\u4E2A\\u5DE5\\u4F5C\\u673A\\u4F1A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-sources\",\n            children: [\"\\u6570\\u636E\\u6765\\u6E90: \", dataSources.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-list\",\n            children: [filteredJobs.map((job, index) => {\n              if (filteredJobs.length === index + 1) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: lastJobElementRef,\n                  children: /*#__PURE__*/_jsxDEV(JobCard, {\n                    job: job,\n                    onSelect: () => handleJobSelect(job)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 27\n                  }, this)\n                }, job.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 25\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(JobCard, {\n                  job: job,\n                  onSelect: () => handleJobSelect(job)\n                }, job.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 25\n                }, this);\n              }\n            }), loadingMore && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-more\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-spinner small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u52A0\\u8F7D\\u66F4\\u591A\\u5DE5\\u4F5C...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-jobs-found\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No jobs found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Try adjusting your search filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JobDetailsDrawer, {\n      job: selectedJob,\n      isOpen: isDrawerOpen,\n      onClose: handleCloseDrawer,\n      onApply: handleApplyJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 5\n  }, this);\n};\n_s(JobFeed, \"W2fB52hjwZmbqxirzEqic17MsFY=\");\n_c = JobFeed;\nexport default JobFeed;\nvar _c;\n$RefreshReg$(_c, \"JobFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Header","JobCard","JobDetailsDrawer","mockJobs","jobService","jsxDEV","_jsxDEV","Fragment","_Fragment","JobFeed","_s","jobs","setJobs","filteredJobs","setFilteredJobs","loading","setLoading","searchTerm","setSearchTerm","searching","setSearching","selectedJob","setSelectedJob","isDrawerOpen","setIsDrawerOpen","page","setPage","hasMore","setHasMore","loadingMore","setLoadingMore","activeFilters","setActiveFilters","dataSources","setDataSources","observer","lastJobElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","loadMoreJobs","observe","nextPage","designSearchTerms","result","searchRemoteJobs","category","length","designJobs","filterDesignJobs","prevJobs","prevFiltered","error","console","log","filter","job","title","toLowerCase","description","skills","join","company","uxKeywords","productKeywords","isUXDesigner","some","keyword","includes","isProductDesigner","hasProductAndDesign","isDesignJob","fetchJobs","slice","map","substring","sources","filteredMockJobs","JSON","stringify","handleSearch","term","undefined","setTimeout","applyFiltersToJobs","handleFilter","filterIds","results","location","filterId","handleJobSelect","handleCloseDrawer","handleApplyJob","jobId","alert","id","source","sourceUrl","sourceId","openLink","url","link","document","createElement","href","target","rel","body","appendChild","click","removeChild","finalUrl","companySlug","replace","titleSlug","encodeURIComponent","className","children","onSearch","onFilter","fileName","_jsxFileName","lineNumber","columnNumber","index","ref","onSelect","isOpen","onClose","onApply","_c","$RefreshReg$"],"sources":["D:/Kiro/remote-job-website/src/pages/JobFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport Header from '../components/Header';\r\nimport JobCard from '../components/JobCard';\r\nimport JobDetailsDrawer from '../components/JobDetailsDrawer';\r\nimport { mockJobs } from '../services/mockData';\r\nimport jobService from '../services/jobService';\r\nimport './JobFeed.css';\r\n\r\nconst JobFeed = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searching, setSearching] = useState(false);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [activeFilters, setActiveFilters] = useState([]);\r\n  const [dataSources, setDataSources] = useState([]);\r\n  const observer = useRef();\r\n  const lastJobElementRef = useCallback(node => {\r\n    if (loading || loadingMore) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        loadMoreJobs();\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, [loading, loadingMore, hasMore]);\r\n\r\n  // 加载更多工作\r\n  const loadMoreJobs = async () => {\r\n    if (loadingMore || !hasMore) return;\r\n    \r\n    setLoadingMore(true);\r\n    try {\r\n      const nextPage = page + 1;\r\n      const designSearchTerms = searchTerm || '';\r\n      \r\n      const result = await jobService.searchRemoteJobs(designSearchTerms, {\r\n        ...activeFilters,\r\n        category: 'design',\r\n        page: nextPage\r\n      });\r\n      \r\n      if (result.jobs.length === 0) {\r\n        setHasMore(false);\r\n      } else {\r\n        // 过滤出只包含UX designer和Product designer的工作\r\n        const designJobs = filterDesignJobs(result.jobs);\r\n        \r\n        if (designJobs.length === 0) {\r\n          setHasMore(false);\r\n        } else {\r\n          setJobs(prevJobs => [...prevJobs, ...designJobs]);\r\n          setFilteredJobs(prevFiltered => [...prevFiltered, ...designJobs]);\r\n          setPage(nextPage);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load more jobs:', error);\r\n    } finally {\r\n      setLoadingMore(false);\r\n    }\r\n  };\r\n\r\n  // 过滤函数：只保留UX designer和Product designer的工作\r\n  const filterDesignJobs = (jobs) => {\r\n    console.log('Filtering jobs, total jobs:', jobs.length);\r\n    \r\n    const filteredJobs = jobs.filter(job => {\r\n      const title = job.title.toLowerCase();\r\n      const description = job.description ? job.description.toLowerCase() : '';\r\n      const skills = job.skills ? job.skills.join(' ').toLowerCase() : '';\r\n      const company = job.company ? job.company.toLowerCase() : '';\r\n      \r\n      // 扩展的UX designer相关关键词\r\n      const uxKeywords = [\r\n        'ux', 'user experience', 'ux designer', 'ux/ui', 'ui/ux', \r\n        'user interface', 'interaction design', 'usability', 'user research',\r\n        'experience design', 'design researcher', 'ux research'\r\n      ];\r\n      \r\n      // 扩展的Product designer相关关键词\r\n      const productKeywords = [\r\n        'product designer', 'product design', 'digital product', \r\n        'product manager', 'design lead', 'senior designer',\r\n        'visual designer', 'graphic designer', 'web designer'\r\n      ];\r\n      \r\n      // 检查是否包含UX相关关键词\r\n      const isUXDesigner = uxKeywords.some(keyword => \r\n        title.includes(keyword) || \r\n        description.includes(keyword) || \r\n        skills.includes(keyword)\r\n      );\r\n      \r\n      // 检查是否包含Product designer相关关键词\r\n      const isProductDesigner = productKeywords.some(keyword => \r\n        title.includes(keyword) || \r\n        description.includes(keyword) || \r\n        skills.includes(keyword)\r\n      );\r\n      \r\n      // 检查是否同时包含\"product\"和\"design\"\r\n      const hasProductAndDesign = \r\n        (title.includes('product') && title.includes('design')) ||\r\n        (description.includes('product') && description.includes('design'));\r\n      \r\n      const isDesignJob = isUXDesigner || isProductDesigner || hasProductAndDesign;\r\n      \r\n      if (isDesignJob) {\r\n        console.log('Found design job:', job.title, 'at', job.company);\r\n      }\r\n      \r\n      return isDesignJob;\r\n    });\r\n    \r\n    console.log('Filtered jobs count:', filteredJobs.length);\r\n    return filteredJobs;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 获取真实的远程工作数据\r\n    const fetchJobs = async () => {\r\n      setLoading(true);\r\n      setJobs([]);\r\n      setFilteredJobs([]);\r\n      setPage(0);\r\n      setHasMore(true);\r\n      \r\n      try {\r\n        // 使用更通用的搜索词来获取更多结果\r\n        const designSearchTerms = searchTerm || '';\r\n        \r\n        // 尝试从真实API获取数据\r\n        const result = await jobService.searchRemoteJobs(designSearchTerms, {\r\n          ...activeFilters,\r\n          category: 'design' // 如果API支持分类，优先获取设计类工作\r\n        });\r\n        \r\n        // 先查看所有返回的工作，然后再过滤\r\n        console.log('All jobs returned from API:', result.jobs.length);\r\n        console.log('Sample jobs:', result.jobs.slice(0, 5).map(job => ({\r\n          title: job.title,\r\n          company: job.company,\r\n          description: job.description ? job.description.substring(0, 100) + '...' : 'No description',\r\n          skills: job.skills\r\n        })));\r\n        \r\n        // 过滤出只包含UX designer和Product designer的工作\r\n        const designJobs = filterDesignJobs(result.jobs);\r\n        \r\n        // 如果没有找到设计工作，显示所有工作\r\n        if (designJobs.length === 0) {\r\n          console.log('No design jobs found, showing all jobs');\r\n          setJobs(result.jobs);\r\n          setFilteredJobs(result.jobs);\r\n        } else {\r\n          console.log(`Found ${designJobs.length} design jobs out of ${result.jobs.length} total jobs`);\r\n          setJobs(designJobs);\r\n          setFilteredJobs(designJobs);\r\n        }\r\n        setDataSources(result.sources || []);\r\n        \r\n        // 如果返回的工作数量小于预期，可能没有更多数据了\r\n        if (result.jobs.length < 20) {\r\n          setHasMore(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch jobs from API, using mock data:', error);\r\n        // 如果API失败，使用模拟数据作为后备，但仍然过滤设计工作\r\n        const filteredMockJobs = filterDesignJobs(mockJobs);\r\n        setJobs(filteredMockJobs);\r\n        setFilteredJobs(filteredMockJobs);\r\n        setDataSources(['Mock Data']);\r\n        setHasMore(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [searchTerm, JSON.stringify(activeFilters)]);\r\n\r\n  const handleSearch = (term) => {\r\n    // 更新搜索词状态\r\n    if (term !== undefined && term !== null) {\r\n      setSearchTerm(term);\r\n    }\r\n    \r\n    // 设置搜索状态为正在搜索\r\n    setSearching(true);\r\n    \r\n    // 使用setTimeout模拟搜索延迟，提供更好的用户体验\r\n    setTimeout(() => {\r\n      // 重新应用筛选器，包括新的搜索词\r\n      applyFiltersToJobs(activeFilters);\r\n      setSearching(false);\r\n    }, 300); // 300ms的延迟，提供更流畅的搜索体验\r\n  };\r\n\r\n  const handleFilter = (filterIds) => {\r\n    console.log('筛选器更新:', filterIds);\r\n    \r\n    // 立即应用筛选到当前已加载的工作\r\n    applyFiltersToJobs(filterIds);\r\n  };\r\n\r\n  // 应用筛选器到工作列表\r\n  const applyFiltersToJobs = (filterIds) => {\r\n    let results = [...jobs];\r\n    \r\n    // 首先按搜索词过滤\r\n    if (searchTerm) {\r\n      results = results.filter(job => \r\n        job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        job.company.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        job.location.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (job.description && job.description.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n    \r\n    // 然后按职位类型筛选\r\n    if (filterIds && filterIds.length > 0) {\r\n      results = results.filter(job => {\r\n        const title = job.title.toLowerCase();\r\n        const description = job.description ? job.description.toLowerCase() : '';\r\n        const skills = job.skills ? job.skills.join(' ').toLowerCase() : '';\r\n        \r\n        // 检查每个激活的筛选器\r\n        return filterIds.some(filterId => {\r\n          switch (filterId) {\r\n            case 'ux-designer':\r\n              return title.includes('ux') || \r\n                     title.includes('user experience') || \r\n                     description.includes('ux') || \r\n                     description.includes('user experience') ||\r\n                     skills.includes('ux') ||\r\n                     skills.includes('user experience');\r\n            \r\n            case 'ui-designer':\r\n              return title.includes('ui') || \r\n                     title.includes('user interface') || \r\n                     description.includes('ui') || \r\n                     description.includes('user interface') ||\r\n                     skills.includes('ui') ||\r\n                     skills.includes('user interface');\r\n            \r\n            case 'product-designer':\r\n              return title.includes('product') || \r\n                     title.includes('product design') || \r\n                     description.includes('product design') ||\r\n                     skills.includes('product design') ||\r\n                     (title.includes('product') && (title.includes('design') || description.includes('design')));\r\n            \r\n            case 'visual-identity':\r\n              return title.includes('visual') || \r\n                     title.includes('graphic') || \r\n                     title.includes('brand') ||\r\n                     title.includes('identity') ||\r\n                     description.includes('visual') || \r\n                     description.includes('graphic') ||\r\n                     description.includes('brand') ||\r\n                     skills.includes('visual') ||\r\n                     skills.includes('graphic design');\r\n            \r\n            default:\r\n              return false;\r\n          }\r\n        });\r\n      });\r\n    }\r\n    \r\n    console.log(`筛选结果: ${results.length} 个工作 (原始: ${jobs.length}, 筛选器: ${filterIds})`);\r\n    setFilteredJobs(results);\r\n  };\r\n  \r\n\r\n\r\n  // 处理工作卡片点击\r\n  const handleJobSelect = (job) => {\r\n    setSelectedJob(job);\r\n    setIsDrawerOpen(true);\r\n  };\r\n  \r\n  // 处理关闭抽屉\r\n  const handleCloseDrawer = () => {\r\n    setIsDrawerOpen(false);\r\n  };\r\n  \r\n  // 处理申请工作\r\n  const handleApplyJob = (jobId) => {\r\n    console.log(`Applying for job: ${jobId}`);\r\n    \r\n    // 直接使用selectedJob，而不是从jobs数组中查找\r\n    const job = selectedJob;\r\n    \r\n    if (!job) {\r\n      console.error('No selected job found');\r\n      alert('无法找到选中的工作');\r\n      return;\r\n    }\r\n    \r\n    // 详细记录工作对象，帮助调试\r\n    console.log('Selected job details:', {\r\n      id: job.id,\r\n      title: job.title,\r\n      company: job.company,\r\n      source: job.source,\r\n      sourceUrl: job.sourceUrl,\r\n      sourceId: job.sourceId\r\n    });\r\n    \r\n    // 创建一个隐藏的a标签来打开链接，这样可以避免弹出窗口被阻止\r\n    const openLink = (url) => {\r\n      console.log(`Attempting to open URL: ${url}`);\r\n      \r\n      // 创建一个隐藏的a标签\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.target = '_blank';\r\n      link.rel = 'noopener noreferrer';\r\n      \r\n      // 添加到文档中并触发点击\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      \r\n      // 清理\r\n      setTimeout(() => {\r\n        document.body.removeChild(link);\r\n      }, 100);\r\n    };\r\n    \r\n    let finalUrl = '';\r\n    \r\n    if (job.sourceUrl) {\r\n      // 如果有源URL，使用它\r\n      console.log(`Using source URL: ${job.sourceUrl}`);\r\n      finalUrl = job.sourceUrl;\r\n    } else if (job.source) {\r\n      // 如果没有源URL但有来源信息，尝试构建URL\r\n      switch (job.source) {\r\n        case 'LinkedIn':\r\n          finalUrl = `https://www.linkedin.com/jobs/view/${job.sourceId || job.id}`;\r\n          break;\r\n        case 'WeWorkRemotely':\r\n          // 尝试使用更可能正确的WeWorkRemotely URL格式\r\n          if (job.company && job.title) {\r\n            // 将公司名和职位名转换为URL友好的格式\r\n            const companySlug = job.company.toLowerCase().replace(/[^a-z0-9]+/g, '-');\r\n            const titleSlug = job.title.toLowerCase().replace(/[^a-z0-9]+/g, '-');\r\n            finalUrl = `https://weworkremotely.com/remote-jobs/${companySlug}-${titleSlug}`;\r\n          } else {\r\n            finalUrl = `https://weworkremotely.com/remote-jobs/${job.sourceId || job.id}`;\r\n          }\r\n          break;\r\n        case 'RemoteOK':\r\n          finalUrl = `https://remoteok.io/l/${job.sourceId || job.id}`;\r\n          break;\r\n        default:\r\n          // 如果无法确定来源，尝试使用通用搜索\r\n          finalUrl = `https://www.google.com/search?q=${encodeURIComponent(`${job.title} ${job.company} job`)}`;\r\n      }\r\n      console.log(`Constructed URL: ${finalUrl}`);\r\n    } else {\r\n      // 如果没有任何链接信息，显示提示并使用Google搜索\r\n      console.error('No source URL or source information found for job:', job);\r\n      finalUrl = `https://www.google.com/search?q=${encodeURIComponent(`${job.title} ${job.company} job`)}`;\r\n      alert('无法找到精确的工作链接，将使用Google搜索');\r\n    }\r\n    \r\n    // 尝试打开链接\r\n    if (finalUrl) {\r\n      openLink(finalUrl);\r\n    } else {\r\n      alert('无法生成有效的工作链接');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`job-feed ${isDrawerOpen ? 'drawer-open' : ''}`}>\r\n      <Header \r\n        onSearch={(term) => handleSearch(term)} \r\n        onFilter={handleFilter}\r\n      />\r\n      \r\n      <div className=\"job-list-container\">\r\n        {loading ? (\r\n          <div className=\"loading-container\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Loading jobs...</p>\r\n          </div>\r\n        ) : searching ? (\r\n          <div className=\"searching-container\">\r\n            <div className=\"loading-spinner small\"></div>\r\n            <p>Searching...</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {filteredJobs.length > 0 ? (\r\n              <>\r\n                <div className=\"results-count\">\r\n                  找到 <span className=\"count-highlight\">{filteredJobs.length}</span> 个工作机会\r\n                </div>\r\n                <div className=\"data-sources\">\r\n                  数据来源: {dataSources.join(', ')}\r\n                </div>\r\n                <div className=\"job-list\">\r\n                  {filteredJobs.map((job, index) => {\r\n                    if (filteredJobs.length === index + 1) {\r\n                      return (\r\n                        <div ref={lastJobElementRef} key={job.id}>\r\n                          <JobCard \r\n                            job={job} \r\n                            onSelect={() => handleJobSelect(job)}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <JobCard \r\n                          key={job.id} \r\n                          job={job} \r\n                          onSelect={() => handleJobSelect(job)}\r\n                        />\r\n                      );\r\n                    }\r\n                  })}\r\n                  {loadingMore && (\r\n                    <div className=\"loading-more\">\r\n                      <div className=\"loading-spinner small\"></div>\r\n                      <p>加载更多工作...</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"no-jobs-found\">\r\n                <h3>No jobs found</h3>\r\n                <p>Try adjusting your search filters</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      \r\n      <JobDetailsDrawer \r\n        job={selectedJob}\r\n        isOpen={isDrawerOpen}\r\n        onClose={handleCloseDrawer}\r\n        onApply={handleApplyJob}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}