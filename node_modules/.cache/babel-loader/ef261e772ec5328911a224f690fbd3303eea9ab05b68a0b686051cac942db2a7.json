{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kiro\\\\remote-job-website\\\\src\\\\pages\\\\JobFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport JobCard from '../components/JobCard';\nimport { mockJobs } from '../services/mockData';\nimport './JobFeed.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobFeed = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // 模拟API调用\n    const fetchJobs = async () => {\n      setLoading(true);\n      // 模拟网络延迟\n      setTimeout(() => {\n        setJobs(mockJobs);\n        setFilteredJobs(mockJobs);\n        setLoading(false);\n      }, 500);\n    };\n    fetchJobs();\n  }, []);\n  const handleSearch = (searchTerm, activeFilters) => {\n    let results = [...jobs];\n\n    // 按搜索词过滤\n    if (searchTerm) {\n      results = results.filter(job => job.title.toLowerCase().includes(searchTerm.toLowerCase()) || job.company.toLowerCase().includes(searchTerm.toLowerCase()) || job.location.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    // 按职位类型过滤\n    if (activeFilters && activeFilters.length > 0) {\n      results = results.filter(job => {\n        // 这里简化处理，实际应用中需要更复杂的匹配逻辑\n        if (activeFilters.includes('ux-designer') && job.title.toLowerCase().includes('ux')) {\n          return true;\n        }\n        if (activeFilters.includes('ui-designer') && job.title.toLowerCase().includes('ui')) {\n          return true;\n        }\n        if (activeFilters.includes('product-designer') && job.title.toLowerCase().includes('product')) {\n          return true;\n        }\n        if (activeFilters.includes('visual-identity') && (job.title.toLowerCase().includes('visual') || job.title.toLowerCase().includes('graphic'))) {\n          return true;\n        }\n        return false;\n      });\n    }\n    setFilteredJobs(results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-feed\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-list-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: filteredJobs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-list\",\n          children: filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n            job: job\n          }, job.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-jobs-found\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No jobs found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Try adjusting your search filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(JobFeed, \"J9UerenTYeUXRW6pNPu9cYr8NtM=\");\n_c = JobFeed;\nexport default JobFeed;\nvar _c;\n$RefreshReg$(_c, \"JobFeed\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","JobCard","mockJobs","jsxDEV","_jsxDEV","Fragment","_Fragment","JobFeed","_s","jobs","setJobs","filteredJobs","setFilteredJobs","loading","setLoading","fetchJobs","setTimeout","handleSearch","searchTerm","activeFilters","results","filter","job","title","toLowerCase","includes","company","location","length","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["D:/Kiro/remote-job-website/src/pages/JobFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport JobCard from '../components/JobCard';\r\nimport { mockJobs } from '../services/mockData';\r\nimport './JobFeed.css';\r\n\r\nconst JobFeed = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 模拟API调用\r\n    const fetchJobs = async () => {\r\n      setLoading(true);\r\n      // 模拟网络延迟\r\n      setTimeout(() => {\r\n        setJobs(mockJobs);\r\n        setFilteredJobs(mockJobs);\r\n        setLoading(false);\r\n      }, 500);\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  const handleSearch = (searchTerm, activeFilters) => {\r\n    let results = [...jobs];\r\n    \r\n    // 按搜索词过滤\r\n    if (searchTerm) {\r\n      results = results.filter(job => \r\n        job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        job.company.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        job.location.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    // 按职位类型过滤\r\n    if (activeFilters && activeFilters.length > 0) {\r\n      results = results.filter(job => {\r\n        // 这里简化处理，实际应用中需要更复杂的匹配逻辑\r\n        if (activeFilters.includes('ux-designer') && job.title.toLowerCase().includes('ux')) {\r\n          return true;\r\n        }\r\n        if (activeFilters.includes('ui-designer') && job.title.toLowerCase().includes('ui')) {\r\n          return true;\r\n        }\r\n        if (activeFilters.includes('product-designer') && job.title.toLowerCase().includes('product')) {\r\n          return true;\r\n        }\r\n        if (activeFilters.includes('visual-identity') && \r\n            (job.title.toLowerCase().includes('visual') || job.title.toLowerCase().includes('graphic'))) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    }\r\n    \r\n    setFilteredJobs(results);\r\n  };\r\n\r\n  return (\r\n    <div className=\"job-feed\">\r\n      <SearchBar onSearch={handleSearch} />\r\n      \r\n      <div className=\"job-list-container\">\r\n        {loading ? (\r\n          <div className=\"loading-container\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Loading jobs...</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {filteredJobs.length > 0 ? (\r\n              <div className=\"job-list\">\r\n                {filteredJobs.map(job => (\r\n                  <JobCard key={job.id} job={job} />\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"no-jobs-found\">\r\n                <h3>No jobs found</h3>\r\n                <p>Try adjusting your search filters</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}