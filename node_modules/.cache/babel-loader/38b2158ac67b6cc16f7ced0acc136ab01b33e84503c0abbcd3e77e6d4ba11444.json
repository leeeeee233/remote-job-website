{"ast":null,"code":"// 收藏工作服务\n// 管理用户收藏的工作列表\nclass BookmarkService{constructor(){this.storageKey='huntjobs_bookmarks';this.bookmarks=this.loadBookmarks();}// 从本地存储加载收藏列表\nloadBookmarks(){try{const stored=localStorage.getItem(this.storageKey);return stored?JSON.parse(stored):[];}catch(error){console.error('Error loading bookmarks:',error);return[];}}// 保存收藏列表到本地存储\nsaveBookmarks(){try{localStorage.setItem(this.storageKey,JSON.stringify(this.bookmarks));}catch(error){console.error('Error saving bookmarks:',error);}}// 添加工作到收藏列表\naddBookmark(job){if(!job||!job.id){console.error('Invalid job object');return false;}// 检查是否已经收藏\nif(this.isBookmarked(job.id)){console.log('Job already bookmarked');return false;}// 添加收藏时间戳\nconst bookmarkedJob={...job,bookmarkedAt:new Date().toISOString()};this.bookmarks.unshift(bookmarkedJob);// 添加到开头\nthis.saveBookmarks();console.log(`Job \"${job.title}\" added to bookmarks`);return true;}// 从收藏列表移除工作\nremoveBookmark(jobId){const initialLength=this.bookmarks.length;this.bookmarks=this.bookmarks.filter(job=>job.id!==jobId);if(this.bookmarks.length<initialLength){this.saveBookmarks();console.log(`Job with ID \"${jobId}\" removed from bookmarks`);return true;}return false;}// 检查工作是否已收藏\nisBookmarked(jobId){return this.bookmarks.some(job=>job.id===jobId);}// 获取所有收藏的工作\ngetBookmarks(){return[...this.bookmarks];}// 获取收藏数量\ngetBookmarkCount(){return this.bookmarks.length;}// 切换收藏状态\ntoggleBookmark(job){if(this.isBookmarked(job.id)){return this.removeBookmark(job.id);}else{return this.addBookmark(job);}}// 清空所有收藏\nclearAllBookmarks(){this.bookmarks=[];this.saveBookmarks();console.log('All bookmarks cleared');}// 搜索收藏的工作\nsearchBookmarks(searchTerm){if(!searchTerm)return this.getBookmarks();const term=searchTerm.toLowerCase();return this.bookmarks.filter(job=>job.title.toLowerCase().includes(term)||job.company.toLowerCase().includes(term)||job.location.toLowerCase().includes(term)||job.description&&job.description.toLowerCase().includes(term));}// 按分类筛选收藏的工作\nfilterBookmarksByCategory(categoryId){if(!categoryId)return this.getBookmarks();// 这里可以复用JobFeed中的分类匹配逻辑\nreturn this.bookmarks.filter(job=>{// 简化的分类匹配逻辑\nconst title=job.title.toLowerCase();const description=job.description?job.description.toLowerCase():'';switch(categoryId){case'ux-designer':return title.includes('ux')||title.includes('user experience');case'ui-designer':return title.includes('ui')||title.includes('user interface');case'frontend-developer':return title.includes('frontend')||title.includes('front-end')||title.includes('react');case'backend-developer':return title.includes('backend')||title.includes('back-end')||title.includes('api');default:return true;}});}// 获取收藏统计信息\ngetBookmarkStats(){const stats={total:this.bookmarks.length,byCompany:{},byCategory:{},recentCount:0};const oneWeekAgo=new Date();oneWeekAgo.setDate(oneWeekAgo.getDate()-7);this.bookmarks.forEach(job=>{// 按公司统计\nstats.byCompany[job.company]=(stats.byCompany[job.company]||0)+1;// 统计最近一周的收藏\nif(new Date(job.bookmarkedAt)>oneWeekAgo){stats.recentCount++;}});return stats;}}// 创建单例实例\nconst bookmarkService=new BookmarkService();export default bookmarkService;","map":{"version":3,"names":["BookmarkService","constructor","storageKey","bookmarks","loadBookmarks","stored","localStorage","getItem","JSON","parse","error","console","saveBookmarks","setItem","stringify","addBookmark","job","id","isBookmarked","log","bookmarkedJob","bookmarkedAt","Date","toISOString","unshift","title","removeBookmark","jobId","initialLength","length","filter","some","getBookmarks","getBookmarkCount","toggleBookmark","clearAllBookmarks","searchBookmarks","searchTerm","term","toLowerCase","includes","company","location","description","filterBookmarksByCategory","categoryId","getBookmarkStats","stats","total","byCompany","byCategory","recentCount","oneWeekAgo","setDate","getDate","forEach","bookmarkService"],"sources":["D:/Kiro/remote-job-website/src/services/bookmarkService.js"],"sourcesContent":["// 收藏工作服务\r\n// 管理用户收藏的工作列表\r\n\r\nclass BookmarkService {\r\n  constructor() {\r\n    this.storageKey = 'huntjobs_bookmarks';\r\n    this.bookmarks = this.loadBookmarks();\r\n  }\r\n\r\n  // 从本地存储加载收藏列表\r\n  loadBookmarks() {\r\n    try {\r\n      const stored = localStorage.getItem(this.storageKey);\r\n      return stored ? JSON.parse(stored) : [];\r\n    } catch (error) {\r\n      console.error('Error loading bookmarks:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // 保存收藏列表到本地存储\r\n  saveBookmarks() {\r\n    try {\r\n      localStorage.setItem(this.storageKey, JSON.stringify(this.bookmarks));\r\n    } catch (error) {\r\n      console.error('Error saving bookmarks:', error);\r\n    }\r\n  }\r\n\r\n  // 添加工作到收藏列表\r\n  addBookmark(job) {\r\n    if (!job || !job.id) {\r\n      console.error('Invalid job object');\r\n      return false;\r\n    }\r\n\r\n    // 检查是否已经收藏\r\n    if (this.isBookmarked(job.id)) {\r\n      console.log('Job already bookmarked');\r\n      return false;\r\n    }\r\n\r\n    // 添加收藏时间戳\r\n    const bookmarkedJob = {\r\n      ...job,\r\n      bookmarkedAt: new Date().toISOString()\r\n    };\r\n\r\n    this.bookmarks.unshift(bookmarkedJob); // 添加到开头\r\n    this.saveBookmarks();\r\n    \r\n    console.log(`Job \"${job.title}\" added to bookmarks`);\r\n    return true;\r\n  }\r\n\r\n  // 从收藏列表移除工作\r\n  removeBookmark(jobId) {\r\n    const initialLength = this.bookmarks.length;\r\n    this.bookmarks = this.bookmarks.filter(job => job.id !== jobId);\r\n    \r\n    if (this.bookmarks.length < initialLength) {\r\n      this.saveBookmarks();\r\n      console.log(`Job with ID \"${jobId}\" removed from bookmarks`);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  // 检查工作是否已收藏\r\n  isBookmarked(jobId) {\r\n    return this.bookmarks.some(job => job.id === jobId);\r\n  }\r\n\r\n  // 获取所有收藏的工作\r\n  getBookmarks() {\r\n    return [...this.bookmarks];\r\n  }\r\n\r\n  // 获取收藏数量\r\n  getBookmarkCount() {\r\n    return this.bookmarks.length;\r\n  }\r\n\r\n  // 切换收藏状态\r\n  toggleBookmark(job) {\r\n    if (this.isBookmarked(job.id)) {\r\n      return this.removeBookmark(job.id);\r\n    } else {\r\n      return this.addBookmark(job);\r\n    }\r\n  }\r\n\r\n  // 清空所有收藏\r\n  clearAllBookmarks() {\r\n    this.bookmarks = [];\r\n    this.saveBookmarks();\r\n    console.log('All bookmarks cleared');\r\n  }\r\n\r\n  // 搜索收藏的工作\r\n  searchBookmarks(searchTerm) {\r\n    if (!searchTerm) return this.getBookmarks();\r\n    \r\n    const term = searchTerm.toLowerCase();\r\n    return this.bookmarks.filter(job => \r\n      job.title.toLowerCase().includes(term) ||\r\n      job.company.toLowerCase().includes(term) ||\r\n      job.location.toLowerCase().includes(term) ||\r\n      (job.description && job.description.toLowerCase().includes(term))\r\n    );\r\n  }\r\n\r\n  // 按分类筛选收藏的工作\r\n  filterBookmarksByCategory(categoryId) {\r\n    if (!categoryId) return this.getBookmarks();\r\n    \r\n    // 这里可以复用JobFeed中的分类匹配逻辑\r\n    return this.bookmarks.filter(job => {\r\n      // 简化的分类匹配逻辑\r\n      const title = job.title.toLowerCase();\r\n      const description = job.description ? job.description.toLowerCase() : '';\r\n      \r\n      switch (categoryId) {\r\n        case 'ux-designer':\r\n          return title.includes('ux') || title.includes('user experience');\r\n        case 'ui-designer':\r\n          return title.includes('ui') || title.includes('user interface');\r\n        case 'frontend-developer':\r\n          return title.includes('frontend') || title.includes('front-end') || title.includes('react');\r\n        case 'backend-developer':\r\n          return title.includes('backend') || title.includes('back-end') || title.includes('api');\r\n        default:\r\n          return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // 获取收藏统计信息\r\n  getBookmarkStats() {\r\n    const stats = {\r\n      total: this.bookmarks.length,\r\n      byCompany: {},\r\n      byCategory: {},\r\n      recentCount: 0\r\n    };\r\n\r\n    const oneWeekAgo = new Date();\r\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\r\n\r\n    this.bookmarks.forEach(job => {\r\n      // 按公司统计\r\n      stats.byCompany[job.company] = (stats.byCompany[job.company] || 0) + 1;\r\n      \r\n      // 统计最近一周的收藏\r\n      if (new Date(job.bookmarkedAt) > oneWeekAgo) {\r\n        stats.recentCount++;\r\n      }\r\n    });\r\n\r\n    return stats;\r\n  }\r\n}\r\n\r\n// 创建单例实例\r\nconst bookmarkService = new BookmarkService();\r\n\r\nexport default bookmarkService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}