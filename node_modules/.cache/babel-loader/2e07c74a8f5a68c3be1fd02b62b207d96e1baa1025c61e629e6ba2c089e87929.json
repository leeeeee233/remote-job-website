{"ast":null,"code":"// API响应转换器\n// 将不同API的响应格式转换为统一的工作数据模型\n/**\r\n * 统一的工作数据模型\r\n * @typedef {Object} JobInfo\r\n * @property {string} id - 工作ID\r\n * @property {string} title - 职位名称\r\n * @property {string} company - 公司名称\r\n * @property {string} companyLogo - 公司logo URL\r\n * @property {string} location - 工作地点\r\n * @property {string} type - 工作类型（全职、兼职等）\r\n * @property {number} salary - 估算薪资（千美元/年）\r\n * @property {string} team - 团队类型（前端、后端等）\r\n * @property {string} postedDate - 发布日期（相对时间）\r\n * @property {number} views - 浏览次数\r\n * @property {number} applicants - 申请人数\r\n * @property {string} description - 工作描述\r\n * @property {string[]} skills - 所需技能\r\n * @property {string} source - 数据来源\r\n * @property {string} sourceUrl - 原始工作链接\r\n * @property {string} sourceId - 来源系统中的ID\r\n *//**\r\n * 统一的工作详情模型\r\n * @typedef {Object} JobDetail\r\n * @property {string[]} minimumQualifications - 最低资格要求\r\n * @property {string[]} preferredQualifications - 优先资格要求\r\n * @property {string} aboutJob - 关于工作的详细描述\r\n * @property {string} companyInfo - 公司信息\r\n * @property {string[]} benefits - 福利待遇\r\n * @property {string} applicationUrl - 申请链接\r\n *//**\r\n * 格式化发布日期为相对时间\r\n * @param {string} dateString - 日期字符串\r\n * @returns {string} - 格式化后的相对时间\r\n */export const formatRelativeDate=dateString=>{if(!dateString)return'Recently';const date=new Date(dateString);const now=new Date();const diffTime=Math.abs(now-date);const diffDays=Math.floor(diffTime/(1000*60*60*24));if(diffDays===0)return'Today';if(diffDays===1)return'Yesterday';if(diffDays<=7)return`${diffDays} days ago`;if(diffDays<=30)return`${Math.ceil(diffDays/7)} weeks ago`;return`${Math.ceil(diffDays/30)} months ago`;};/**\r\n * 从文本中提取技能\r\n * @param {string} text - 文本内容\r\n * @returns {string[]} - 提取的技能列表\r\n */export const extractSkills=text=>{const commonSkills=['JavaScript','Python','React','Node.js','TypeScript','Angular','Vue.js','Java','C#','.NET','MongoDB','PostgreSQL','MySQL','AWS','Azure','Docker','Kubernetes','CI/CD','DevOps','Git','Linux','Figma','Sketch','Adobe XD','UI/UX','CSS','HTML','REST API','GraphQL'];if(!text||typeof text!=='string'){return['Remote Work'];}const foundSkills=commonSkills.filter(skill=>text.toLowerCase().includes(skill.toLowerCase()));return foundSkills.length>0?foundSkills.slice(0,5):['Remote Work'];};/**\r\n * 从职位名称中提取团队类型\r\n * @param {string} title - 职位名称\r\n * @returns {string} - 团队类型\r\n */export const extractTeam=title=>{if(!title||typeof title!=='string'){return'Engineering';}const teams={'Frontend':['Frontend','Front-end','Front End','UI','React','Angular','Vue','JavaScript'],'UX/UI':['UX','UI','User Experience','User Interface','Designer','Design'],'Backend':['Backend','Back-end','Back End','API','Server','Java','Python','Ruby','PHP','Node'],'Full Stack':['Full Stack','Fullstack','Full-stack'],'DevOps':['DevOps','SRE','Infrastructure','Cloud','AWS','Azure','GCP','Kubernetes','Docker'],'Mobile':['Mobile','iOS','Android','React Native','Flutter','Swift','Kotlin'],'Data':['Data','Analytics','Machine Learning','AI','ML','Data Science','Big Data'],'Product':['Product','PM','Product Manager','Product Owner'],'QA':['QA','Test','Testing','Quality'],'Security':['Security','Cyber','InfoSec']};for(const[team,keywords]of Object.entries(teams)){if(keywords.some(keyword=>title.includes(keyword))){return team;}}return'Engineering';};/**\r\n * 估算职位薪资\r\n * @param {string} title - 职位名称\r\n * @returns {number} - 估算薪资（千美元/年）\r\n */export const estimateSalary=title=>{if(!title||typeof title!=='string'){return 100;}// 基于职位名称估算薪资范围\nconst seniorKeywords=['Senior','Sr','Lead','Principal','Staff','Architect'];const midKeywords=['II','2','Mid','Intermediate'];const juniorKeywords=['Junior','Jr','Entry','Associate','Intern'];const isSenior=seniorKeywords.some(key=>title.includes(key));const isMid=midKeywords.some(key=>title.includes(key));const isJunior=juniorKeywords.some(key=>title.includes(key));// 基础薪资范围\nlet baseSalary;if(title.includes('Manager')||title.includes('Director')){baseSalary=130;}else if(title.includes('Architect')||title.includes('Principal')){baseSalary=140;}else if(title.includes('DevOps')||title.includes('SRE')){baseSalary=125;}else if(title.includes('Data')||title.includes('Machine Learning')){baseSalary=110;}else if(title.includes('UI')||title.includes('UX')||title.includes('Design')){baseSalary=115;}else if(title.includes('Mobile')||title.includes('iOS')||title.includes('Android')){baseSalary=120;}else{baseSalary=100;}// 根据级别调整薪资\nif(isSenior){return baseSalary+20;}else if(isMid){return baseSalary;}else if(isJunior){return baseSalary-30;}else{return baseSalary;}};/**\r\n * 生成随机的浏览量和申请人数\r\n * @returns {Object} - 包含views和applicants的对象\r\n */export const generateRandomStats=()=>{return{views:Math.floor(Math.random()*500)+50,applicants:Math.floor(Math.random()*50)+5};};/**\r\n * 从HTML描述中提取纯文本\r\n * @param {string} html - HTML描述\r\n * @returns {string} - 提取的纯文本\r\n */export const extractTextFromHtml=html=>{if(!html||typeof html!=='string'){return'';}// 创建临时DOM元素\nconst tempDiv=document.createElement('div');tempDiv.innerHTML=html;// 获取纯文本\nreturn tempDiv.textContent||tempDiv.innerText||'';};/**\r\n * 从描述中提取资格要求\r\n * @param {string} description - 工作描述\r\n * @returns {Object} - 包含最低和优先资格要求的对象\r\n */export const extractQualifications=description=>{if(!description||typeof description!=='string'){return{minimumQualifications:[],preferredQualifications:[]};}const minimumSections=['requirements','qualifications','what you need','what we require','minimum qualifications','basic qualifications','required skills'];const preferredSections=['preferred','bonus','nice to have','desired','plus','preferred qualifications','additional skills'];const lines=description.split('\\n');const minimumQualifications=[];const preferredQualifications=[];let currentSection=null;for(const line of lines){const lowerLine=line.toLowerCase();// 检查是否是最低要求部分\nif(minimumSections.some(section=>lowerLine.includes(section))){currentSection='minimum';continue;}// 检查是否是优先要求部分\nif(preferredSections.some(section=>lowerLine.includes(section))){currentSection='preferred';continue;}// 如果是列表项，添加到相应部分\nif(line.trim().startsWith('•')||line.trim().startsWith('-')||line.trim().match(/^\\d+\\./)){const item=line.trim().replace(/^[•\\-\\d.]+\\s*/,'');if(item&&currentSection==='minimum'){minimumQualifications.push(item);}else if(item&&currentSection==='preferred'){preferredQualifications.push(item);}}}return{minimumQualifications:minimumQualifications.length>0?minimumQualifications:[],preferredQualifications:preferredQualifications.length>0?preferredQualifications:[]};};export default{formatRelativeDate,extractSkills,extractTeam,estimateSalary,generateRandomStats,extractTextFromHtml,extractQualifications};","map":{"version":3,"names":["formatRelativeDate","dateString","date","Date","now","diffTime","Math","abs","diffDays","floor","ceil","extractSkills","text","commonSkills","foundSkills","filter","skill","toLowerCase","includes","length","slice","extractTeam","title","teams","team","keywords","Object","entries","some","keyword","estimateSalary","seniorKeywords","midKeywords","juniorKeywords","isSenior","key","isMid","isJunior","baseSalary","generateRandomStats","views","random","applicants","extractTextFromHtml","html","tempDiv","document","createElement","innerHTML","textContent","innerText","extractQualifications","description","minimumQualifications","preferredQualifications","minimumSections","preferredSections","lines","split","currentSection","line","lowerLine","section","trim","startsWith","match","item","replace","push"],"sources":["D:/Kiro/remote-job-website/src/services/api/responseTransformer.js"],"sourcesContent":["// API响应转换器\r\n// 将不同API的响应格式转换为统一的工作数据模型\r\n\r\n/**\r\n * 统一的工作数据模型\r\n * @typedef {Object} JobInfo\r\n * @property {string} id - 工作ID\r\n * @property {string} title - 职位名称\r\n * @property {string} company - 公司名称\r\n * @property {string} companyLogo - 公司logo URL\r\n * @property {string} location - 工作地点\r\n * @property {string} type - 工作类型（全职、兼职等）\r\n * @property {number} salary - 估算薪资（千美元/年）\r\n * @property {string} team - 团队类型（前端、后端等）\r\n * @property {string} postedDate - 发布日期（相对时间）\r\n * @property {number} views - 浏览次数\r\n * @property {number} applicants - 申请人数\r\n * @property {string} description - 工作描述\r\n * @property {string[]} skills - 所需技能\r\n * @property {string} source - 数据来源\r\n * @property {string} sourceUrl - 原始工作链接\r\n * @property {string} sourceId - 来源系统中的ID\r\n */\r\n\r\n/**\r\n * 统一的工作详情模型\r\n * @typedef {Object} JobDetail\r\n * @property {string[]} minimumQualifications - 最低资格要求\r\n * @property {string[]} preferredQualifications - 优先资格要求\r\n * @property {string} aboutJob - 关于工作的详细描述\r\n * @property {string} companyInfo - 公司信息\r\n * @property {string[]} benefits - 福利待遇\r\n * @property {string} applicationUrl - 申请链接\r\n */\r\n\r\n/**\r\n * 格式化发布日期为相对时间\r\n * @param {string} dateString - 日期字符串\r\n * @returns {string} - 格式化后的相对时间\r\n */\r\nexport const formatRelativeDate = (dateString) => {\r\n  if (!dateString) return 'Recently';\r\n  \r\n  const date = new Date(dateString);\r\n  const now = new Date();\r\n  const diffTime = Math.abs(now - date);\r\n  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n  if (diffDays === 0) return 'Today';\r\n  if (diffDays === 1) return 'Yesterday';\r\n  if (diffDays <= 7) return `${diffDays} days ago`;\r\n  if (diffDays <= 30) return `${Math.ceil(diffDays / 7)} weeks ago`;\r\n  return `${Math.ceil(diffDays / 30)} months ago`;\r\n};\r\n\r\n/**\r\n * 从文本中提取技能\r\n * @param {string} text - 文本内容\r\n * @returns {string[]} - 提取的技能列表\r\n */\r\nexport const extractSkills = (text) => {\r\n  const commonSkills = [\r\n    'JavaScript', 'Python', 'React', 'Node.js', 'TypeScript', 'Angular', 'Vue.js', 'Java', 'C#', '.NET',\r\n    'MongoDB', 'PostgreSQL', 'MySQL', 'AWS', 'Azure', 'Docker', 'Kubernetes', 'CI/CD', 'DevOps',\r\n    'Git', 'Linux', 'Figma', 'Sketch', 'Adobe XD', 'UI/UX', 'CSS', 'HTML', 'REST API', 'GraphQL'\r\n  ];\r\n\r\n  if (!text || typeof text !== 'string') {\r\n    return ['Remote Work'];\r\n  }\r\n\r\n  const foundSkills = commonSkills.filter(skill => \r\n    text.toLowerCase().includes(skill.toLowerCase())\r\n  );\r\n  \r\n  return foundSkills.length > 0 ? foundSkills.slice(0, 5) : ['Remote Work'];\r\n};\r\n\r\n/**\r\n * 从职位名称中提取团队类型\r\n * @param {string} title - 职位名称\r\n * @returns {string} - 团队类型\r\n */\r\nexport const extractTeam = (title) => {\r\n  if (!title || typeof title !== 'string') {\r\n    return 'Engineering';\r\n  }\r\n\r\n  const teams = {\r\n    'Frontend': ['Frontend', 'Front-end', 'Front End', 'UI', 'React', 'Angular', 'Vue', 'JavaScript'],\r\n    'UX/UI': ['UX', 'UI', 'User Experience', 'User Interface', 'Designer', 'Design'],\r\n    'Backend': ['Backend', 'Back-end', 'Back End', 'API', 'Server', 'Java', 'Python', 'Ruby', 'PHP', 'Node'],\r\n    'Full Stack': ['Full Stack', 'Fullstack', 'Full-stack'],\r\n    'DevOps': ['DevOps', 'SRE', 'Infrastructure', 'Cloud', 'AWS', 'Azure', 'GCP', 'Kubernetes', 'Docker'],\r\n    'Mobile': ['Mobile', 'iOS', 'Android', 'React Native', 'Flutter', 'Swift', 'Kotlin'],\r\n    'Data': ['Data', 'Analytics', 'Machine Learning', 'AI', 'ML', 'Data Science', 'Big Data'],\r\n    'Product': ['Product', 'PM', 'Product Manager', 'Product Owner'],\r\n    'QA': ['QA', 'Test', 'Testing', 'Quality'],\r\n    'Security': ['Security', 'Cyber', 'InfoSec']\r\n  };\r\n  \r\n  for (const [team, keywords] of Object.entries(teams)) {\r\n    if (keywords.some(keyword => title.includes(keyword))) {\r\n      return team;\r\n    }\r\n  }\r\n  \r\n  return 'Engineering';\r\n};\r\n\r\n/**\r\n * 估算职位薪资\r\n * @param {string} title - 职位名称\r\n * @returns {number} - 估算薪资（千美元/年）\r\n */\r\nexport const estimateSalary = (title) => {\r\n  if (!title || typeof title !== 'string') {\r\n    return 100;\r\n  }\r\n\r\n  // 基于职位名称估算薪资范围\r\n  const seniorKeywords = ['Senior', 'Sr', 'Lead', 'Principal', 'Staff', 'Architect'];\r\n  const midKeywords = ['II', '2', 'Mid', 'Intermediate'];\r\n  const juniorKeywords = ['Junior', 'Jr', 'Entry', 'Associate', 'Intern'];\r\n  \r\n  const isSenior = seniorKeywords.some(key => title.includes(key));\r\n  const isMid = midKeywords.some(key => title.includes(key));\r\n  const isJunior = juniorKeywords.some(key => title.includes(key));\r\n  \r\n  // 基础薪资范围\r\n  let baseSalary;\r\n  if (title.includes('Manager') || title.includes('Director')) {\r\n    baseSalary = 130;\r\n  } else if (title.includes('Architect') || title.includes('Principal')) {\r\n    baseSalary = 140;\r\n  } else if (title.includes('DevOps') || title.includes('SRE')) {\r\n    baseSalary = 125;\r\n  } else if (title.includes('Data') || title.includes('Machine Learning')) {\r\n    baseSalary = 110;\r\n  } else if (title.includes('UI') || title.includes('UX') || title.includes('Design')) {\r\n    baseSalary = 115;\r\n  } else if (title.includes('Mobile') || title.includes('iOS') || title.includes('Android')) {\r\n    baseSalary = 120;\r\n  } else {\r\n    baseSalary = 100;\r\n  }\r\n  \r\n  // 根据级别调整薪资\r\n  if (isSenior) {\r\n    return baseSalary + 20;\r\n  } else if (isMid) {\r\n    return baseSalary;\r\n  } else if (isJunior) {\r\n    return baseSalary - 30;\r\n  } else {\r\n    return baseSalary;\r\n  }\r\n};\r\n\r\n/**\r\n * 生成随机的浏览量和申请人数\r\n * @returns {Object} - 包含views和applicants的对象\r\n */\r\nexport const generateRandomStats = () => {\r\n  return {\r\n    views: Math.floor(Math.random() * 500) + 50,\r\n    applicants: Math.floor(Math.random() * 50) + 5\r\n  };\r\n};\r\n\r\n/**\r\n * 从HTML描述中提取纯文本\r\n * @param {string} html - HTML描述\r\n * @returns {string} - 提取的纯文本\r\n */\r\nexport const extractTextFromHtml = (html) => {\r\n  if (!html || typeof html !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  // 创建临时DOM元素\r\n  const tempDiv = document.createElement('div');\r\n  tempDiv.innerHTML = html;\r\n  \r\n  // 获取纯文本\r\n  return tempDiv.textContent || tempDiv.innerText || '';\r\n};\r\n\r\n/**\r\n * 从描述中提取资格要求\r\n * @param {string} description - 工作描述\r\n * @returns {Object} - 包含最低和优先资格要求的对象\r\n */\r\nexport const extractQualifications = (description) => {\r\n  if (!description || typeof description !== 'string') {\r\n    return {\r\n      minimumQualifications: [],\r\n      preferredQualifications: []\r\n    };\r\n  }\r\n  \r\n  const minimumSections = [\r\n    'requirements', 'qualifications', 'what you need', 'what we require',\r\n    'minimum qualifications', 'basic qualifications', 'required skills'\r\n  ];\r\n  \r\n  const preferredSections = [\r\n    'preferred', 'bonus', 'nice to have', 'desired', 'plus',\r\n    'preferred qualifications', 'additional skills'\r\n  ];\r\n  \r\n  const lines = description.split('\\n');\r\n  const minimumQualifications = [];\r\n  const preferredQualifications = [];\r\n  \r\n  let currentSection = null;\r\n  \r\n  for (const line of lines) {\r\n    const lowerLine = line.toLowerCase();\r\n    \r\n    // 检查是否是最低要求部分\r\n    if (minimumSections.some(section => lowerLine.includes(section))) {\r\n      currentSection = 'minimum';\r\n      continue;\r\n    }\r\n    \r\n    // 检查是否是优先要求部分\r\n    if (preferredSections.some(section => lowerLine.includes(section))) {\r\n      currentSection = 'preferred';\r\n      continue;\r\n    }\r\n    \r\n    // 如果是列表项，添加到相应部分\r\n    if (line.trim().startsWith('•') || line.trim().startsWith('-') || line.trim().match(/^\\d+\\./)) {\r\n      const item = line.trim().replace(/^[•\\-\\d.]+\\s*/, '');\r\n      \r\n      if (item && currentSection === 'minimum') {\r\n        minimumQualifications.push(item);\r\n      } else if (item && currentSection === 'preferred') {\r\n        preferredQualifications.push(item);\r\n      }\r\n    }\r\n  }\r\n  \r\n  return {\r\n    minimumQualifications: minimumQualifications.length > 0 ? minimumQualifications : [],\r\n    preferredQualifications: preferredQualifications.length > 0 ? preferredQualifications : []\r\n  };\r\n};\r\n\r\nexport default {\r\n  formatRelativeDate,\r\n  extractSkills,\r\n  extractTeam,\r\n  estimateSalary,\r\n  generateRandomStats,\r\n  extractTextFromHtml,\r\n  extractQualifications\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}