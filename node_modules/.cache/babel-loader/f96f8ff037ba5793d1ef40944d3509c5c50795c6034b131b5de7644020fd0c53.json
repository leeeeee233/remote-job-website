{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import Header from'../components/Header';import JobCard from'../components/JobCard';import JobDetailsDrawer from'../components/JobDetailsDrawer';import{mockJobs}from'../services/mockData';import jobService from'../services/jobService';import'./JobFeed.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const JobFeed=()=>{const[jobs,setJobs]=useState([]);const[filteredJobs,setFilteredJobs]=useState([]);const[loading,setLoading]=useState(true);const[searchTerm,setSearchTerm]=useState('');const[searching,setSearching]=useState(false);const[selectedJob,setSelectedJob]=useState(null);const[isDrawerOpen,setIsDrawerOpen]=useState(false);const[page,setPage]=useState(0);const[hasMore,setHasMore]=useState(true);const[loadingMore,setLoadingMore]=useState(false);const[activeFilters,setActiveFilters]=useState([]);const[dataSources,setDataSources]=useState([]);const[dynamicCategories,setDynamicCategories]=useState([]);const observer=useRef();const lastJobElementRef=useCallback(node=>{if(loading||loadingMore)return;if(observer.current)observer.current.disconnect();observer.current=new IntersectionObserver(entries=>{if(entries[0].isIntersecting&&hasMore){loadMoreJobs();}});if(node)observer.current.observe(node);},[loading,loadingMore,hasMore]);// 加载更多工作\nconst loadMoreJobs=async()=>{if(loadingMore||!hasMore)return;setLoadingMore(true);try{const nextPage=page+1;const designSearchTerms=searchTerm||'';const result=await jobService.searchRemoteJobs(designSearchTerms,{...activeFilters,category:'design',page:nextPage});if(result.jobs.length===0){setHasMore(false);}else{// 处理新加载的工作数据\nconst newJobs=filterJobs(result.jobs);if(newJobs.length===0){setHasMore(false);}else{setJobs(prevJobs=>[...prevJobs,...newJobs]);setFilteredJobs(prevFiltered=>[...prevFiltered,...newJobs]);setPage(nextPage);// 更新动态分类（基于所有已加载的工作）\nconst allLoadedJobs=[...jobs,...newJobs];const categories=generateDynamicCategories(allLoadedJobs);setDynamicCategories(categories);}}}catch(error){console.error('Failed to load more jobs:',error);}finally{setLoadingMore(false);}};// 根据工作数据自动生成分类 - 改进版本，更准确地匹配工作\nconst generateDynamicCategories=jobs=>{console.log('生成动态分类，工作数量:',jobs.length);// 定义更精确的分类规则和关键词\nconst categoryRules={'ux-designer':{label:'UX Designer',primaryKeywords:['ux designer','user experience designer','ux/ui designer','ui/ux designer'],secondaryKeywords:['ux','user experience','interaction design','usability','user research'],excludeKeywords:['ux writer','ux content'],count:0,jobs:[]},'ui-designer':{label:'UI Designer',primaryKeywords:['ui designer','user interface designer','interface designer'],secondaryKeywords:['ui','user interface','visual design','interface design'],excludeKeywords:['ui developer','ui engineer'],count:0,jobs:[]},'product-designer':{label:'Product Designer',primaryKeywords:['product designer','digital product designer'],secondaryKeywords:['product design','design lead','senior designer'],excludeKeywords:['product manager','product owner'],count:0,jobs:[]},'frontend-developer':{label:'Frontend Developer',primaryKeywords:['frontend developer','front-end developer','front end developer','react developer','vue developer','angular developer'],secondaryKeywords:['frontend','front-end','javascript','react','vue','angular','html','css'],excludeKeywords:[],count:0,jobs:[]},'backend-developer':{label:'Backend Developer',primaryKeywords:['backend developer','back-end developer','server developer','api developer'],secondaryKeywords:['backend','back-end','server','api','node.js','python','java','php','ruby'],excludeKeywords:[],count:0,jobs:[]},'fullstack-developer':{label:'Full Stack Developer',primaryKeywords:['full stack developer','fullstack developer','full-stack developer'],secondaryKeywords:['full stack','fullstack','full-stack'],excludeKeywords:[],count:0,jobs:[]},'data-scientist':{label:'Data Scientist',primaryKeywords:['data scientist','machine learning engineer','ai engineer'],secondaryKeywords:['data science','machine learning','artificial intelligence','analytics','big data'],excludeKeywords:[],count:0,jobs:[]},'devops-engineer':{label:'DevOps Engineer',primaryKeywords:['devops engineer','site reliability engineer','sre','cloud engineer'],secondaryKeywords:['devops','infrastructure','cloud','aws','azure','kubernetes','docker'],excludeKeywords:[],count:0,jobs:[]},'mobile-developer':{label:'Mobile Developer',primaryKeywords:['mobile developer','ios developer','android developer','react native developer'],secondaryKeywords:['mobile','ios','android','react native','flutter','swift','kotlin'],excludeKeywords:[],count:0,jobs:[]},'graphic-designer':{label:'Graphic Designer',primaryKeywords:['graphic designer','visual designer','brand designer'],secondaryKeywords:['graphic design','visual design','brand design','creative design'],excludeKeywords:[],count:0,jobs:[]},'marketing-specialist':{label:'Marketing Specialist',primaryKeywords:['marketing specialist','digital marketing','marketing manager','growth marketer'],secondaryKeywords:['marketing','content marketing','social media','seo','sem','growth'],excludeKeywords:[],count:0,jobs:[]},'project-manager':{label:'Project Manager',primaryKeywords:['project manager','program manager','scrum master','product manager'],secondaryKeywords:['project management','agile','scrum','product management'],excludeKeywords:[],count:0,jobs:[]}};// 分析每个工作，使用更智能的匹配逻辑\njobs.forEach(job=>{const title=job.title.toLowerCase();const description=job.description?job.description.toLowerCase():'';const skills=job.skills?job.skills.join(' ').toLowerCase():'';// 为每个分类计算匹配分数\nObject.entries(categoryRules).forEach(_ref=>{let[categoryId,categoryInfo]=_ref;let matchScore=0;// 检查主要关键词（高权重）\nconst primaryMatch=categoryInfo.primaryKeywords.some(keyword=>title.includes(keyword)||description.includes(keyword));if(primaryMatch)matchScore+=10;// 检查次要关键词（低权重）\nconst secondaryMatches=categoryInfo.secondaryKeywords.filter(keyword=>title.includes(keyword)||description.includes(keyword)||skills.includes(keyword)).length;matchScore+=secondaryMatches*2;// 检查排除关键词（负权重）\nconst excludeMatch=categoryInfo.excludeKeywords.some(keyword=>title.includes(keyword)||description.includes(keyword));if(excludeMatch)matchScore-=5;// 如果匹配分数足够高，则归类到此分类\nif(matchScore>=5){categoryInfo.count++;categoryInfo.jobs.push(job);}});});// 只返回有工作的分类，并按数量排序\nconst validCategories=Object.entries(categoryRules).filter(_ref2=>{let[_,categoryInfo]=_ref2;return categoryInfo.count>0;}).sort((_ref3,_ref4)=>{let[,a]=_ref3;let[,b]=_ref4;return b.count-a.count;}).slice(0,8)// 最多显示8个分类\n.map(_ref5=>{let[categoryId,categoryInfo]=_ref5;return{id:categoryId,label:`${categoryInfo.label} (${categoryInfo.count})`,count:categoryInfo.count};});console.log('生成的动态分类:',validCategories);// 输出详细的分类信息用于调试\nvalidCategories.forEach(category=>{const categoryRule=categoryRules[category.id];console.log(`${category.label}:`,categoryRule.jobs.slice(0,3).map(job=>job.title));});return validCategories;};// 过滤函数：保留所有工作，不再限制为设计工作\nconst filterJobs=jobs=>{console.log('处理工作数据，总数:',jobs.length);return jobs;// 返回所有工作\n};useEffect(()=>{// 获取真实的远程工作数据\nconst fetchJobs=async()=>{setLoading(true);setJobs([]);setFilteredJobs([]);setPage(0);setHasMore(true);try{// 使用更通用的搜索词来获取更多结果\nconst designSearchTerms=searchTerm||'';// 尝试从真实API获取数据\nconst result=await jobService.searchRemoteJobs(designSearchTerms,{...activeFilters,category:'design'// 如果API支持分类，优先获取设计类工作\n});// 先查看所有返回的工作，然后再过滤\nconsole.log('All jobs returned from API:',result.jobs.length);console.log('Sample jobs:',result.jobs.slice(0,5).map(job=>({title:job.title,company:job.company,description:job.description?job.description.substring(0,100)+'...':'No description',skills:job.skills})));// 处理所有工作数据\nconst allJobs=filterJobs(result.jobs);console.log(`处理了 ${allJobs.length} 个工作`);setJobs(allJobs);setFilteredJobs(allJobs);// 生成动态分类\nconst categories=generateDynamicCategories(allJobs);setDynamicCategories(categories);setDataSources(result.sources||[]);// 如果返回的工作数量小于预期，可能没有更多数据了\nif(result.jobs.length<20){setHasMore(false);}}catch(error){console.error('Failed to fetch jobs from API, using mock data:',error);// 如果API失败，使用模拟数据作为后备\nconst filteredMockJobs=filterJobs(mockJobs);setJobs(filteredMockJobs);setFilteredJobs(filteredMockJobs);// 生成动态分类\nconst categories=generateDynamicCategories(filteredMockJobs);setDynamicCategories(categories);setDataSources(['Mock Data']);setHasMore(false);}finally{setLoading(false);}};fetchJobs();},[searchTerm]);// 移除activeFilters依赖，筛选只在本地进行\nconst handleSearch=term=>{// 更新搜索词状态\nif(term!==undefined&&term!==null){setSearchTerm(term);}// 设置搜索状态为正在搜索\nsetSearching(true);// 使用setTimeout模拟搜索延迟，提供更好的用户体验\nsetTimeout(()=>{// 重新应用筛选器，包括新的搜索词\napplyFiltersToJobs(activeFilters);setSearching(false);},300);// 300ms的延迟，提供更流畅的搜索体验\n};const handleFilter=filterIds=>{console.log('筛选器更新:',filterIds);// 更新活动筛选器状态\nsetActiveFilters(filterIds);// 立即应用筛选到当前已加载的工作\napplyFiltersToJobs(filterIds);};// 统一的工作分类匹配函数 - 与generateDynamicCategories使用相同的逻辑\nconst getJobCategoryMatch=(job,categoryId)=>{const title=job.title.toLowerCase();const description=job.description?job.description.toLowerCase():'';const skills=job.skills?job.skills.join(' ').toLowerCase():'';// 使用与generateDynamicCategories相同的分类规则\nconst categoryRules={'ux-designer':{primaryKeywords:['ux designer','user experience designer','ux/ui designer','ui/ux designer'],secondaryKeywords:['ux','user experience','interaction design','usability','user research'],excludeKeywords:['ux writer','ux content']},'ui-designer':{primaryKeywords:['ui designer','user interface designer','interface designer'],secondaryKeywords:['ui','user interface','visual design','interface design'],excludeKeywords:['ui developer','ui engineer']},'product-designer':{primaryKeywords:['product designer','digital product designer'],secondaryKeywords:['product design','design lead','senior designer'],excludeKeywords:['product manager','product owner']},'frontend-developer':{primaryKeywords:['frontend developer','front-end developer','front end developer','react developer','vue developer','angular developer'],secondaryKeywords:['frontend','front-end','javascript','react','vue','angular','html','css'],excludeKeywords:[]},'backend-developer':{primaryKeywords:['backend developer','back-end developer','server developer','api developer'],secondaryKeywords:['backend','back-end','server','api','node.js','python','java','php','ruby'],excludeKeywords:[]},'fullstack-developer':{primaryKeywords:['full stack developer','fullstack developer','full-stack developer'],secondaryKeywords:['full stack','fullstack','full-stack'],excludeKeywords:[]},'data-scientist':{primaryKeywords:['data scientist','machine learning engineer','ai engineer'],secondaryKeywords:['data science','machine learning','artificial intelligence','analytics','big data'],excludeKeywords:[]},'devops-engineer':{primaryKeywords:['devops engineer','site reliability engineer','sre','cloud engineer'],secondaryKeywords:['devops','infrastructure','cloud','aws','azure','kubernetes','docker'],excludeKeywords:[]},'mobile-developer':{primaryKeywords:['mobile developer','ios developer','android developer','react native developer'],secondaryKeywords:['mobile','ios','android','react native','flutter','swift','kotlin'],excludeKeywords:[]},'graphic-designer':{primaryKeywords:['graphic designer','visual designer','brand designer'],secondaryKeywords:['graphic design','visual design','brand design','creative design'],excludeKeywords:[]},'marketing-specialist':{primaryKeywords:['marketing specialist','digital marketing','marketing manager','growth marketer'],secondaryKeywords:['marketing','content marketing','social media','seo','sem','growth'],excludeKeywords:[]},'project-manager':{primaryKeywords:['project manager','program manager','scrum master','product manager'],secondaryKeywords:['project management','agile','scrum','product management'],excludeKeywords:[]}};const categoryInfo=categoryRules[categoryId];if(!categoryInfo)return false;let matchScore=0;// 检查主要关键词（高权重）\nconst primaryMatch=categoryInfo.primaryKeywords.some(keyword=>title.includes(keyword)||description.includes(keyword));if(primaryMatch)matchScore+=10;// 检查次要关键词（低权重）\nconst secondaryMatches=categoryInfo.secondaryKeywords.filter(keyword=>title.includes(keyword)||description.includes(keyword)||skills.includes(keyword)).length;matchScore+=secondaryMatches*2;// 检查排除关键词（负权重）\nconst excludeMatch=categoryInfo.excludeKeywords.some(keyword=>title.includes(keyword)||description.includes(keyword));if(excludeMatch)matchScore-=5;// 返回是否匹配（使用与generateDynamicCategories相同的阈值）\nreturn matchScore>=5;};// 增强的搜索相关性评分函数\nconst calculateSearchRelevance=(job,searchTerm)=>{if(!searchTerm)return 0;const term=searchTerm.toLowerCase();const title=job.title.toLowerCase();const company=job.company.toLowerCase();const location=job.location.toLowerCase();const description=job.description?job.description.toLowerCase():'';const skills=job.skills?job.skills.join(' ').toLowerCase():'';let score=0;// 标题匹配（最高权重）\nif(title.includes(term)){if(title.startsWith(term))score+=100;// 标题开头匹配\nelse if(title.split(' ').some(word=>word.startsWith(term)))score+=80;// 单词开头匹配\nelse score+=60;// 标题包含\n}// 公司名称匹配（高权重）\nif(company.includes(term)){if(company.startsWith(term))score+=50;else score+=30;}// 技能匹配（中等权重）\nif(skills.includes(term)){const skillWords=skills.split(' ');if(skillWords.some(skill=>skill===term))score+=40;// 精确技能匹配\nelse score+=20;// 技能包含\n}// 描述匹配（较低权重）\nif(description.includes(term)){const termCount=(description.match(new RegExp(term,'g'))||[]).length;score+=Math.min(termCount*5,25);// 最多25分，避免描述过度影响\n}// 位置匹配（较低权重）\nif(location.includes(term)){score+=15;}// 多词搜索的额外评分\nconst searchWords=term.split(' ').filter(word=>word.length>2);if(searchWords.length>1){const matchedWords=searchWords.filter(word=>title.includes(word)||company.includes(word)||skills.includes(word));score+=matchedWords.length*10;// 每个匹配的词额外10分\n}return score;};// 应用筛选器到工作列表 - 使用统一的匹配逻辑和相关性排序\nconst applyFiltersToJobs=filterIds=>{let results=[...jobs];// 首先按搜索词过滤并计算相关性\nif(searchTerm){results=results.map(job=>({...job,relevanceScore:calculateSearchRelevance(job,searchTerm)})).filter(job=>job.relevanceScore>0)// 只保留有相关性的工作\n.sort((a,b)=>b.relevanceScore-a.relevanceScore);// 按相关性排序\nconsole.log(`搜索 \"${searchTerm}\" 找到 ${results.length} 个相关工作`);console.log('前5个最相关的工作:',results.slice(0,5).map(job=>({title:job.title,company:job.company,score:job.relevanceScore})));}// 然后按职位类型筛选 - 使用与分类生成相同的智能匹配逻辑\nif(filterIds&&filterIds.length>0){results=results.filter(job=>{// 检查工作是否匹配任一激活的筛选器\nreturn filterIds.some(filterId=>getJobCategoryMatch(job,filterId));});}console.log(`筛选结果: ${results.length} 个工作 (原始: ${jobs.length}, 筛选器: ${filterIds})`);// 输出调试信息，显示每个筛选器匹配到的工作\nif(filterIds&&filterIds.length>0){filterIds.forEach(filterId=>{const matchedJobs=results.filter(job=>getJobCategoryMatch(job,filterId));console.log(`筛选器 ${filterId} 匹配到 ${matchedJobs.length} 个工作:`,matchedJobs.slice(0,3).map(job=>job.title));});}setFilteredJobs(results);};// 处理工作卡片点击\nconst handleJobSelect=job=>{setSelectedJob(job);setIsDrawerOpen(true);};// 处理关闭抽屉\nconst handleCloseDrawer=()=>{setIsDrawerOpen(false);};// 处理申请工作\nconst handleApplyJob=jobId=>{console.log(`Applying for job: ${jobId}`);// 直接使用selectedJob，而不是从jobs数组中查找\nconst job=selectedJob;if(!job){console.error('No selected job found');alert('无法找到选中的工作');return;}// 详细记录工作对象，帮助调试\nconsole.log('Selected job details:',{id:job.id,title:job.title,company:job.company,source:job.source,sourceUrl:job.sourceUrl,sourceId:job.sourceId});// 创建一个隐藏的a标签来打开链接，这样可以避免弹出窗口被阻止\nconst openLink=url=>{console.log(`Attempting to open URL: ${url}`);// 创建一个隐藏的a标签\nconst link=document.createElement('a');link.href=url;link.target='_blank';link.rel='noopener noreferrer';// 添加到文档中并触发点击\ndocument.body.appendChild(link);link.click();// 清理\nsetTimeout(()=>{document.body.removeChild(link);},100);};let finalUrl='';if(job.sourceUrl){// 如果有源URL，使用它\nconsole.log(`Using source URL: ${job.sourceUrl}`);finalUrl=job.sourceUrl;}else if(job.source){// 如果没有源URL但有来源信息，尝试构建URL\nswitch(job.source){case'LinkedIn':finalUrl=`https://www.linkedin.com/jobs/view/${job.sourceId||job.id}`;break;case'WeWorkRemotely':// 尝试使用更可能正确的WeWorkRemotely URL格式\nif(job.company&&job.title){// 将公司名和职位名转换为URL友好的格式\nconst companySlug=job.company.toLowerCase().replace(/[^a-z0-9]+/g,'-');const titleSlug=job.title.toLowerCase().replace(/[^a-z0-9]+/g,'-');finalUrl=`https://weworkremotely.com/remote-jobs/${companySlug}-${titleSlug}`;}else{finalUrl=`https://weworkremotely.com/remote-jobs/${job.sourceId||job.id}`;}break;case'RemoteOK':finalUrl=`https://remoteok.io/l/${job.sourceId||job.id}`;break;default:// 如果无法确定来源，尝试使用通用搜索\nfinalUrl=`https://www.google.com/search?q=${encodeURIComponent(`${job.title} ${job.company} job`)}`;}console.log(`Constructed URL: ${finalUrl}`);}else{// 如果没有任何链接信息，显示提示并使用Google搜索\nconsole.error('No source URL or source information found for job:',job);finalUrl=`https://www.google.com/search?q=${encodeURIComponent(`${job.title} ${job.company} job`)}`;alert('无法找到精确的工作链接，将使用Google搜索');}// 尝试打开链接\nif(finalUrl){openLink(finalUrl);}else{alert('无法生成有效的工作链接');}};return/*#__PURE__*/_jsxs(\"div\",{className:`job-feed ${isDrawerOpen?'drawer-open':''}`,children:[/*#__PURE__*/_jsx(Header,{onSearch:term=>handleSearch(term),onFilter:handleFilter,dynamicCategories:dynamicCategories}),/*#__PURE__*/_jsx(\"div\",{className:\"job-list-container\",children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading jobs...\"})]}):searching?/*#__PURE__*/_jsxs(\"div\",{className:\"searching-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner small\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Searching...\"})]}):/*#__PURE__*/_jsx(_Fragment,{children:filteredJobs.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"results-count\",children:[\"\\u627E\\u5230 \",/*#__PURE__*/_jsx(\"span\",{className:\"count-highlight\",children:filteredJobs.length}),\" \\u4E2A\\u5DE5\\u4F5C\\u673A\\u4F1A\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-sources\",children:[\"\\u6570\\u636E\\u6765\\u6E90: \",dataSources.join(', ')]}),/*#__PURE__*/_jsxs(\"div\",{className:\"job-list\",children:[filteredJobs.map((job,index)=>{if(filteredJobs.length===index+1){return/*#__PURE__*/_jsx(\"div\",{ref:lastJobElementRef,children:/*#__PURE__*/_jsx(JobCard,{job:job,onSelect:()=>handleJobSelect(job)})},job.id);}else{return/*#__PURE__*/_jsx(JobCard,{job:job,onSelect:()=>handleJobSelect(job)},job.id);}}),loadingMore&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-more\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner small\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u52A0\\u8F7D\\u66F4\\u591A\\u5DE5\\u4F5C...\"})]})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-jobs-found\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"No jobs found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Try adjusting your search filters\"})]})})}),/*#__PURE__*/_jsx(JobDetailsDrawer,{job:selectedJob,isOpen:isDrawerOpen,onClose:handleCloseDrawer,onApply:handleApplyJob})]});};export default JobFeed;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Header","JobCard","JobDetailsDrawer","mockJobs","jobService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","JobFeed","jobs","setJobs","filteredJobs","setFilteredJobs","loading","setLoading","searchTerm","setSearchTerm","searching","setSearching","selectedJob","setSelectedJob","isDrawerOpen","setIsDrawerOpen","page","setPage","hasMore","setHasMore","loadingMore","setLoadingMore","activeFilters","setActiveFilters","dataSources","setDataSources","dynamicCategories","setDynamicCategories","observer","lastJobElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","loadMoreJobs","observe","nextPage","designSearchTerms","result","searchRemoteJobs","category","length","newJobs","filterJobs","prevJobs","prevFiltered","allLoadedJobs","categories","generateDynamicCategories","error","console","log","categoryRules","label","primaryKeywords","secondaryKeywords","excludeKeywords","count","forEach","job","title","toLowerCase","description","skills","join","Object","_ref","categoryId","categoryInfo","matchScore","primaryMatch","some","keyword","includes","secondaryMatches","filter","excludeMatch","push","validCategories","_ref2","_","sort","_ref3","_ref4","a","b","slice","map","_ref5","id","categoryRule","fetchJobs","company","substring","allJobs","sources","filteredMockJobs","handleSearch","term","undefined","setTimeout","applyFiltersToJobs","handleFilter","filterIds","getJobCategoryMatch","calculateSearchRelevance","location","score","startsWith","split","word","skillWords","skill","termCount","match","RegExp","Math","min","searchWords","matchedWords","results","relevanceScore","filterId","matchedJobs","handleJobSelect","handleCloseDrawer","handleApplyJob","jobId","alert","source","sourceUrl","sourceId","openLink","url","link","document","createElement","href","target","rel","body","appendChild","click","removeChild","finalUrl","companySlug","replace","titleSlug","encodeURIComponent","className","children","onSearch","onFilter","index","ref","onSelect","isOpen","onClose","onApply"],"sources":["D:/Kiro/remote-job-website/src/pages/JobFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport Header from '../components/Header';\r\nimport JobCard from '../components/JobCard';\r\nimport JobDetailsDrawer from '../components/JobDetailsDrawer';\r\nimport { mockJobs } from '../services/mockData';\r\nimport jobService from '../services/jobService';\r\nimport './JobFeed.css';\r\n\r\nconst JobFeed = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searching, setSearching] = useState(false);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [activeFilters, setActiveFilters] = useState([]);\r\n  const [dataSources, setDataSources] = useState([]);\r\n  const [dynamicCategories, setDynamicCategories] = useState([]);\r\n  const observer = useRef();\r\n  const lastJobElementRef = useCallback(node => {\r\n    if (loading || loadingMore) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        loadMoreJobs();\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, [loading, loadingMore, hasMore]);\r\n\r\n  // 加载更多工作\r\n  const loadMoreJobs = async () => {\r\n    if (loadingMore || !hasMore) return;\r\n    \r\n    setLoadingMore(true);\r\n    try {\r\n      const nextPage = page + 1;\r\n      const designSearchTerms = searchTerm || '';\r\n      \r\n      const result = await jobService.searchRemoteJobs(designSearchTerms, {\r\n        ...activeFilters,\r\n        category: 'design',\r\n        page: nextPage\r\n      });\r\n      \r\n      if (result.jobs.length === 0) {\r\n        setHasMore(false);\r\n      } else {\r\n        // 处理新加载的工作数据\r\n        const newJobs = filterJobs(result.jobs);\r\n        \r\n        if (newJobs.length === 0) {\r\n          setHasMore(false);\r\n        } else {\r\n          setJobs(prevJobs => [...prevJobs, ...newJobs]);\r\n          setFilteredJobs(prevFiltered => [...prevFiltered, ...newJobs]);\r\n          setPage(nextPage);\r\n          \r\n          // 更新动态分类（基于所有已加载的工作）\r\n          const allLoadedJobs = [...jobs, ...newJobs];\r\n          const categories = generateDynamicCategories(allLoadedJobs);\r\n          setDynamicCategories(categories);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load more jobs:', error);\r\n    } finally {\r\n      setLoadingMore(false);\r\n    }\r\n  };\r\n\r\n  // 根据工作数据自动生成分类 - 改进版本，更准确地匹配工作\r\n  const generateDynamicCategories = (jobs) => {\r\n    console.log('生成动态分类，工作数量:', jobs.length);\r\n    \r\n    // 定义更精确的分类规则和关键词\r\n    const categoryRules = {\r\n      'ux-designer': {\r\n        label: 'UX Designer',\r\n        primaryKeywords: ['ux designer', 'user experience designer', 'ux/ui designer', 'ui/ux designer'],\r\n        secondaryKeywords: ['ux', 'user experience', 'interaction design', 'usability', 'user research'],\r\n        excludeKeywords: ['ux writer', 'ux content'],\r\n        count: 0,\r\n        jobs: []\r\n      },\r\n      'ui-designer': {\r\n        label: 'UI Designer',\r\n        primaryKeywords: ['ui designer', 'user interface designer', 'interface designer'],\r\n        secondaryKeywords: ['ui', 'user interface', 'visual design', 'interface design'],\r\n        excludeKeywords: ['ui developer', 'ui engineer'],\r\n        count: 0,\r\n        jobs: []\r\n      },\r\n      'product-designer': {\r\n        label: 'Product Designer',\r\n        primaryKeywords: ['product designer', 'digital product designer'],\r\n        secondaryKeywords: ['product design', 'design lead', 'senior designer'],\r\n        excludeKeywords: ['product manager', 'product owner'],\r\n        count: 0,\r\n        jobs: []\r\n      },\r\n      'frontend-developer': {\r\n        label: 'Frontend Developer',\r\n        primaryKeywords: ['frontend developer', 'front-end developer', 'front end developer', 'react developer', 'vue developer', 'angular developer'],\r\n        secondaryKeywords: ['frontend', 'front-end', 'javascript', 'react', 'vue', 'angular', 'html', 'css'],\r\n        excludeKeywords: [],\r\n        count: 0,\r\n        jobs: []\r\n      },\r\n      'backend-developer': {\r\n        label: 'Backend Developer',\r\n        primaryKeywords: ['backend developer', 'back-end developer', 'server developer', 'api developer'],\r\n        secondaryKeywords: ['backend', 'back-end', 'server', 'api', 'node.js', 'python', 'java', 'php', 'ruby'],\r\n        excludeKeywords: [],\r\n        count: 0,\r\n        jobs: []\r\n      },\r\n      'fullstack-developer': {\r\n        label: 'Full Stack Developer',\r\n        primaryKeywords: ['full stack developer', 'fullstack developer', 'full-stack developer'],\r\n        secondaryKeywords: ['full stack', 'fullstack', 'full-stack'],\r\n        excludeKeywords: [],\r\n        count: 0,\r\n        jobs: []\r\n      },\r\n      'data-scientist': {\r\n        label: 'Data Scientist',\r\n        primaryKeywords: ['data scientist', 'machine learning engineer', 'ai engineer'],\r\n        secondaryKeywords: ['data science', 'machine learning', 'artificial intelligence', 'analytics', 'big data'],\r\n        excludeKeywords: [],\r\n        count: 0,\r\n        jobs: []\r\n      },\r\n      'devops-engineer': {\r\n        label: 'DevOps Engineer',\r\n        primaryKeywords: ['devops engineer', 'site reliability engineer', 'sre', 'cloud engineer'],\r\n        secondaryKeywords: ['devops', 'infrastructure', 'cloud', 'aws', 'azure', 'kubernetes', 'docker'],\r\n        excludeKeywords: [],\r\n        count: 0,\r\n        jobs: []\r\n      },\r\n      'mobile-developer': {\r\n        label: 'Mobile Developer',\r\n        primaryKeywords: ['mobile developer', 'ios developer', 'android developer', 'react native developer'],\r\n        secondaryKeywords: ['mobile', 'ios', 'android', 'react native', 'flutter', 'swift', 'kotlin'],\r\n        excludeKeywords: [],\r\n        count: 0,\r\n        jobs: []\r\n      },\r\n      'graphic-designer': {\r\n        label: 'Graphic Designer',\r\n        primaryKeywords: ['graphic designer', 'visual designer', 'brand designer'],\r\n        secondaryKeywords: ['graphic design', 'visual design', 'brand design', 'creative design'],\r\n        excludeKeywords: [],\r\n        count: 0,\r\n        jobs: []\r\n      },\r\n      'marketing-specialist': {\r\n        label: 'Marketing Specialist',\r\n        primaryKeywords: ['marketing specialist', 'digital marketing', 'marketing manager', 'growth marketer'],\r\n        secondaryKeywords: ['marketing', 'content marketing', 'social media', 'seo', 'sem', 'growth'],\r\n        excludeKeywords: [],\r\n        count: 0,\r\n        jobs: []\r\n      },\r\n      'project-manager': {\r\n        label: 'Project Manager',\r\n        primaryKeywords: ['project manager', 'program manager', 'scrum master', 'product manager'],\r\n        secondaryKeywords: ['project management', 'agile', 'scrum', 'product management'],\r\n        excludeKeywords: [],\r\n        count: 0,\r\n        jobs: []\r\n      }\r\n    };\r\n    \r\n    // 分析每个工作，使用更智能的匹配逻辑\r\n    jobs.forEach(job => {\r\n      const title = job.title.toLowerCase();\r\n      const description = job.description ? job.description.toLowerCase() : '';\r\n      const skills = job.skills ? job.skills.join(' ').toLowerCase() : '';\r\n      \r\n      // 为每个分类计算匹配分数\r\n      Object.entries(categoryRules).forEach(([categoryId, categoryInfo]) => {\r\n        let matchScore = 0;\r\n        \r\n        // 检查主要关键词（高权重）\r\n        const primaryMatch = categoryInfo.primaryKeywords.some(keyword => \r\n          title.includes(keyword) || description.includes(keyword)\r\n        );\r\n        if (primaryMatch) matchScore += 10;\r\n        \r\n        // 检查次要关键词（低权重）\r\n        const secondaryMatches = categoryInfo.secondaryKeywords.filter(keyword => \r\n          title.includes(keyword) || description.includes(keyword) || skills.includes(keyword)\r\n        ).length;\r\n        matchScore += secondaryMatches * 2;\r\n        \r\n        // 检查排除关键词（负权重）\r\n        const excludeMatch = categoryInfo.excludeKeywords.some(keyword => \r\n          title.includes(keyword) || description.includes(keyword)\r\n        );\r\n        if (excludeMatch) matchScore -= 5;\r\n        \r\n        // 如果匹配分数足够高，则归类到此分类\r\n        if (matchScore >= 5) {\r\n          categoryInfo.count++;\r\n          categoryInfo.jobs.push(job);\r\n        }\r\n      });\r\n    });\r\n    \r\n    // 只返回有工作的分类，并按数量排序\r\n    const validCategories = Object.entries(categoryRules)\r\n      .filter(([_, categoryInfo]) => categoryInfo.count > 0)\r\n      .sort(([, a], [, b]) => b.count - a.count)\r\n      .slice(0, 8) // 最多显示8个分类\r\n      .map(([categoryId, categoryInfo]) => ({\r\n        id: categoryId,\r\n        label: `${categoryInfo.label} (${categoryInfo.count})`,\r\n        count: categoryInfo.count\r\n      }));\r\n    \r\n    console.log('生成的动态分类:', validCategories);\r\n    \r\n    // 输出详细的分类信息用于调试\r\n    validCategories.forEach(category => {\r\n      const categoryRule = categoryRules[category.id];\r\n      console.log(`${category.label}:`, categoryRule.jobs.slice(0, 3).map(job => job.title));\r\n    });\r\n    \r\n    return validCategories;\r\n  };\r\n\r\n  // 过滤函数：保留所有工作，不再限制为设计工作\r\n  const filterJobs = (jobs) => {\r\n    console.log('处理工作数据，总数:', jobs.length);\r\n    return jobs; // 返回所有工作\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 获取真实的远程工作数据\r\n    const fetchJobs = async () => {\r\n      setLoading(true);\r\n      setJobs([]);\r\n      setFilteredJobs([]);\r\n      setPage(0);\r\n      setHasMore(true);\r\n      \r\n      try {\r\n        // 使用更通用的搜索词来获取更多结果\r\n        const designSearchTerms = searchTerm || '';\r\n        \r\n        // 尝试从真实API获取数据\r\n        const result = await jobService.searchRemoteJobs(designSearchTerms, {\r\n          ...activeFilters,\r\n          category: 'design' // 如果API支持分类，优先获取设计类工作\r\n        });\r\n        \r\n        // 先查看所有返回的工作，然后再过滤\r\n        console.log('All jobs returned from API:', result.jobs.length);\r\n        console.log('Sample jobs:', result.jobs.slice(0, 5).map(job => ({\r\n          title: job.title,\r\n          company: job.company,\r\n          description: job.description ? job.description.substring(0, 100) + '...' : 'No description',\r\n          skills: job.skills\r\n        })));\r\n        \r\n        // 处理所有工作数据\r\n        const allJobs = filterJobs(result.jobs);\r\n        \r\n        console.log(`处理了 ${allJobs.length} 个工作`);\r\n        setJobs(allJobs);\r\n        setFilteredJobs(allJobs);\r\n        \r\n        // 生成动态分类\r\n        const categories = generateDynamicCategories(allJobs);\r\n        setDynamicCategories(categories);\r\n        setDataSources(result.sources || []);\r\n        \r\n        // 如果返回的工作数量小于预期，可能没有更多数据了\r\n        if (result.jobs.length < 20) {\r\n          setHasMore(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch jobs from API, using mock data:', error);\r\n        // 如果API失败，使用模拟数据作为后备\r\n        const filteredMockJobs = filterJobs(mockJobs);\r\n        setJobs(filteredMockJobs);\r\n        setFilteredJobs(filteredMockJobs);\r\n        \r\n        // 生成动态分类\r\n        const categories = generateDynamicCategories(filteredMockJobs);\r\n        setDynamicCategories(categories);\r\n        setDataSources(['Mock Data']);\r\n        setHasMore(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [searchTerm]); // 移除activeFilters依赖，筛选只在本地进行\r\n\r\n  const handleSearch = (term) => {\r\n    // 更新搜索词状态\r\n    if (term !== undefined && term !== null) {\r\n      setSearchTerm(term);\r\n    }\r\n    \r\n    // 设置搜索状态为正在搜索\r\n    setSearching(true);\r\n    \r\n    // 使用setTimeout模拟搜索延迟，提供更好的用户体验\r\n    setTimeout(() => {\r\n      // 重新应用筛选器，包括新的搜索词\r\n      applyFiltersToJobs(activeFilters);\r\n      setSearching(false);\r\n    }, 300); // 300ms的延迟，提供更流畅的搜索体验\r\n  };\r\n\r\n  const handleFilter = (filterIds) => {\r\n    console.log('筛选器更新:', filterIds);\r\n    \r\n    // 更新活动筛选器状态\r\n    setActiveFilters(filterIds);\r\n    \r\n    // 立即应用筛选到当前已加载的工作\r\n    applyFiltersToJobs(filterIds);\r\n  };\r\n\r\n  // 统一的工作分类匹配函数 - 与generateDynamicCategories使用相同的逻辑\r\n  const getJobCategoryMatch = (job, categoryId) => {\r\n    const title = job.title.toLowerCase();\r\n    const description = job.description ? job.description.toLowerCase() : '';\r\n    const skills = job.skills ? job.skills.join(' ').toLowerCase() : '';\r\n    \r\n    // 使用与generateDynamicCategories相同的分类规则\r\n    const categoryRules = {\r\n      'ux-designer': {\r\n        primaryKeywords: ['ux designer', 'user experience designer', 'ux/ui designer', 'ui/ux designer'],\r\n        secondaryKeywords: ['ux', 'user experience', 'interaction design', 'usability', 'user research'],\r\n        excludeKeywords: ['ux writer', 'ux content']\r\n      },\r\n      'ui-designer': {\r\n        primaryKeywords: ['ui designer', 'user interface designer', 'interface designer'],\r\n        secondaryKeywords: ['ui', 'user interface', 'visual design', 'interface design'],\r\n        excludeKeywords: ['ui developer', 'ui engineer']\r\n      },\r\n      'product-designer': {\r\n        primaryKeywords: ['product designer', 'digital product designer'],\r\n        secondaryKeywords: ['product design', 'design lead', 'senior designer'],\r\n        excludeKeywords: ['product manager', 'product owner']\r\n      },\r\n      'frontend-developer': {\r\n        primaryKeywords: ['frontend developer', 'front-end developer', 'front end developer', 'react developer', 'vue developer', 'angular developer'],\r\n        secondaryKeywords: ['frontend', 'front-end', 'javascript', 'react', 'vue', 'angular', 'html', 'css'],\r\n        excludeKeywords: []\r\n      },\r\n      'backend-developer': {\r\n        primaryKeywords: ['backend developer', 'back-end developer', 'server developer', 'api developer'],\r\n        secondaryKeywords: ['backend', 'back-end', 'server', 'api', 'node.js', 'python', 'java', 'php', 'ruby'],\r\n        excludeKeywords: []\r\n      },\r\n      'fullstack-developer': {\r\n        primaryKeywords: ['full stack developer', 'fullstack developer', 'full-stack developer'],\r\n        secondaryKeywords: ['full stack', 'fullstack', 'full-stack'],\r\n        excludeKeywords: []\r\n      },\r\n      'data-scientist': {\r\n        primaryKeywords: ['data scientist', 'machine learning engineer', 'ai engineer'],\r\n        secondaryKeywords: ['data science', 'machine learning', 'artificial intelligence', 'analytics', 'big data'],\r\n        excludeKeywords: []\r\n      },\r\n      'devops-engineer': {\r\n        primaryKeywords: ['devops engineer', 'site reliability engineer', 'sre', 'cloud engineer'],\r\n        secondaryKeywords: ['devops', 'infrastructure', 'cloud', 'aws', 'azure', 'kubernetes', 'docker'],\r\n        excludeKeywords: []\r\n      },\r\n      'mobile-developer': {\r\n        primaryKeywords: ['mobile developer', 'ios developer', 'android developer', 'react native developer'],\r\n        secondaryKeywords: ['mobile', 'ios', 'android', 'react native', 'flutter', 'swift', 'kotlin'],\r\n        excludeKeywords: []\r\n      },\r\n      'graphic-designer': {\r\n        primaryKeywords: ['graphic designer', 'visual designer', 'brand designer'],\r\n        secondaryKeywords: ['graphic design', 'visual design', 'brand design', 'creative design'],\r\n        excludeKeywords: []\r\n      },\r\n      'marketing-specialist': {\r\n        primaryKeywords: ['marketing specialist', 'digital marketing', 'marketing manager', 'growth marketer'],\r\n        secondaryKeywords: ['marketing', 'content marketing', 'social media', 'seo', 'sem', 'growth'],\r\n        excludeKeywords: []\r\n      },\r\n      'project-manager': {\r\n        primaryKeywords: ['project manager', 'program manager', 'scrum master', 'product manager'],\r\n        secondaryKeywords: ['project management', 'agile', 'scrum', 'product management'],\r\n        excludeKeywords: []\r\n      }\r\n    };\r\n    \r\n    const categoryInfo = categoryRules[categoryId];\r\n    if (!categoryInfo) return false;\r\n    \r\n    let matchScore = 0;\r\n    \r\n    // 检查主要关键词（高权重）\r\n    const primaryMatch = categoryInfo.primaryKeywords.some(keyword => \r\n      title.includes(keyword) || description.includes(keyword)\r\n    );\r\n    if (primaryMatch) matchScore += 10;\r\n    \r\n    // 检查次要关键词（低权重）\r\n    const secondaryMatches = categoryInfo.secondaryKeywords.filter(keyword => \r\n      title.includes(keyword) || description.includes(keyword) || skills.includes(keyword)\r\n    ).length;\r\n    matchScore += secondaryMatches * 2;\r\n    \r\n    // 检查排除关键词（负权重）\r\n    const excludeMatch = categoryInfo.excludeKeywords.some(keyword => \r\n      title.includes(keyword) || description.includes(keyword)\r\n    );\r\n    if (excludeMatch) matchScore -= 5;\r\n    \r\n    // 返回是否匹配（使用与generateDynamicCategories相同的阈值）\r\n    return matchScore >= 5;\r\n  };\r\n\r\n  // 增强的搜索相关性评分函数\r\n  const calculateSearchRelevance = (job, searchTerm) => {\r\n    if (!searchTerm) return 0;\r\n    \r\n    const term = searchTerm.toLowerCase();\r\n    const title = job.title.toLowerCase();\r\n    const company = job.company.toLowerCase();\r\n    const location = job.location.toLowerCase();\r\n    const description = job.description ? job.description.toLowerCase() : '';\r\n    const skills = job.skills ? job.skills.join(' ').toLowerCase() : '';\r\n    \r\n    let score = 0;\r\n    \r\n    // 标题匹配（最高权重）\r\n    if (title.includes(term)) {\r\n      if (title.startsWith(term)) score += 100; // 标题开头匹配\r\n      else if (title.split(' ').some(word => word.startsWith(term))) score += 80; // 单词开头匹配\r\n      else score += 60; // 标题包含\r\n    }\r\n    \r\n    // 公司名称匹配（高权重）\r\n    if (company.includes(term)) {\r\n      if (company.startsWith(term)) score += 50;\r\n      else score += 30;\r\n    }\r\n    \r\n    // 技能匹配（中等权重）\r\n    if (skills.includes(term)) {\r\n      const skillWords = skills.split(' ');\r\n      if (skillWords.some(skill => skill === term)) score += 40; // 精确技能匹配\r\n      else score += 20; // 技能包含\r\n    }\r\n    \r\n    // 描述匹配（较低权重）\r\n    if (description.includes(term)) {\r\n      const termCount = (description.match(new RegExp(term, 'g')) || []).length;\r\n      score += Math.min(termCount * 5, 25); // 最多25分，避免描述过度影响\r\n    }\r\n    \r\n    // 位置匹配（较低权重）\r\n    if (location.includes(term)) {\r\n      score += 15;\r\n    }\r\n    \r\n    // 多词搜索的额外评分\r\n    const searchWords = term.split(' ').filter(word => word.length > 2);\r\n    if (searchWords.length > 1) {\r\n      const matchedWords = searchWords.filter(word => \r\n        title.includes(word) || company.includes(word) || skills.includes(word)\r\n      );\r\n      score += matchedWords.length * 10; // 每个匹配的词额外10分\r\n    }\r\n    \r\n    return score;\r\n  };\r\n\r\n  // 应用筛选器到工作列表 - 使用统一的匹配逻辑和相关性排序\r\n  const applyFiltersToJobs = (filterIds) => {\r\n    let results = [...jobs];\r\n    \r\n    // 首先按搜索词过滤并计算相关性\r\n    if (searchTerm) {\r\n      results = results\r\n        .map(job => ({\r\n          ...job,\r\n          relevanceScore: calculateSearchRelevance(job, searchTerm)\r\n        }))\r\n        .filter(job => job.relevanceScore > 0) // 只保留有相关性的工作\r\n        .sort((a, b) => b.relevanceScore - a.relevanceScore); // 按相关性排序\r\n      \r\n      console.log(`搜索 \"${searchTerm}\" 找到 ${results.length} 个相关工作`);\r\n      console.log('前5个最相关的工作:', results.slice(0, 5).map(job => ({\r\n        title: job.title,\r\n        company: job.company,\r\n        score: job.relevanceScore\r\n      })));\r\n    }\r\n    \r\n    // 然后按职位类型筛选 - 使用与分类生成相同的智能匹配逻辑\r\n    if (filterIds && filterIds.length > 0) {\r\n      results = results.filter(job => {\r\n        // 检查工作是否匹配任一激活的筛选器\r\n        return filterIds.some(filterId => getJobCategoryMatch(job, filterId));\r\n      });\r\n    }\r\n    \r\n    console.log(`筛选结果: ${results.length} 个工作 (原始: ${jobs.length}, 筛选器: ${filterIds})`);\r\n    \r\n    // 输出调试信息，显示每个筛选器匹配到的工作\r\n    if (filterIds && filterIds.length > 0) {\r\n      filterIds.forEach(filterId => {\r\n        const matchedJobs = results.filter(job => getJobCategoryMatch(job, filterId));\r\n        console.log(`筛选器 ${filterId} 匹配到 ${matchedJobs.length} 个工作:`, \r\n          matchedJobs.slice(0, 3).map(job => job.title));\r\n      });\r\n    }\r\n    \r\n    setFilteredJobs(results);\r\n  };\r\n  \r\n\r\n\r\n  // 处理工作卡片点击\r\n  const handleJobSelect = (job) => {\r\n    setSelectedJob(job);\r\n    setIsDrawerOpen(true);\r\n  };\r\n  \r\n  // 处理关闭抽屉\r\n  const handleCloseDrawer = () => {\r\n    setIsDrawerOpen(false);\r\n  };\r\n  \r\n  // 处理申请工作\r\n  const handleApplyJob = (jobId) => {\r\n    console.log(`Applying for job: ${jobId}`);\r\n    \r\n    // 直接使用selectedJob，而不是从jobs数组中查找\r\n    const job = selectedJob;\r\n    \r\n    if (!job) {\r\n      console.error('No selected job found');\r\n      alert('无法找到选中的工作');\r\n      return;\r\n    }\r\n    \r\n    // 详细记录工作对象，帮助调试\r\n    console.log('Selected job details:', {\r\n      id: job.id,\r\n      title: job.title,\r\n      company: job.company,\r\n      source: job.source,\r\n      sourceUrl: job.sourceUrl,\r\n      sourceId: job.sourceId\r\n    });\r\n    \r\n    // 创建一个隐藏的a标签来打开链接，这样可以避免弹出窗口被阻止\r\n    const openLink = (url) => {\r\n      console.log(`Attempting to open URL: ${url}`);\r\n      \r\n      // 创建一个隐藏的a标签\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.target = '_blank';\r\n      link.rel = 'noopener noreferrer';\r\n      \r\n      // 添加到文档中并触发点击\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      \r\n      // 清理\r\n      setTimeout(() => {\r\n        document.body.removeChild(link);\r\n      }, 100);\r\n    };\r\n    \r\n    let finalUrl = '';\r\n    \r\n    if (job.sourceUrl) {\r\n      // 如果有源URL，使用它\r\n      console.log(`Using source URL: ${job.sourceUrl}`);\r\n      finalUrl = job.sourceUrl;\r\n    } else if (job.source) {\r\n      // 如果没有源URL但有来源信息，尝试构建URL\r\n      switch (job.source) {\r\n        case 'LinkedIn':\r\n          finalUrl = `https://www.linkedin.com/jobs/view/${job.sourceId || job.id}`;\r\n          break;\r\n        case 'WeWorkRemotely':\r\n          // 尝试使用更可能正确的WeWorkRemotely URL格式\r\n          if (job.company && job.title) {\r\n            // 将公司名和职位名转换为URL友好的格式\r\n            const companySlug = job.company.toLowerCase().replace(/[^a-z0-9]+/g, '-');\r\n            const titleSlug = job.title.toLowerCase().replace(/[^a-z0-9]+/g, '-');\r\n            finalUrl = `https://weworkremotely.com/remote-jobs/${companySlug}-${titleSlug}`;\r\n          } else {\r\n            finalUrl = `https://weworkremotely.com/remote-jobs/${job.sourceId || job.id}`;\r\n          }\r\n          break;\r\n        case 'RemoteOK':\r\n          finalUrl = `https://remoteok.io/l/${job.sourceId || job.id}`;\r\n          break;\r\n        default:\r\n          // 如果无法确定来源，尝试使用通用搜索\r\n          finalUrl = `https://www.google.com/search?q=${encodeURIComponent(`${job.title} ${job.company} job`)}`;\r\n      }\r\n      console.log(`Constructed URL: ${finalUrl}`);\r\n    } else {\r\n      // 如果没有任何链接信息，显示提示并使用Google搜索\r\n      console.error('No source URL or source information found for job:', job);\r\n      finalUrl = `https://www.google.com/search?q=${encodeURIComponent(`${job.title} ${job.company} job`)}`;\r\n      alert('无法找到精确的工作链接，将使用Google搜索');\r\n    }\r\n    \r\n    // 尝试打开链接\r\n    if (finalUrl) {\r\n      openLink(finalUrl);\r\n    } else {\r\n      alert('无法生成有效的工作链接');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`job-feed ${isDrawerOpen ? 'drawer-open' : ''}`}>\r\n      <Header \r\n        onSearch={(term) => handleSearch(term)} \r\n        onFilter={handleFilter}\r\n        dynamicCategories={dynamicCategories}\r\n      />\r\n      \r\n      <div className=\"job-list-container\">\r\n        {loading ? (\r\n          <div className=\"loading-container\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Loading jobs...</p>\r\n          </div>\r\n        ) : searching ? (\r\n          <div className=\"searching-container\">\r\n            <div className=\"loading-spinner small\"></div>\r\n            <p>Searching...</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {filteredJobs.length > 0 ? (\r\n              <>\r\n                <div className=\"results-count\">\r\n                  找到 <span className=\"count-highlight\">{filteredJobs.length}</span> 个工作机会\r\n                </div>\r\n                <div className=\"data-sources\">\r\n                  数据来源: {dataSources.join(', ')}\r\n                </div>\r\n                <div className=\"job-list\">\r\n                  {filteredJobs.map((job, index) => {\r\n                    if (filteredJobs.length === index + 1) {\r\n                      return (\r\n                        <div ref={lastJobElementRef} key={job.id}>\r\n                          <JobCard \r\n                            job={job} \r\n                            onSelect={() => handleJobSelect(job)}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <JobCard \r\n                          key={job.id} \r\n                          job={job} \r\n                          onSelect={() => handleJobSelect(job)}\r\n                        />\r\n                      );\r\n                    }\r\n                  })}\r\n                  {loadingMore && (\r\n                    <div className=\"loading-more\">\r\n                      <div className=\"loading-spinner small\"></div>\r\n                      <p>加载更多工作...</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"no-jobs-found\">\r\n                <h3>No jobs found</h3>\r\n                <p>Try adjusting your search filters</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      \r\n      <JobDetailsDrawer \r\n        job={selectedJob}\r\n        isOpen={isDrawerOpen}\r\n        onClose={handleCloseDrawer}\r\n        onApply={handleApplyJob}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}