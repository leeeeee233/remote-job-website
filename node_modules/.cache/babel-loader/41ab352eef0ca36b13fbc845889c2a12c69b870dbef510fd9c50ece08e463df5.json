{"ast":null,"code":"// 备用工作服务 - 只使用真实数据源\nimport{fetchRealRemoteJobs}from'./realJobAPI';// 简化的工作搜索服务，只使用真实数据\nexport const searchJobsWithFallback=async function(){let searchTerm=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};console.log('🔄 开始搜索真实工作数据，搜索词:',searchTerm,'筛选器:',filters);try{// 只从真实API获取数据\nconst result=await fetchRealRemoteJobs(searchTerm,filters);if(result&&result.jobs&&result.jobs.length>0){console.log('✅ 获取了',result.jobs.length,'个真实工作');// 应用搜索和筛选\nconst filteredJobs=applySearchAndFilters(result.jobs,searchTerm,filters);return{jobs:filteredJobs,total:filteredJobs.length,sources:getDataSources(filteredJobs),hasMore:false,page:0,pageSize:filteredJobs.length};}else{console.warn('⚠️ 未获取到任何真实工作数据');return{jobs:[],total:0,sources:['No Data Available'],hasMore:false,page:0,pageSize:0};}}catch(error){console.error('❌ 真实数据获取失败:',error);// 如果完全失败，返回空结果\nreturn{jobs:[],total:0,sources:['No Data Available'],hasMore:false,page:0,pageSize:0,error:'无法获取工作数据，请稍后重试'};}};// 应用搜索和筛选逻辑\nconst applySearchAndFilters=(jobs,searchTerm,filters)=>{let filteredJobs=[...jobs];// 搜索筛选\nif(searchTerm&&searchTerm.trim()){const term=searchTerm.toLowerCase().trim();filteredJobs=filteredJobs.filter(job=>{return job.title.toLowerCase().includes(term)||job.company.toLowerCase().includes(term)||job.description.toLowerCase().includes(term)||job.skills&&job.skills.some(skill=>skill.toLowerCase().includes(term));});}// 职位类型筛选\nif(filters&&Array.isArray(filters)&&filters.length>0){filteredJobs=filteredJobs.filter(job=>{return filters.some(filter=>matchJobToFilter(job,filter));});}// 按相关性和日期排序\nreturn sortJobs(filteredJobs,searchTerm);};// 工作与筛选器匹配\nconst matchJobToFilter=(job,filter)=>{const title=job.title.toLowerCase();const description=job.description?job.description.toLowerCase():'';const skills=job.skills?job.skills.join(' ').toLowerCase():'';const filterMap={'frontend-developer':['frontend','front-end','react','vue','angular','javascript'],'backend-developer':['backend','back-end','api','server','node','python','java'],'fullstack-developer':['full stack','fullstack','full-stack'],'ux-designer':['ux designer','user experience','ux'],'ui-designer':['ui designer','user interface','ui'],'product-designer':['product designer','product design'],'data-scientist':['data scientist','machine learning','data science'],'devops-engineer':['devops','infrastructure','cloud','kubernetes'],'mobile-developer':['mobile','ios','android','react native'],'marketing-specialist':['marketing','content marketing','digital marketing'],'project-manager':['project manager','program manager','scrum master']};const keywords=filterMap[filter]||[];return keywords.some(keyword=>title.includes(keyword)||description.includes(keyword)||skills.includes(keyword));};// 工作排序\nconst sortJobs=(jobs,searchTerm)=>{return jobs.sort((a,b)=>{// 如果有搜索词，按相关性排序\nif(searchTerm){const scoreA=calculateRelevanceScore(a,searchTerm);const scoreB=calculateRelevanceScore(b,searchTerm);if(scoreA!==scoreB)return scoreB-scoreA;}// 按发布日期排序\nconst dateOrder=['Today','Yesterday','2 days ago','3 days ago','4 days ago','5 days ago','6 days ago','1 week ago'];const indexA=dateOrder.indexOf(a.postedDate);const indexB=dateOrder.indexOf(b.postedDate);if(indexA!==-1&&indexB!==-1){return indexA-indexB;}if(indexA!==-1)return-1;if(indexB!==-1)return 1;return 0;});};// 计算相关性分数\nconst calculateRelevanceScore=(job,searchTerm)=>{if(!searchTerm)return 0;const term=searchTerm.toLowerCase();let score=0;// 标题匹配（最高权重）\nif(job.title.toLowerCase().includes(term))score+=10;// 公司匹配\nif(job.company.toLowerCase().includes(term))score+=5;// 技能匹配\nif(job.skills&&job.skills.some(skill=>skill.toLowerCase().includes(term)))score+=8;// 描述匹配\nif(job.description&&job.description.toLowerCase().includes(term))score+=3;return score;};// 获取数据源\nconst getDataSources=jobs=>{const sources=[...new Set(jobs.map(job=>job.source||'Unknown Source'))];return sources;};export default{searchJobsWithFallback};","map":{"version":3,"names":["fetchRealRemoteJobs","searchJobsWithFallback","searchTerm","arguments","length","undefined","filters","console","log","result","jobs","filteredJobs","applySearchAndFilters","total","sources","getDataSources","hasMore","page","pageSize","warn","error","trim","term","toLowerCase","filter","job","title","includes","company","description","skills","some","skill","Array","isArray","matchJobToFilter","sortJobs","join","filterMap","keywords","keyword","sort","a","b","scoreA","calculateRelevanceScore","scoreB","dateOrder","indexA","indexOf","postedDate","indexB","score","Set","map","source"],"sources":["D:/Kiro/remote-job-website/src/services/fallbackJobService.js"],"sourcesContent":["// 备用工作服务 - 只使用真实数据源\r\nimport { fetchRealRemoteJobs } from './realJobAPI';\r\n\r\n// 简化的工作搜索服务，只使用真实数据\r\nexport const searchJobsWithFallback = async (searchTerm = '', filters = {}) => {\r\n  console.log('🔄 开始搜索真实工作数据，搜索词:', searchTerm, '筛选器:', filters);\r\n  \r\n  try {\r\n    // 只从真实API获取数据\r\n    const result = await fetchRealRemoteJobs(searchTerm, filters);\r\n    \r\n    if (result && result.jobs && result.jobs.length > 0) {\r\n      console.log('✅ 获取了', result.jobs.length, '个真实工作');\r\n      \r\n      // 应用搜索和筛选\r\n      const filteredJobs = applySearchAndFilters(result.jobs, searchTerm, filters);\r\n      \r\n      return {\r\n        jobs: filteredJobs,\r\n        total: filteredJobs.length,\r\n        sources: getDataSources(filteredJobs),\r\n        hasMore: false,\r\n        page: 0,\r\n        pageSize: filteredJobs.length\r\n      };\r\n    } else {\r\n      console.warn('⚠️ 未获取到任何真实工作数据');\r\n      return {\r\n        jobs: [],\r\n        total: 0,\r\n        sources: ['No Data Available'],\r\n        hasMore: false,\r\n        page: 0,\r\n        pageSize: 0\r\n      };\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('❌ 真实数据获取失败:', error);\r\n    \r\n    // 如果完全失败，返回空结果\r\n    return {\r\n      jobs: [],\r\n      total: 0,\r\n      sources: ['No Data Available'],\r\n      hasMore: false,\r\n      page: 0,\r\n      pageSize: 0,\r\n      error: '无法获取工作数据，请稍后重试'\r\n    };\r\n  }\r\n};\r\n\r\n// 应用搜索和筛选逻辑\r\nconst applySearchAndFilters = (jobs, searchTerm, filters) => {\r\n  let filteredJobs = [...jobs];\r\n  \r\n  // 搜索筛选\r\n  if (searchTerm && searchTerm.trim()) {\r\n    const term = searchTerm.toLowerCase().trim();\r\n    filteredJobs = filteredJobs.filter(job => {\r\n      return (\r\n        job.title.toLowerCase().includes(term) ||\r\n        job.company.toLowerCase().includes(term) ||\r\n        job.description.toLowerCase().includes(term) ||\r\n        (job.skills && job.skills.some(skill => skill.toLowerCase().includes(term)))\r\n      );\r\n    });\r\n  }\r\n  \r\n  // 职位类型筛选\r\n  if (filters && Array.isArray(filters) && filters.length > 0) {\r\n    filteredJobs = filteredJobs.filter(job => {\r\n      return filters.some(filter => matchJobToFilter(job, filter));\r\n    });\r\n  }\r\n  \r\n  // 按相关性和日期排序\r\n  return sortJobs(filteredJobs, searchTerm);\r\n};\r\n\r\n// 工作与筛选器匹配\r\nconst matchJobToFilter = (job, filter) => {\r\n  const title = job.title.toLowerCase();\r\n  const description = job.description ? job.description.toLowerCase() : '';\r\n  const skills = job.skills ? job.skills.join(' ').toLowerCase() : '';\r\n  \r\n  const filterMap = {\r\n    'frontend-developer': ['frontend', 'front-end', 'react', 'vue', 'angular', 'javascript'],\r\n    'backend-developer': ['backend', 'back-end', 'api', 'server', 'node', 'python', 'java'],\r\n    'fullstack-developer': ['full stack', 'fullstack', 'full-stack'],\r\n    'ux-designer': ['ux designer', 'user experience', 'ux'],\r\n    'ui-designer': ['ui designer', 'user interface', 'ui'],\r\n    'product-designer': ['product designer', 'product design'],\r\n    'data-scientist': ['data scientist', 'machine learning', 'data science'],\r\n    'devops-engineer': ['devops', 'infrastructure', 'cloud', 'kubernetes'],\r\n    'mobile-developer': ['mobile', 'ios', 'android', 'react native'],\r\n    'marketing-specialist': ['marketing', 'content marketing', 'digital marketing'],\r\n    'project-manager': ['project manager', 'program manager', 'scrum master']\r\n  };\r\n  \r\n  const keywords = filterMap[filter] || [];\r\n  return keywords.some(keyword => \r\n    title.includes(keyword) || description.includes(keyword) || skills.includes(keyword)\r\n  );\r\n};\r\n\r\n// 工作排序\r\nconst sortJobs = (jobs, searchTerm) => {\r\n  return jobs.sort((a, b) => {\r\n    // 如果有搜索词，按相关性排序\r\n    if (searchTerm) {\r\n      const scoreA = calculateRelevanceScore(a, searchTerm);\r\n      const scoreB = calculateRelevanceScore(b, searchTerm);\r\n      if (scoreA !== scoreB) return scoreB - scoreA;\r\n    }\r\n    \r\n    // 按发布日期排序\r\n    const dateOrder = ['Today', 'Yesterday', '2 days ago', '3 days ago', '4 days ago', '5 days ago', '6 days ago', '1 week ago'];\r\n    const indexA = dateOrder.indexOf(a.postedDate);\r\n    const indexB = dateOrder.indexOf(b.postedDate);\r\n    \r\n    if (indexA !== -1 && indexB !== -1) {\r\n      return indexA - indexB;\r\n    }\r\n    if (indexA !== -1) return -1;\r\n    if (indexB !== -1) return 1;\r\n    \r\n    return 0;\r\n  });\r\n};\r\n\r\n// 计算相关性分数\r\nconst calculateRelevanceScore = (job, searchTerm) => {\r\n  if (!searchTerm) return 0;\r\n  \r\n  const term = searchTerm.toLowerCase();\r\n  let score = 0;\r\n  \r\n  // 标题匹配（最高权重）\r\n  if (job.title.toLowerCase().includes(term)) score += 10;\r\n  \r\n  // 公司匹配\r\n  if (job.company.toLowerCase().includes(term)) score += 5;\r\n  \r\n  // 技能匹配\r\n  if (job.skills && job.skills.some(skill => skill.toLowerCase().includes(term))) score += 8;\r\n  \r\n  // 描述匹配\r\n  if (job.description && job.description.toLowerCase().includes(term)) score += 3;\r\n  \r\n  return score;\r\n};\r\n\r\n// 获取数据源\r\nconst getDataSources = (jobs) => {\r\n  const sources = [...new Set(jobs.map(job => job.source || 'Unknown Source'))];\r\n  return sources;\r\n};\r\n\r\nexport default {\r\n  searchJobsWithFallback\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}