{"ast":null,"code":"// 使用真实的Job API服务\n// 这里集成一些公开的工作API\n\n// 1. Adzuna Jobs API (免费，有配额限制)\nconst ADZUNA_APP_ID = process.env.REACT_APP_ADZUNA_APP_ID;\nconst ADZUNA_APP_KEY = process.env.REACT_APP_ADZUNA_APP_KEY;\nexport const fetchAdzunaJobs = async (searchTerm = 'remote', location = 'us') => {\n  try {\n    var _data$results;\n    const url = `https://api.adzuna.com/v1/api/jobs/${location}/search/1?app_id=${ADZUNA_APP_ID}&app_key=${ADZUNA_APP_KEY}&results_per_page=20&what=${encodeURIComponent(searchTerm)}&where=remote`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return ((_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.map(job => {\n      var _job$company, _job$company2, _job$company2$display, _job$location, _job$category;\n      return {\n        id: job.id,\n        title: job.title,\n        company: ((_job$company = job.company) === null || _job$company === void 0 ? void 0 : _job$company.display_name) || 'Unknown Company',\n        companyLogo: `https://logo.clearbit.com/${(_job$company2 = job.company) === null || _job$company2 === void 0 ? void 0 : (_job$company2$display = _job$company2.display_name) === null || _job$company2$display === void 0 ? void 0 : _job$company2$display.toLowerCase().replace(/\\s+/g, '')}.com`,\n        location: ((_job$location = job.location) === null || _job$location === void 0 ? void 0 : _job$location.display_name) || 'Remote',\n        type: job.contract_type || 'Full-time',\n        salary: job.salary_max ? Math.round(job.salary_max / 1000) : null,\n        team: ((_job$category = job.category) === null || _job$category === void 0 ? void 0 : _job$category.label) || 'General',\n        postedDate: formatDate(job.created),\n        views: Math.floor(Math.random() * 500) + 50,\n        applicants: Math.floor(Math.random() * 50) + 5,\n        description: job.description || 'No description available',\n        skills: extractSkills(job.description || ''),\n        source: 'Adzuna'\n      };\n    })) || [];\n  } catch (error) {\n    console.error('Error fetching Adzuna jobs:', error);\n    return [];\n  }\n};\n\n// 2. JSearch API (RapidAPI)\nconst JSEARCH_API_KEY = process.env.REACT_APP_JSEARCH_API_KEY;\nexport const fetchJSearchJobs = async (searchTerm = 'remote developer') => {\n  try {\n    var _data$data;\n    const url = 'https://jsearch.p.rapidapi.com/search';\n    const params = new URLSearchParams({\n      query: searchTerm,\n      page: '1',\n      num_pages: '1',\n      date_posted: 'all',\n      remote_jobs_only: 'true'\n    });\n    const response = await fetch(`${url}?${params}`, {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': JSEARCH_API_KEY,\n        'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\n      }\n    });\n    const data = await response.json();\n    return ((_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.map(job => {\n      var _job$employer_name;\n      return {\n        id: job.job_id,\n        title: job.job_title,\n        company: job.employer_name,\n        companyLogo: job.employer_logo || `https://logo.clearbit.com/${(_job$employer_name = job.employer_name) === null || _job$employer_name === void 0 ? void 0 : _job$employer_name.toLowerCase().replace(/\\s+/g, '')}.com`,\n        location: job.job_city ? `${job.job_city}, ${job.job_country}` : 'Remote',\n        type: job.job_employment_type || 'Full-time',\n        salary: job.job_max_salary ? Math.round(job.job_max_salary / 1000) : null,\n        team: job.job_department || 'General',\n        postedDate: formatDate(job.job_posted_at_datetime_utc),\n        views: Math.floor(Math.random() * 500) + 50,\n        applicants: Math.floor(Math.random() * 50) + 5,\n        description: job.job_description || 'No description available',\n        skills: extractSkills(job.job_description || ''),\n        source: 'JSearch'\n      };\n    })) || [];\n  } catch (error) {\n    console.error('Error fetching JSearch jobs:', error);\n    return [];\n  }\n};\n\n// 3. RemoteOK API (免费，但有限制)\nexport const fetchRemoteOKJobs = async (searchTerm = '') => {\n  try {\n    const url = 'https://remoteok.io/api';\n    const response = await fetch(url);\n    const data = await response.json();\n\n    // RemoteOK返回的第一个元素是统计信息，需要跳过\n    const jobs = data.slice(1);\n    let filteredJobs = jobs;\n    if (searchTerm) {\n      filteredJobs = jobs.filter(job => {\n        var _job$position, _job$company3;\n        return ((_job$position = job.position) === null || _job$position === void 0 ? void 0 : _job$position.toLowerCase().includes(searchTerm.toLowerCase())) || ((_job$company3 = job.company) === null || _job$company3 === void 0 ? void 0 : _job$company3.toLowerCase().includes(searchTerm.toLowerCase()));\n      });\n    }\n    return filteredJobs.slice(0, 20).map(job => {\n      var _job$company4, _job$tags;\n      return {\n        id: job.id,\n        title: job.position,\n        company: job.company,\n        companyLogo: job.company_logo || `https://logo.clearbit.com/${(_job$company4 = job.company) === null || _job$company4 === void 0 ? void 0 : _job$company4.toLowerCase().replace(/\\s+/g, '')}.com`,\n        location: 'Remote',\n        type: 'Full-time',\n        salary: job.salary_max ? Math.round(job.salary_max / 1000) : null,\n        team: ((_job$tags = job.tags) === null || _job$tags === void 0 ? void 0 : _job$tags[0]) || 'General',\n        postedDate: formatDate(job.date),\n        views: Math.floor(Math.random() * 500) + 50,\n        applicants: Math.floor(Math.random() * 50) + 5,\n        description: job.description || 'No description available',\n        skills: job.tags || [],\n        source: 'RemoteOK'\n      };\n    });\n  } catch (error) {\n    console.error('Error fetching RemoteOK jobs:', error);\n    return [];\n  }\n};\n\n// 辅助函数\nconst formatDate = dateString => {\n  if (!dateString) return 'Recently';\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffTime = Math.abs(now - date);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  if (diffDays === 1) return 'Today';\n  if (diffDays <= 7) return `${diffDays} days ago`;\n  if (diffDays <= 30) return `${Math.ceil(diffDays / 7)} weeks ago`;\n  return `${Math.ceil(diffDays / 30)} months ago`;\n};\nconst extractSkills = description => {\n  const commonSkills = ['JavaScript', 'Python', 'React', 'Node.js', 'TypeScript', 'Java', 'C++', 'PHP', 'Ruby', 'Go', 'Rust', 'Swift', 'Kotlin', 'HTML', 'CSS', 'SQL', 'MongoDB', 'PostgreSQL', 'MySQL', 'Redis', 'Docker', 'Kubernetes', 'AWS', 'Azure', 'GCP', 'Git', 'Linux', 'Figma', 'Sketch', 'Adobe', 'Photoshop', 'Illustrator'];\n  const foundSkills = commonSkills.filter(skill => description.toLowerCase().includes(skill.toLowerCase()));\n  return foundSkills.slice(0, 5); // 限制为5个技能\n};\n\n// 综合获取真实工作数据\nexport const fetchRealRemoteJobs = async (searchTerm = '', filters = {}) => {\n  try {\n    // 并行调用多个API\n    const [remoteOKJobs, adzunaJobs, jsearchJobs] = await Promise.allSettled([fetchRemoteOKJobs(searchTerm), ADZUNA_APP_ID && ADZUNA_APP_KEY ? fetchAdzunaJobs(searchTerm) : Promise.resolve([]), JSEARCH_API_KEY ? fetchJSearchJobs(searchTerm) : Promise.resolve([])]);\n    const allJobs = [...(remoteOKJobs.status === 'fulfilled' ? remoteOKJobs.value : []), ...(adzunaJobs.status === 'fulfilled' ? adzunaJobs.value : []), ...(jsearchJobs.status === 'fulfilled' ? jsearchJobs.value : [])];\n\n    // 去重和排序\n    const uniqueJobs = removeDuplicates(allJobs);\n    const sortedJobs = uniqueJobs.sort((a, b) => {\n      // 优先显示今天发布的工作\n      if (a.postedDate === 'Today' && b.postedDate !== 'Today') return -1;\n      if (b.postedDate === 'Today' && a.postedDate !== 'Today') return 1;\n      return 0;\n    });\n    return {\n      jobs: sortedJobs,\n      total: sortedJobs.length,\n      sources: ['RemoteOK', 'Adzuna', 'JSearch'].filter(source => {\n        return allJobs.some(job => job.source === source);\n      })\n    };\n  } catch (error) {\n    console.error('Error fetching real remote jobs:', error);\n    throw error;\n  }\n};\nconst removeDuplicates = jobs => {\n  const seen = new Set();\n  return jobs.filter(job => {\n    const key = `${job.title}-${job.company}`.toLowerCase().replace(/\\s+/g, '');\n    if (seen.has(key)) return false;\n    seen.add(key);\n    return true;\n  });\n};\nexport default {\n  fetchRealRemoteJobs,\n  fetchRemoteOKJobs,\n  fetchAdzunaJobs,\n  fetchJSearchJobs\n};","map":{"version":3,"names":["ADZUNA_APP_ID","process","env","REACT_APP_ADZUNA_APP_ID","ADZUNA_APP_KEY","REACT_APP_ADZUNA_APP_KEY","fetchAdzunaJobs","searchTerm","location","_data$results","url","encodeURIComponent","response","fetch","data","json","results","map","job","_job$company","_job$company2","_job$company2$display","_job$location","_job$category","id","title","company","display_name","companyLogo","toLowerCase","replace","type","contract_type","salary","salary_max","Math","round","team","category","label","postedDate","formatDate","created","views","floor","random","applicants","description","skills","extractSkills","source","error","console","JSEARCH_API_KEY","REACT_APP_JSEARCH_API_KEY","fetchJSearchJobs","_data$data","params","URLSearchParams","query","page","num_pages","date_posted","remote_jobs_only","method","headers","_job$employer_name","job_id","job_title","employer_name","employer_logo","job_city","job_country","job_employment_type","job_max_salary","job_department","job_posted_at_datetime_utc","job_description","fetchRemoteOKJobs","jobs","slice","filteredJobs","filter","_job$position","_job$company3","position","includes","_job$company4","_job$tags","company_logo","tags","date","dateString","Date","now","diffTime","abs","diffDays","ceil","commonSkills","foundSkills","skill","fetchRealRemoteJobs","filters","remoteOKJobs","adzunaJobs","jsearchJobs","Promise","allSettled","resolve","allJobs","status","value","uniqueJobs","removeDuplicates","sortedJobs","sort","a","b","total","length","sources","some","seen","Set","key","has","add"],"sources":["D:/Kiro/remote-job-website/src/services/realJobAPI.js"],"sourcesContent":["// 使用真实的Job API服务\r\n// 这里集成一些公开的工作API\r\n\r\n// 1. Adzuna Jobs API (免费，有配额限制)\r\nconst ADZUNA_APP_ID = process.env.REACT_APP_ADZUNA_APP_ID;\r\nconst ADZUNA_APP_KEY = process.env.REACT_APP_ADZUNA_APP_KEY;\r\n\r\nexport const fetchAdzunaJobs = async (searchTerm = 'remote', location = 'us') => {\r\n  try {\r\n    const url = `https://api.adzuna.com/v1/api/jobs/${location}/search/1?app_id=${ADZUNA_APP_ID}&app_key=${ADZUNA_APP_KEY}&results_per_page=20&what=${encodeURIComponent(searchTerm)}&where=remote`;\r\n    \r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    \r\n    return data.results?.map(job => ({\r\n      id: job.id,\r\n      title: job.title,\r\n      company: job.company?.display_name || 'Unknown Company',\r\n      companyLogo: `https://logo.clearbit.com/${job.company?.display_name?.toLowerCase().replace(/\\s+/g, '')}.com`,\r\n      location: job.location?.display_name || 'Remote',\r\n      type: job.contract_type || 'Full-time',\r\n      salary: job.salary_max ? Math.round(job.salary_max / 1000) : null,\r\n      team: job.category?.label || 'General',\r\n      postedDate: formatDate(job.created),\r\n      views: Math.floor(Math.random() * 500) + 50,\r\n      applicants: Math.floor(Math.random() * 50) + 5,\r\n      description: job.description || 'No description available',\r\n      skills: extractSkills(job.description || ''),\r\n      source: 'Adzuna'\r\n    })) || [];\r\n  } catch (error) {\r\n    console.error('Error fetching Adzuna jobs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// 2. JSearch API (RapidAPI)\r\nconst JSEARCH_API_KEY = process.env.REACT_APP_JSEARCH_API_KEY;\r\n\r\nexport const fetchJSearchJobs = async (searchTerm = 'remote developer') => {\r\n  try {\r\n    const url = 'https://jsearch.p.rapidapi.com/search';\r\n    const params = new URLSearchParams({\r\n      query: searchTerm,\r\n      page: '1',\r\n      num_pages: '1',\r\n      date_posted: 'all',\r\n      remote_jobs_only: 'true'\r\n    });\r\n\r\n    const response = await fetch(`${url}?${params}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-RapidAPI-Key': JSEARCH_API_KEY,\r\n        'X-RapidAPI-Host': 'jsearch.p.rapidapi.com'\r\n      }\r\n    });\r\n\r\n    const data = await response.json();\r\n    \r\n    return data.data?.map(job => ({\r\n      id: job.job_id,\r\n      title: job.job_title,\r\n      company: job.employer_name,\r\n      companyLogo: job.employer_logo || `https://logo.clearbit.com/${job.employer_name?.toLowerCase().replace(/\\s+/g, '')}.com`,\r\n      location: job.job_city ? `${job.job_city}, ${job.job_country}` : 'Remote',\r\n      type: job.job_employment_type || 'Full-time',\r\n      salary: job.job_max_salary ? Math.round(job.job_max_salary / 1000) : null,\r\n      team: job.job_department || 'General',\r\n      postedDate: formatDate(job.job_posted_at_datetime_utc),\r\n      views: Math.floor(Math.random() * 500) + 50,\r\n      applicants: Math.floor(Math.random() * 50) + 5,\r\n      description: job.job_description || 'No description available',\r\n      skills: extractSkills(job.job_description || ''),\r\n      source: 'JSearch'\r\n    })) || [];\r\n  } catch (error) {\r\n    console.error('Error fetching JSearch jobs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// 3. RemoteOK API (免费，但有限制)\r\nexport const fetchRemoteOKJobs = async (searchTerm = '') => {\r\n  try {\r\n    const url = 'https://remoteok.io/api';\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    \r\n    // RemoteOK返回的第一个元素是统计信息，需要跳过\r\n    const jobs = data.slice(1);\r\n    \r\n    let filteredJobs = jobs;\r\n    if (searchTerm) {\r\n      filteredJobs = jobs.filter(job => \r\n        job.position?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        job.company?.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    return filteredJobs.slice(0, 20).map(job => ({\r\n      id: job.id,\r\n      title: job.position,\r\n      company: job.company,\r\n      companyLogo: job.company_logo || `https://logo.clearbit.com/${job.company?.toLowerCase().replace(/\\s+/g, '')}.com`,\r\n      location: 'Remote',\r\n      type: 'Full-time',\r\n      salary: job.salary_max ? Math.round(job.salary_max / 1000) : null,\r\n      team: job.tags?.[0] || 'General',\r\n      postedDate: formatDate(job.date),\r\n      views: Math.floor(Math.random() * 500) + 50,\r\n      applicants: Math.floor(Math.random() * 50) + 5,\r\n      description: job.description || 'No description available',\r\n      skills: job.tags || [],\r\n      source: 'RemoteOK'\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching RemoteOK jobs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// 辅助函数\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return 'Recently';\r\n  \r\n  const date = new Date(dateString);\r\n  const now = new Date();\r\n  const diffTime = Math.abs(now - date);\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  \r\n  if (diffDays === 1) return 'Today';\r\n  if (diffDays <= 7) return `${diffDays} days ago`;\r\n  if (diffDays <= 30) return `${Math.ceil(diffDays / 7)} weeks ago`;\r\n  return `${Math.ceil(diffDays / 30)} months ago`;\r\n};\r\n\r\nconst extractSkills = (description) => {\r\n  const commonSkills = [\r\n    'JavaScript', 'Python', 'React', 'Node.js', 'TypeScript', 'Java', 'C++', 'PHP',\r\n    'Ruby', 'Go', 'Rust', 'Swift', 'Kotlin', 'HTML', 'CSS', 'SQL', 'MongoDB',\r\n    'PostgreSQL', 'MySQL', 'Redis', 'Docker', 'Kubernetes', 'AWS', 'Azure', 'GCP',\r\n    'Git', 'Linux', 'Figma', 'Sketch', 'Adobe', 'Photoshop', 'Illustrator'\r\n  ];\r\n  \r\n  const foundSkills = commonSkills.filter(skill => \r\n    description.toLowerCase().includes(skill.toLowerCase())\r\n  );\r\n  \r\n  return foundSkills.slice(0, 5); // 限制为5个技能\r\n};\r\n\r\n// 综合获取真实工作数据\r\nexport const fetchRealRemoteJobs = async (searchTerm = '', filters = {}) => {\r\n  try {\r\n    // 并行调用多个API\r\n    const [remoteOKJobs, adzunaJobs, jsearchJobs] = await Promise.allSettled([\r\n      fetchRemoteOKJobs(searchTerm),\r\n      ADZUNA_APP_ID && ADZUNA_APP_KEY ? fetchAdzunaJobs(searchTerm) : Promise.resolve([]),\r\n      JSEARCH_API_KEY ? fetchJSearchJobs(searchTerm) : Promise.resolve([])\r\n    ]);\r\n    \r\n    const allJobs = [\r\n      ...(remoteOKJobs.status === 'fulfilled' ? remoteOKJobs.value : []),\r\n      ...(adzunaJobs.status === 'fulfilled' ? adzunaJobs.value : []),\r\n      ...(jsearchJobs.status === 'fulfilled' ? jsearchJobs.value : [])\r\n    ];\r\n    \r\n    // 去重和排序\r\n    const uniqueJobs = removeDuplicates(allJobs);\r\n    const sortedJobs = uniqueJobs.sort((a, b) => {\r\n      // 优先显示今天发布的工作\r\n      if (a.postedDate === 'Today' && b.postedDate !== 'Today') return -1;\r\n      if (b.postedDate === 'Today' && a.postedDate !== 'Today') return 1;\r\n      return 0;\r\n    });\r\n    \r\n    return {\r\n      jobs: sortedJobs,\r\n      total: sortedJobs.length,\r\n      sources: ['RemoteOK', 'Adzuna', 'JSearch'].filter(source => {\r\n        return allJobs.some(job => job.source === source);\r\n      })\r\n    };\r\n  } catch (error) {\r\n    console.error('Error fetching real remote jobs:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst removeDuplicates = (jobs) => {\r\n  const seen = new Set();\r\n  return jobs.filter(job => {\r\n    const key = `${job.title}-${job.company}`.toLowerCase().replace(/\\s+/g, '');\r\n    if (seen.has(key)) return false;\r\n    seen.add(key);\r\n    return true;\r\n  });\r\n};\r\n\r\nexport default {\r\n  fetchRealRemoteJobs,\r\n  fetchRemoteOKJobs,\r\n  fetchAdzunaJobs,\r\n  fetchJSearchJobs\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}