{"ast":null,"code":"// LinkedIn API适配器\n// 处理LinkedIn Jobs API的请求和响应\nimport ApiAdapter from'./ApiAdapter';import{buildQueryString}from'./httpUtils';import logoService from'../logoService';import{formatRelativeDate,extractSkills,extractTeam,estimateSalary,generateRandomStats,extractQualifications}from'./responseTransformer';class LinkedInApiAdapter extends ApiAdapter{constructor(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};// LinkedIn API基础URL\nsuper('https://api.linkedin.com/v2',options);this.clientId=options.clientId||'';this.clientSecret=options.clientSecret||'';this.redirectUri=options.redirectUri||window.location.origin;this.accessToken=options.accessToken||'';this.tokenExpiry=options.tokenExpiry||0;}/**\r\n   * 获取OAuth授权URL\r\n   * @returns {string} - 授权URL\r\n   */getAuthorizationUrl(){const params={response_type:'code',client_id:this.clientId,redirect_uri:this.redirectUri,scope:'r_liteprofile r_emailaddress w_member_social',state:Math.random().toString(36).substring(2)};return`https://www.linkedin.com/oauth/v2/authorization${buildQueryString(params)}`;}/**\r\n   * 使用授权码获取访问令牌\r\n   * @param {string} code - 授权码\r\n   * @returns {Promise<Object>} - 包含访问令牌的对象\r\n   */async getAccessToken(code){const params={grant_type:'authorization_code',code,client_id:this.clientId,client_secret:this.clientSecret,redirect_uri:this.redirectUri};try{const response=await this.request('/oauth/v2/accessToken',{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:new URLSearchParams(params)});this.accessToken=response.access_token;this.tokenExpiry=Date.now()+response.expires_in*1000;return{accessToken:this.accessToken,expiresIn:response.expires_in,expiryDate:new Date(this.tokenExpiry)};}catch(error){throw this.handleError(error,'LinkedIn OAuth');}}/**\r\n   * 检查访问令牌是否有效\r\n   * @returns {boolean} - 令牌是否有效\r\n   */isTokenValid(){return this.accessToken&&this.tokenExpiry>Date.now();}/**\r\n   * 确保有有效的访问令牌\r\n   * @returns {Promise<void>}\r\n   */async ensureValidToken(){if(!this.isTokenValid()){throw new Error('LinkedIn access token is invalid or expired. User authentication required.');}}/**\r\n   * 搜索工作\r\n   * @param {string} searchTerm - 搜索关键词\r\n   * @param {Object} filters - 筛选条件\r\n   * @param {number} page - 页码\r\n   * @returns {Promise<Object>} - 工作搜索结果\r\n   */async searchJobs(){let searchTerm=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let page=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;try{// 检查是否有有效的访问令牌\nif(!this.isTokenValid()&&this.clientId&&this.clientSecret){try{// 尝试使用客户端凭据流程获取访问令牌\nawait this.getClientCredentialsToken();}catch(tokenError){console.error('Failed to get LinkedIn access token:',tokenError);// 继续使用模拟数据\n}}console.log('Searching LinkedIn jobs with term:',searchTerm,'filters:',filters,'page:',page);// 如果有有效的访问令牌，尝试使用真实API\nif(this.isTokenValid()){try{// 构建查询参数\nconst queryParams={keywords:searchTerm,location:filters.location||'worldwide',start:page*10,// 每页10个结果\ncount:10};// 添加筛选条件\nif(filters.jobType){queryParams.f_JT=this.mapJobType(filters.jobType);}// 发送API请求\nconst response=await this.request(`/jobs/search${buildQueryString(queryParams)}`,{headers:{'Authorization':`Bearer ${this.accessToken}`}});// 转换响应数据\nconst jobs=await Promise.all(response.elements.map(job=>this.transformJob(job)));return{jobs,total:response.paging.total,page,pageSize:10};}catch(apiError){console.error('LinkedIn API request failed:',apiError);// 如果API请求失败，回退到模拟数据\n}}// 如果没有有效的访问令牌或API请求失败，使用模拟数据\nconsole.log('Using mock data for LinkedIn jobs');return this.getMockLinkedInJobs(searchTerm,filters,page);}catch(error){const errorInfo=this.handleError(error,'LinkedIn Jobs Search');// 返回空结果\nreturn{jobs:[],total:0,page:page,pageSize:10};}}/**\r\n   * 使用客户端凭据流程获取访问令牌\r\n   * @returns {Promise<Object>} - 包含访问令牌的对象\r\n   */async getClientCredentialsToken(){const params={grant_type:'client_credentials',client_id:this.clientId,client_secret:this.clientSecret,scope:'r_liteprofile r_emailaddress w_member_social'};try{const response=await fetch('https://www.linkedin.com/oauth/v2/accessToken',{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:new URLSearchParams(params)});if(!response.ok){throw new Error(`Failed to get access token: ${response.status}`);}const data=await response.json();this.accessToken=data.access_token;this.tokenExpiry=Date.now()+data.expires_in*1000;return{accessToken:this.accessToken,expiresIn:data.expires_in,expiryDate:new Date(this.tokenExpiry)};}catch(error){throw this.handleError(error,'LinkedIn OAuth Client Credentials');}}/**\r\n   * 将工作类型映射到LinkedIn API参数\r\n   * @param {string} jobType - 工作类型\r\n   * @returns {string} - LinkedIn API参数\r\n   */mapJobType(jobType){const typeMap={'Full-time':'F','Part-time':'P','Contract':'C','Temporary':'T','Volunteer':'V','Internship':'I'};return typeMap[jobType]||'F';}/**\r\n   * 获取工作详情\r\n   * @param {string} jobId - 工作ID\r\n   * @returns {Promise<Object>} - 工作详情\r\n   */async getJobDetails(jobId){try{// 检查是否有有效的访问令牌\nif(!this.isTokenValid()&&this.clientId&&this.clientSecret){try{// 尝试使用客户端凭据流程获取访问令牌\nawait this.getClientCredentialsToken();}catch(tokenError){console.error('Failed to get LinkedIn access token:',tokenError);// 继续使用模拟数据\n}}console.log('Fetching LinkedIn job details for ID:',jobId);// 如果有有效的访问令牌，尝试使用真实API\nif(this.isTokenValid()){try{// 发送API请求\nconst response=await this.request(`/jobs/${jobId}`,{headers:{'Authorization':`Bearer ${this.accessToken}`}});// 转换响应数据\nreturn this.transformJobDetail(response);}catch(apiError){console.error('LinkedIn API request failed:',apiError);// 如果API请求失败，回退到模拟数据\n}}// 如果没有有效的访问令牌或API请求失败，使用模拟数据\nconsole.log('Using mock data for LinkedIn job details');return this.getMockJobDetails(jobId);}catch(error){throw this.handleError(error,'LinkedIn Job Details');}}/**\r\n   * 将LinkedIn工作数据转换为统一格式\r\n   * @param {Object} linkedInJob - LinkedIn工作数据\r\n   * @returns {Promise<Object>} - 统一格式的工作数据\r\n   */async transformJob(linkedInJob){return{id:linkedInJob.id,title:linkedInJob.title,company:linkedInJob.company.name,companyLogo:await logoService.getCompanyLogo(linkedInJob.company.name,linkedInJob.company.logoUrl),location:linkedInJob.location||'Remote',type:linkedInJob.jobType||'Full-time',salary:estimateSalary(linkedInJob.title),team:extractTeam(linkedInJob.title),postedDate:formatRelativeDate(linkedInJob.listedAt),views:linkedInJob.views||generateRandomStats().views,applicants:linkedInJob.applicants||generateRandomStats().applicants,description:linkedInJob.description||'No description available',skills:extractSkills(linkedInJob.description||linkedInJob.title),source:'LinkedIn',sourceUrl:linkedInJob.url||`https://www.linkedin.com/jobs/view/${linkedInJob.id}`,sourceId:linkedInJob.id};}/**\r\n   * 将LinkedIn工作详情转换为统一格式\r\n   * @param {Object} linkedInJobDetail - LinkedIn工作详情\r\n   * @returns {Object} - 统一格式的工作详情\r\n   */transformJobDetail(linkedInJobDetail){const qualifications=extractQualifications(linkedInJobDetail.description||'');return{...this.transformJob(linkedInJobDetail),minimumQualifications:qualifications.minimumQualifications,preferredQualifications:qualifications.preferredQualifications,aboutJob:linkedInJobDetail.description||'No description available',companyInfo:linkedInJobDetail.companyDetails||'No company information available',benefits:linkedInJobDetail.benefits||[],applicationUrl:linkedInJobDetail.applyUrl||`https://www.linkedin.com/jobs/view/${linkedInJobDetail.id}`};}/**\r\n   * 获取模拟的LinkedIn工作数据\r\n   * @param {string} searchTerm - 搜索关键词\r\n   * @param {Object} filters - 筛选条件\r\n   * @param {number} page - 页码\r\n   * @returns {Object} - 工作搜索结果\r\n   */async getMockLinkedInJobs(){let searchTerm=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let page=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;const pageSize=10;const allJobs=[{id:'li-1',title:'Senior Frontend Developer',company:{name:'Microsoft',logoUrl:'https://logo.clearbit.com/microsoft.com'},location:'Remote - US',jobType:'Full-time',listedAt:'2023-07-20T10:30:00Z',views:412,applicants:45,description:'Join our team to build innovative web applications using React and TypeScript. You will work on challenging projects and collaborate with talented engineers.',url:'https://www.linkedin.com/jobs/view/li-1'},{id:'li-2',title:'Product Manager - Remote',company:{name:'Amazon',logoUrl:'https://logo.clearbit.com/amazon.com'},location:'Remote - Global',jobType:'Full-time',listedAt:'2023-07-18T14:15:00Z',views:378,applicants:32,description:'Lead product development for our innovative platform. Define product strategy and work closely with engineering teams to deliver exceptional user experiences.',url:'https://www.linkedin.com/jobs/view/li-2'},{id:'li-3',title:'Senior Frontend Engineer',company:{name:'Google',logoUrl:'https://logo.clearbit.com/google.com'},location:'Remote - Europe',jobType:'Full-time',listedAt:'2023-07-19T09:45:00Z',views:521,applicants:37,description:'Join our team to build and improve the Google web applications. You will work with cutting-edge technologies and contribute to products used by millions.',url:'https://www.linkedin.com/jobs/view/li-3'},{id:'li-4',title:'Data Scientist',company:{name:'Netflix',logoUrl:'https://logo.clearbit.com/netflix.com'},location:'Remote - US',jobType:'Full-time',listedAt:'2023-07-16T11:20:00Z',views:456,applicants:48,description:'Apply machine learning and statistical analysis to improve our recommendation systems. Work with large datasets and develop algorithms that enhance user experience.',url:'https://www.linkedin.com/jobs/view/li-4'},{id:'li-5',title:'UX Researcher',company:{name:'Slack',logoUrl:'https://logo.clearbit.com/slack.com'},location:'Remote - Americas',jobType:'Full-time',listedAt:'2023-07-14T13:10:00Z',views:298,applicants:23,description:'Conduct user research to inform product decisions and improve user experience. Design and execute user studies, analyze data, and present findings to stakeholders.',url:'https://www.linkedin.com/jobs/view/li-5'},{id:'li-6',title:'DevOps Engineer',company:{name:'Atlassian',logoUrl:'https://logo.clearbit.com/atlassian.com'},location:'Remote - Global',jobType:'Full-time',listedAt:'2023-07-17T08:30:00Z',views:342,applicants:29,description:'Build and maintain our cloud infrastructure using Kubernetes, Docker, and AWS. Implement CI/CD pipelines and ensure high availability of our services.',url:'https://www.linkedin.com/jobs/view/li-6'},{id:'li-7',title:'Backend Developer (Python)',company:{name:'Dropbox',logoUrl:'https://logo.clearbit.com/dropbox.com'},location:'Remote - US',jobType:'Full-time',listedAt:'2023-07-15T15:45:00Z',views:387,applicants:41,description:'Develop and maintain our backend services using Python and Django. Design and implement APIs, optimize database queries, and ensure scalability.',url:'https://www.linkedin.com/jobs/view/li-7'},{id:'li-8',title:'Mobile Developer (React Native)',company:{name:'Spotify',logoUrl:'https://logo.clearbit.com/spotify.com'},location:'Remote - Europe',jobType:'Full-time',listedAt:'2023-07-18T10:20:00Z',views:312,applicants:27,description:'Build and improve our mobile applications using React Native. Implement new features, fix bugs, and ensure a smooth user experience across different devices.',url:'https://www.linkedin.com/jobs/view/li-8'},{id:'li-9',title:'Technical Writer',company:{name:'GitHub',logoUrl:'https://logo.clearbit.com/github.com'},location:'Remote - Global',jobType:'Full-time',listedAt:'2023-07-13T09:15:00Z',views:245,applicants:19,description:'Create and maintain technical documentation for our products. Work closely with engineering teams to ensure accurate and comprehensive documentation.',url:'https://www.linkedin.com/jobs/view/li-9'},{id:'li-10',title:'Security Engineer',company:{name:'Cloudflare',logoUrl:'https://logo.clearbit.com/cloudflare.com'},location:'Remote - US',jobType:'Full-time',listedAt:'2023-07-16T14:30:00Z',views:289,applicants:31,description:'Identify and address security vulnerabilities in our systems. Implement security best practices and ensure compliance with industry standards.',url:'https://www.linkedin.com/jobs/view/li-10'}];// 如果有搜索词，过滤结果\nlet filteredJobs=allJobs;if(searchTerm){filteredJobs=allJobs.filter(job=>job.title.toLowerCase().includes(searchTerm.toLowerCase())||job.company.name.toLowerCase().includes(searchTerm.toLowerCase())||job.description.toLowerCase().includes(searchTerm.toLowerCase()));}// 应用位置筛选\nif(filters.location){filteredJobs=filteredJobs.filter(job=>job.location.toLowerCase().includes(filters.location.toLowerCase()));}// 应用工作类型筛选\nif(filters.jobType){filteredJobs=filteredJobs.filter(job=>job.jobType.toLowerCase()===filters.jobType.toLowerCase());}// 计算分页\nconst startIndex=page*pageSize;const endIndex=startIndex+pageSize;const paginatedJobs=filteredJobs.slice(startIndex,endIndex);// 转换为统一格式\nconst transformedJobs=await Promise.all(paginatedJobs.map(job=>this.transformJob(job)));return{jobs:transformedJobs,total:filteredJobs.length,page:page,pageSize:pageSize};}/**\r\n   * 获取模拟的工作详情\r\n   * @param {string} jobId - 工作ID\r\n   * @returns {Object} - 工作详情\r\n   */getMockJobDetails(jobId){// 查找基本工作信息\nconst allJobs=this.getMockLinkedInJobs('',{},0).jobs;const job=allJobs.find(job=>job.id===jobId);if(!job){throw new Error(`Job with ID ${jobId} not found`);}// 添加详细信息\nconst jobDetail={...job,minimumQualifications:['5+ years of experience in frontend development','Strong proficiency with JavaScript, HTML, and CSS','Experience with React or similar frontend frameworks','Bachelor\\'s degree in Computer Science or related field','Excellent problem-solving skills'],preferredQualifications:['Experience with TypeScript and state management libraries','Knowledge of web accessibility standards','Experience with CI/CD pipelines','Contributions to open-source projects','Experience with agile development methodologies'],aboutJob:`We are looking for a talented ${job.title} to join our team. You will be responsible for developing and maintaining web applications, collaborating with cross-functional teams, and ensuring high-quality code.\n\nKey Responsibilities:\n- Develop and maintain frontend applications using modern JavaScript frameworks\n- Collaborate with designers to implement user interfaces\n- Write clean, maintainable, and efficient code\n- Participate in code reviews and provide constructive feedback\n- Troubleshoot and fix bugs in existing applications\n\nThis is a remote position with flexible working hours. We offer competitive salary, health benefits, and opportunities for professional growth.`,companyInfo:`${job.company} is a leading technology company that provides innovative solutions to businesses worldwide. We are committed to creating a diverse and inclusive workplace where all employees can thrive.\n\nOur mission is to build products that make people's lives easier and more productive. We value collaboration, innovation, and continuous learning.`,benefits:['Competitive salary and equity','Health, dental, and vision insurance','Flexible working hours','Remote work options','Professional development budget','Generous paid time off'],applicationUrl:job.sourceUrl};return jobDetail;}}export default LinkedInApiAdapter;","map":{"version":3,"names":["ApiAdapter","buildQueryString","logoService","formatRelativeDate","extractSkills","extractTeam","estimateSalary","generateRandomStats","extractQualifications","LinkedInApiAdapter","constructor","options","arguments","length","undefined","clientId","clientSecret","redirectUri","window","location","origin","accessToken","tokenExpiry","getAuthorizationUrl","params","response_type","client_id","redirect_uri","scope","state","Math","random","toString","substring","getAccessToken","code","grant_type","client_secret","response","request","method","headers","body","URLSearchParams","access_token","Date","now","expires_in","expiresIn","expiryDate","error","handleError","isTokenValid","ensureValidToken","Error","searchJobs","searchTerm","filters","page","getClientCredentialsToken","tokenError","console","log","queryParams","keywords","start","count","jobType","f_JT","mapJobType","jobs","Promise","all","elements","map","job","transformJob","total","paging","pageSize","apiError","getMockLinkedInJobs","errorInfo","fetch","ok","status","data","json","typeMap","getJobDetails","jobId","transformJobDetail","getMockJobDetails","linkedInJob","id","title","company","name","companyLogo","getCompanyLogo","logoUrl","type","salary","team","postedDate","listedAt","views","applicants","description","skills","source","sourceUrl","url","sourceId","linkedInJobDetail","qualifications","minimumQualifications","preferredQualifications","aboutJob","companyInfo","companyDetails","benefits","applicationUrl","applyUrl","allJobs","filteredJobs","filter","toLowerCase","includes","startIndex","endIndex","paginatedJobs","slice","transformedJobs","find","jobDetail"],"sources":["D:/Kiro/remote-job-website/src/services/api/LinkedInApiAdapter.js"],"sourcesContent":["// LinkedIn API适配器\r\n// 处理LinkedIn Jobs API的请求和响应\r\n\r\nimport ApiAdapter from './ApiAdapter';\r\nimport { buildQueryString } from './httpUtils';\r\nimport logoService from '../logoService';\r\nimport { \r\n  formatRelativeDate, \r\n  extractSkills, \r\n  extractTeam, \r\n  estimateSalary, \r\n  generateRandomStats,\r\n  extractQualifications\r\n} from './responseTransformer';\r\n\r\nclass LinkedInApiAdapter extends ApiAdapter {\r\n  constructor(options = {}) {\r\n    // LinkedIn API基础URL\r\n    super('https://api.linkedin.com/v2', options);\r\n    \r\n    this.clientId = options.clientId || '';\r\n    this.clientSecret = options.clientSecret || '';\r\n    this.redirectUri = options.redirectUri || window.location.origin;\r\n    this.accessToken = options.accessToken || '';\r\n    this.tokenExpiry = options.tokenExpiry || 0;\r\n  }\r\n\r\n  /**\r\n   * 获取OAuth授权URL\r\n   * @returns {string} - 授权URL\r\n   */\r\n  getAuthorizationUrl() {\r\n    const params = {\r\n      response_type: 'code',\r\n      client_id: this.clientId,\r\n      redirect_uri: this.redirectUri,\r\n      scope: 'r_liteprofile r_emailaddress w_member_social',\r\n      state: Math.random().toString(36).substring(2)\r\n    };\r\n    \r\n    return `https://www.linkedin.com/oauth/v2/authorization${buildQueryString(params)}`;\r\n  }\r\n\r\n  /**\r\n   * 使用授权码获取访问令牌\r\n   * @param {string} code - 授权码\r\n   * @returns {Promise<Object>} - 包含访问令牌的对象\r\n   */\r\n  async getAccessToken(code) {\r\n    const params = {\r\n      grant_type: 'authorization_code',\r\n      code,\r\n      client_id: this.clientId,\r\n      client_secret: this.clientSecret,\r\n      redirect_uri: this.redirectUri\r\n    };\r\n    \r\n    try {\r\n      const response = await this.request('/oauth/v2/accessToken', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: new URLSearchParams(params)\r\n      });\r\n      \r\n      this.accessToken = response.access_token;\r\n      this.tokenExpiry = Date.now() + (response.expires_in * 1000);\r\n      \r\n      return {\r\n        accessToken: this.accessToken,\r\n        expiresIn: response.expires_in,\r\n        expiryDate: new Date(this.tokenExpiry)\r\n      };\r\n    } catch (error) {\r\n      throw this.handleError(error, 'LinkedIn OAuth');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检查访问令牌是否有效\r\n   * @returns {boolean} - 令牌是否有效\r\n   */\r\n  isTokenValid() {\r\n    return this.accessToken && this.tokenExpiry > Date.now();\r\n  }\r\n\r\n  /**\r\n   * 确保有有效的访问令牌\r\n   * @returns {Promise<void>}\r\n   */\r\n  async ensureValidToken() {\r\n    if (!this.isTokenValid()) {\r\n      throw new Error('LinkedIn access token is invalid or expired. User authentication required.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 搜索工作\r\n   * @param {string} searchTerm - 搜索关键词\r\n   * @param {Object} filters - 筛选条件\r\n   * @param {number} page - 页码\r\n   * @returns {Promise<Object>} - 工作搜索结果\r\n   */\r\n  async searchJobs(searchTerm = '', filters = {}, page = 0) {\r\n    try {\r\n      // 检查是否有有效的访问令牌\r\n      if (!this.isTokenValid() && this.clientId && this.clientSecret) {\r\n        try {\r\n          // 尝试使用客户端凭据流程获取访问令牌\r\n          await this.getClientCredentialsToken();\r\n        } catch (tokenError) {\r\n          console.error('Failed to get LinkedIn access token:', tokenError);\r\n          // 继续使用模拟数据\r\n        }\r\n      }\r\n      \r\n      console.log('Searching LinkedIn jobs with term:', searchTerm, 'filters:', filters, 'page:', page);\r\n      \r\n      // 如果有有效的访问令牌，尝试使用真实API\r\n      if (this.isTokenValid()) {\r\n        try {\r\n          // 构建查询参数\r\n          const queryParams = {\r\n            keywords: searchTerm,\r\n            location: filters.location || 'worldwide',\r\n            start: page * 10, // 每页10个结果\r\n            count: 10\r\n          };\r\n          \r\n          // 添加筛选条件\r\n          if (filters.jobType) {\r\n            queryParams.f_JT = this.mapJobType(filters.jobType);\r\n          }\r\n          \r\n          // 发送API请求\r\n          const response = await this.request(`/jobs/search${buildQueryString(queryParams)}`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n          });\r\n          \r\n          // 转换响应数据\r\n          const jobs = await Promise.all(response.elements.map(job => this.transformJob(job)));\r\n          \r\n          return {\r\n            jobs,\r\n            total: response.paging.total,\r\n            page,\r\n            pageSize: 10\r\n          };\r\n        } catch (apiError) {\r\n          console.error('LinkedIn API request failed:', apiError);\r\n          // 如果API请求失败，回退到模拟数据\r\n        }\r\n      }\r\n      \r\n      // 如果没有有效的访问令牌或API请求失败，使用模拟数据\r\n      console.log('Using mock data for LinkedIn jobs');\r\n      return this.getMockLinkedInJobs(searchTerm, filters, page);\r\n    } catch (error) {\r\n      const errorInfo = this.handleError(error, 'LinkedIn Jobs Search');\r\n      \r\n      // 返回空结果\r\n      return {\r\n        jobs: [],\r\n        total: 0,\r\n        page: page,\r\n        pageSize: 10\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 使用客户端凭据流程获取访问令牌\r\n   * @returns {Promise<Object>} - 包含访问令牌的对象\r\n   */\r\n  async getClientCredentialsToken() {\r\n    const params = {\r\n      grant_type: 'client_credentials',\r\n      client_id: this.clientId,\r\n      client_secret: this.clientSecret,\r\n      scope: 'r_liteprofile r_emailaddress w_member_social'\r\n    };\r\n    \r\n    try {\r\n      const response = await fetch('https://www.linkedin.com/oauth/v2/accessToken', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: new URLSearchParams(params)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to get access token: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      this.accessToken = data.access_token;\r\n      this.tokenExpiry = Date.now() + (data.expires_in * 1000);\r\n      \r\n      return {\r\n        accessToken: this.accessToken,\r\n        expiresIn: data.expires_in,\r\n        expiryDate: new Date(this.tokenExpiry)\r\n      };\r\n    } catch (error) {\r\n      throw this.handleError(error, 'LinkedIn OAuth Client Credentials');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 将工作类型映射到LinkedIn API参数\r\n   * @param {string} jobType - 工作类型\r\n   * @returns {string} - LinkedIn API参数\r\n   */\r\n  mapJobType(jobType) {\r\n    const typeMap = {\r\n      'Full-time': 'F',\r\n      'Part-time': 'P',\r\n      'Contract': 'C',\r\n      'Temporary': 'T',\r\n      'Volunteer': 'V',\r\n      'Internship': 'I'\r\n    };\r\n    \r\n    return typeMap[jobType] || 'F';\r\n  }\r\n\r\n  /**\r\n   * 获取工作详情\r\n   * @param {string} jobId - 工作ID\r\n   * @returns {Promise<Object>} - 工作详情\r\n   */\r\n  async getJobDetails(jobId) {\r\n    try {\r\n      // 检查是否有有效的访问令牌\r\n      if (!this.isTokenValid() && this.clientId && this.clientSecret) {\r\n        try {\r\n          // 尝试使用客户端凭据流程获取访问令牌\r\n          await this.getClientCredentialsToken();\r\n        } catch (tokenError) {\r\n          console.error('Failed to get LinkedIn access token:', tokenError);\r\n          // 继续使用模拟数据\r\n        }\r\n      }\r\n      \r\n      console.log('Fetching LinkedIn job details for ID:', jobId);\r\n      \r\n      // 如果有有效的访问令牌，尝试使用真实API\r\n      if (this.isTokenValid()) {\r\n        try {\r\n          // 发送API请求\r\n          const response = await this.request(`/jobs/${jobId}`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n          });\r\n          \r\n          // 转换响应数据\r\n          return this.transformJobDetail(response);\r\n        } catch (apiError) {\r\n          console.error('LinkedIn API request failed:', apiError);\r\n          // 如果API请求失败，回退到模拟数据\r\n        }\r\n      }\r\n      \r\n      // 如果没有有效的访问令牌或API请求失败，使用模拟数据\r\n      console.log('Using mock data for LinkedIn job details');\r\n      return this.getMockJobDetails(jobId);\r\n    } catch (error) {\r\n      throw this.handleError(error, 'LinkedIn Job Details');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 将LinkedIn工作数据转换为统一格式\r\n   * @param {Object} linkedInJob - LinkedIn工作数据\r\n   * @returns {Promise<Object>} - 统一格式的工作数据\r\n   */\r\n  async transformJob(linkedInJob) {\r\n    return {\r\n      id: linkedInJob.id,\r\n      title: linkedInJob.title,\r\n      company: linkedInJob.company.name,\r\n      companyLogo: await logoService.getCompanyLogo(linkedInJob.company.name, linkedInJob.company.logoUrl),\r\n      location: linkedInJob.location || 'Remote',\r\n      type: linkedInJob.jobType || 'Full-time',\r\n      salary: estimateSalary(linkedInJob.title),\r\n      team: extractTeam(linkedInJob.title),\r\n      postedDate: formatRelativeDate(linkedInJob.listedAt),\r\n      views: linkedInJob.views || generateRandomStats().views,\r\n      applicants: linkedInJob.applicants || generateRandomStats().applicants,\r\n      description: linkedInJob.description || 'No description available',\r\n      skills: extractSkills(linkedInJob.description || linkedInJob.title),\r\n      source: 'LinkedIn',\r\n      sourceUrl: linkedInJob.url || `https://www.linkedin.com/jobs/view/${linkedInJob.id}`,\r\n      sourceId: linkedInJob.id\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 将LinkedIn工作详情转换为统一格式\r\n   * @param {Object} linkedInJobDetail - LinkedIn工作详情\r\n   * @returns {Object} - 统一格式的工作详情\r\n   */\r\n  transformJobDetail(linkedInJobDetail) {\r\n    const qualifications = extractQualifications(linkedInJobDetail.description || '');\r\n    \r\n    return {\r\n      ...this.transformJob(linkedInJobDetail),\r\n      minimumQualifications: qualifications.minimumQualifications,\r\n      preferredQualifications: qualifications.preferredQualifications,\r\n      aboutJob: linkedInJobDetail.description || 'No description available',\r\n      companyInfo: linkedInJobDetail.companyDetails || 'No company information available',\r\n      benefits: linkedInJobDetail.benefits || [],\r\n      applicationUrl: linkedInJobDetail.applyUrl || `https://www.linkedin.com/jobs/view/${linkedInJobDetail.id}`\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取模拟的LinkedIn工作数据\r\n   * @param {string} searchTerm - 搜索关键词\r\n   * @param {Object} filters - 筛选条件\r\n   * @param {number} page - 页码\r\n   * @returns {Object} - 工作搜索结果\r\n   */\r\n  async getMockLinkedInJobs(searchTerm = '', filters = {}, page = 0) {\r\n    const pageSize = 10;\r\n    \r\n    const allJobs = [\r\n      {\r\n        id: 'li-1',\r\n        title: 'Senior Frontend Developer',\r\n        company: {\r\n          name: 'Microsoft',\r\n          logoUrl: 'https://logo.clearbit.com/microsoft.com'\r\n        },\r\n        location: 'Remote - US',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-20T10:30:00Z',\r\n        views: 412,\r\n        applicants: 45,\r\n        description: 'Join our team to build innovative web applications using React and TypeScript. You will work on challenging projects and collaborate with talented engineers.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-1'\r\n      },\r\n      {\r\n        id: 'li-2',\r\n        title: 'Product Manager - Remote',\r\n        company: {\r\n          name: 'Amazon',\r\n          logoUrl: 'https://logo.clearbit.com/amazon.com'\r\n        },\r\n        location: 'Remote - Global',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-18T14:15:00Z',\r\n        views: 378,\r\n        applicants: 32,\r\n        description: 'Lead product development for our innovative platform. Define product strategy and work closely with engineering teams to deliver exceptional user experiences.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-2'\r\n      },\r\n      {\r\n        id: 'li-3',\r\n        title: 'Senior Frontend Engineer',\r\n        company: {\r\n          name: 'Google',\r\n          logoUrl: 'https://logo.clearbit.com/google.com'\r\n        },\r\n        location: 'Remote - Europe',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-19T09:45:00Z',\r\n        views: 521,\r\n        applicants: 37,\r\n        description: 'Join our team to build and improve the Google web applications. You will work with cutting-edge technologies and contribute to products used by millions.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-3'\r\n      },\r\n      {\r\n        id: 'li-4',\r\n        title: 'Data Scientist',\r\n        company: {\r\n          name: 'Netflix',\r\n          logoUrl: 'https://logo.clearbit.com/netflix.com'\r\n        },\r\n        location: 'Remote - US',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-16T11:20:00Z',\r\n        views: 456,\r\n        applicants: 48,\r\n        description: 'Apply machine learning and statistical analysis to improve our recommendation systems. Work with large datasets and develop algorithms that enhance user experience.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-4'\r\n      },\r\n      {\r\n        id: 'li-5',\r\n        title: 'UX Researcher',\r\n        company: {\r\n          name: 'Slack',\r\n          logoUrl: 'https://logo.clearbit.com/slack.com'\r\n        },\r\n        location: 'Remote - Americas',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-14T13:10:00Z',\r\n        views: 298,\r\n        applicants: 23,\r\n        description: 'Conduct user research to inform product decisions and improve user experience. Design and execute user studies, analyze data, and present findings to stakeholders.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-5'\r\n      },\r\n      {\r\n        id: 'li-6',\r\n        title: 'DevOps Engineer',\r\n        company: {\r\n          name: 'Atlassian',\r\n          logoUrl: 'https://logo.clearbit.com/atlassian.com'\r\n        },\r\n        location: 'Remote - Global',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-17T08:30:00Z',\r\n        views: 342,\r\n        applicants: 29,\r\n        description: 'Build and maintain our cloud infrastructure using Kubernetes, Docker, and AWS. Implement CI/CD pipelines and ensure high availability of our services.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-6'\r\n      },\r\n      {\r\n        id: 'li-7',\r\n        title: 'Backend Developer (Python)',\r\n        company: {\r\n          name: 'Dropbox',\r\n          logoUrl: 'https://logo.clearbit.com/dropbox.com'\r\n        },\r\n        location: 'Remote - US',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-15T15:45:00Z',\r\n        views: 387,\r\n        applicants: 41,\r\n        description: 'Develop and maintain our backend services using Python and Django. Design and implement APIs, optimize database queries, and ensure scalability.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-7'\r\n      },\r\n      {\r\n        id: 'li-8',\r\n        title: 'Mobile Developer (React Native)',\r\n        company: {\r\n          name: 'Spotify',\r\n          logoUrl: 'https://logo.clearbit.com/spotify.com'\r\n        },\r\n        location: 'Remote - Europe',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-18T10:20:00Z',\r\n        views: 312,\r\n        applicants: 27,\r\n        description: 'Build and improve our mobile applications using React Native. Implement new features, fix bugs, and ensure a smooth user experience across different devices.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-8'\r\n      },\r\n      {\r\n        id: 'li-9',\r\n        title: 'Technical Writer',\r\n        company: {\r\n          name: 'GitHub',\r\n          logoUrl: 'https://logo.clearbit.com/github.com'\r\n        },\r\n        location: 'Remote - Global',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-13T09:15:00Z',\r\n        views: 245,\r\n        applicants: 19,\r\n        description: 'Create and maintain technical documentation for our products. Work closely with engineering teams to ensure accurate and comprehensive documentation.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-9'\r\n      },\r\n      {\r\n        id: 'li-10',\r\n        title: 'Security Engineer',\r\n        company: {\r\n          name: 'Cloudflare',\r\n          logoUrl: 'https://logo.clearbit.com/cloudflare.com'\r\n        },\r\n        location: 'Remote - US',\r\n        jobType: 'Full-time',\r\n        listedAt: '2023-07-16T14:30:00Z',\r\n        views: 289,\r\n        applicants: 31,\r\n        description: 'Identify and address security vulnerabilities in our systems. Implement security best practices and ensure compliance with industry standards.',\r\n        url: 'https://www.linkedin.com/jobs/view/li-10'\r\n      }\r\n    ];\r\n    \r\n    // 如果有搜索词，过滤结果\r\n    let filteredJobs = allJobs;\r\n    if (searchTerm) {\r\n      filteredJobs = allJobs.filter(job => \r\n        job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        job.company.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        job.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    // 应用位置筛选\r\n    if (filters.location) {\r\n      filteredJobs = filteredJobs.filter(job => \r\n        job.location.toLowerCase().includes(filters.location.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    // 应用工作类型筛选\r\n    if (filters.jobType) {\r\n      filteredJobs = filteredJobs.filter(job => \r\n        job.jobType.toLowerCase() === filters.jobType.toLowerCase()\r\n      );\r\n    }\r\n    \r\n    // 计算分页\r\n    const startIndex = page * pageSize;\r\n    const endIndex = startIndex + pageSize;\r\n    const paginatedJobs = filteredJobs.slice(startIndex, endIndex);\r\n    \r\n    // 转换为统一格式\r\n    const transformedJobs = await Promise.all(paginatedJobs.map(job => this.transformJob(job)));\r\n    \r\n    return {\r\n      jobs: transformedJobs,\r\n      total: filteredJobs.length,\r\n      page: page,\r\n      pageSize: pageSize\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取模拟的工作详情\r\n   * @param {string} jobId - 工作ID\r\n   * @returns {Object} - 工作详情\r\n   */\r\n  getMockJobDetails(jobId) {\r\n    // 查找基本工作信息\r\n    const allJobs = this.getMockLinkedInJobs('', {}, 0).jobs;\r\n    const job = allJobs.find(job => job.id === jobId);\r\n    \r\n    if (!job) {\r\n      throw new Error(`Job with ID ${jobId} not found`);\r\n    }\r\n    \r\n    // 添加详细信息\r\n    const jobDetail = {\r\n      ...job,\r\n      minimumQualifications: [\r\n        '5+ years of experience in frontend development',\r\n        'Strong proficiency with JavaScript, HTML, and CSS',\r\n        'Experience with React or similar frontend frameworks',\r\n        'Bachelor\\'s degree in Computer Science or related field',\r\n        'Excellent problem-solving skills'\r\n      ],\r\n      preferredQualifications: [\r\n        'Experience with TypeScript and state management libraries',\r\n        'Knowledge of web accessibility standards',\r\n        'Experience with CI/CD pipelines',\r\n        'Contributions to open-source projects',\r\n        'Experience with agile development methodologies'\r\n      ],\r\n      aboutJob: `We are looking for a talented ${job.title} to join our team. You will be responsible for developing and maintaining web applications, collaborating with cross-functional teams, and ensuring high-quality code.\r\n\r\nKey Responsibilities:\r\n- Develop and maintain frontend applications using modern JavaScript frameworks\r\n- Collaborate with designers to implement user interfaces\r\n- Write clean, maintainable, and efficient code\r\n- Participate in code reviews and provide constructive feedback\r\n- Troubleshoot and fix bugs in existing applications\r\n\r\nThis is a remote position with flexible working hours. We offer competitive salary, health benefits, and opportunities for professional growth.`,\r\n      companyInfo: `${job.company} is a leading technology company that provides innovative solutions to businesses worldwide. We are committed to creating a diverse and inclusive workplace where all employees can thrive.\r\n\r\nOur mission is to build products that make people's lives easier and more productive. We value collaboration, innovation, and continuous learning.`,\r\n      benefits: [\r\n        'Competitive salary and equity',\r\n        'Health, dental, and vision insurance',\r\n        'Flexible working hours',\r\n        'Remote work options',\r\n        'Professional development budget',\r\n        'Generous paid time off'\r\n      ],\r\n      applicationUrl: job.sourceUrl\r\n    };\r\n    \r\n    return jobDetail;\r\n  }\r\n}\r\n\r\nexport default LinkedInApiAdapter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}