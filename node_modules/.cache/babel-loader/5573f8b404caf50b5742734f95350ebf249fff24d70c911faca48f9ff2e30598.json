{"ast":null,"code":"// 使用真实的Job API服务\n// 这里集成一些公开的工作API\nimport logoService from'./logoService';// RemoteOK API (免费，无需API密钥)\nexport const fetchRemoteOKJobs=async()=>{try{console.log('🔄 尝试获取RemoteOK工作数据...');// 尝试多个CORS代理，提高成功率\nconst corsProxies=['https://api.allorigins.win/raw?url=','https://cors-anywhere.herokuapp.com/','https://api.codetabs.com/v1/proxy?quest=','https://thingproxy.freeboard.io/fetch/'];const remoteOkUrl='https://remoteok.io/api';let data=null;let lastError=null;// 尝试不同的代理\nfor(const corsProxy of corsProxies){try{console.log(`🔗 尝试使用代理: ${corsProxy}`);const controller=new AbortController();const timeoutId=setTimeout(()=>controller.abort(),8000);// 8秒超时\nconst response=await fetch(`${corsProxy}${encodeURIComponent(remoteOkUrl)}`,{headers:{'Origin':window.location.origin,'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'},signal:controller.signal});clearTimeout(timeoutId);if(!response.ok){throw new Error(`HTTP ${response.status}: ${response.statusText}`);}data=await response.json();console.log('✅ 成功获取RemoteOK数据，工作数量:',data.length);break;// 成功获取数据，跳出循环\n}catch(error){console.warn(`❌ 代理 ${corsProxy} 失败:`,error.message);lastError=error;continue;// 尝试下一个代理\n}}// 如果所有代理都失败，抛出最后一个错误\nif(!data){throw lastError||new Error('所有CORS代理都失败了');}// RemoteOK返回的第一个元素是统计信息，需要跳过\nconst jobs=data.slice(1);return Promise.all(jobs.map(async job=>({id:job.id,title:job.position,company:job.company,companyLogo:await logoService.getCompanyLogo(job.company,job.company_logo),location:job.location||'Remote',type:job.job_type||'Full-time',salary:estimateSalary(job.position),team:extractTeam(job.position),postedDate:formatDate(job.date),views:Math.floor(Math.random()*500)+50,applicants:Math.floor(Math.random()*50)+5,description:job.description||'No description available',skills:extractSkills(job.tags||[]),source:'RemoteOK',sourceUrl:job.url||`https://remoteok.io/l/${job.id}`,sourceId:job.id})));}catch(error){console.error('Error fetching RemoteOK jobs:',error);// 如果API调用失败，返回空数组\nreturn[];}};// GitHub Jobs API (通过公共API代理)\nexport const fetchGitHubJobs=async()=>{try{const response=await fetch('https://jobs.github.com/positions.json');if(!response.ok){throw new Error(`Failed to fetch GitHub jobs: ${response.status}`);}const data=await response.json();return data.map(job=>({id:job.id,title:job.title,company:job.company,companyLogo:job.company_logo,location:job.location||'Remote',type:job.type||'Full-time',salary:estimateSalary(job.title),team:extractTeam(job.title),postedDate:formatDate(job.created_at),views:Math.floor(Math.random()*500)+50,applicants:Math.floor(Math.random()*50)+5,description:job.description||'No description available',skills:extractSkills(job.description||''),source:'GitHub Jobs'}));}catch(error){console.error('Error fetching GitHub jobs:',error);return[];}};// WeWorkRemotely API (通过RSS2JSON)\nexport const fetchWeWorkRemotelyJobs=async function(){let category=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'all';try{console.log('🔄 尝试获取WeWorkRemotely工作数据...');// 获取RSS feed URL\nconst categoryPath={'programming':'remote-jobs/remote-programming-jobs','design':'remote-jobs/remote-design-jobs','marketing':'remote-jobs/remote-marketing-jobs','management':'remote-jobs/remote-management-executive-jobs','sales':'remote-jobs/remote-sales-jobs','customer-support':'remote-jobs/remote-customer-support-jobs','all':'categories/remote-jobs'}[category]||'categories/remote-jobs';const rssUrl=`https://weworkremotely.com/${categoryPath}.rss`;// 尝试多个RSS2JSON服务\nconst rss2jsonServices=[`https://api.rss2json.com/v1/api.json?rss_url=${encodeURIComponent(rssUrl)}`,`https://api.allorigins.win/get?url=${encodeURIComponent(rssUrl)}`];let data=null;let lastError=null;for(const serviceUrl of rss2jsonServices){try{var _data$items;console.log(`🔗 尝试RSS服务: ${serviceUrl.includes('rss2json')?'RSS2JSON':'AllOrigins'}`);const controller=new AbortController();const timeoutId=setTimeout(()=>controller.abort(),8000);const response=await fetch(serviceUrl,{signal:controller.signal});clearTimeout(timeoutId);if(!response.ok){throw new Error(`HTTP ${response.status}: ${response.statusText}`);}const responseData=await response.json();// 处理不同服务的响应格式\nif(serviceUrl.includes('rss2json')){if(responseData.status!=='ok'){throw new Error('Invalid response from RSS2JSON');}data=responseData;}else{// AllOrigins返回的是原始RSS内容，需要解析\n// 这里简化处理，如果需要可以添加XML解析\nthrow new Error('AllOrigins RSS parsing not implemented');}console.log('✅ 成功获取WeWorkRemotely数据，工作数量:',((_data$items=data.items)===null||_data$items===void 0?void 0:_data$items.length)||0);break;}catch(error){console.warn(`❌ RSS服务失败:`,error.message);lastError=error;continue;}}if(!data){throw lastError||new Error('所有RSS服务都失败了');}return Promise.all(data.items.map(async(item,index)=>{// 从标题中提取公司名称和职位\nconst titleMatch=item.title.match(/(.*?):(.*)/);const company=titleMatch?titleMatch[1].trim():'Unknown Company';const title=titleMatch?titleMatch[2].trim():item.title;return{id:`wwr-${index}-${Date.now()}`,title:title,company:company,companyLogo:await logoService.getCompanyLogo(company),location:'Remote',type:'Full-time',salary:estimateSalary(title),team:extractTeam(title),postedDate:formatDate(item.pubDate),views:Math.floor(Math.random()*500)+50,applicants:Math.floor(Math.random()*50)+5,description:item.description||item.content||'No description available',skills:extractSkills(item.description||item.content||title),source:'WeWorkRemotely',sourceUrl:item.link,sourceId:`wwr-${index}-${Date.now()}`};}));}catch(error){console.error('Error fetching WeWorkRemotely jobs:',error);return[];}};// 辅助函数\nconst formatDate=dateString=>{if(!dateString)return'Recently';const date=new Date(dateString);const now=new Date();const diffTime=Math.abs(now-date);const diffDays=Math.floor(diffTime/(1000*60*60*24));if(diffDays===0)return'Today';if(diffDays===1)return'Yesterday';if(diffDays<=7)return`${diffDays} days ago`;if(diffDays<=30)return`${Math.ceil(diffDays/7)} weeks ago`;return`${Math.ceil(diffDays/30)} months ago`;};const extractSkills=description=>{const commonSkills=['JavaScript','Python','React','Node.js','TypeScript','Angular','Vue.js','Java','C#','.NET','MongoDB','PostgreSQL','MySQL','AWS','Azure','Docker','Kubernetes','CI/CD','DevOps','Git','Linux','Figma','Sketch','Adobe XD','UI/UX','CSS','HTML','REST API','GraphQL'];const foundSkills=commonSkills.filter(skill=>typeof description==='string'&&description.toLowerCase().includes(skill.toLowerCase()));return foundSkills.length>0?foundSkills.slice(0,5):['Remote Work'];};const extractTeam=title=>{const teams={'Frontend':['Frontend','Front-end','Front End','UI','React','Angular','Vue','JavaScript'],'UX/UI':['UX','UI','User Experience','User Interface','Designer','Design'],'Backend':['Backend','Back-end','Back End','API','Server','Java','Python','Ruby','PHP','Node'],'Full Stack':['Full Stack','Fullstack','Full-stack'],'DevOps':['DevOps','SRE','Infrastructure','Cloud','AWS','Azure','GCP','Kubernetes','Docker'],'Mobile':['Mobile','iOS','Android','React Native','Flutter','Swift','Kotlin'],'Data':['Data','Analytics','Machine Learning','AI','ML','Data Science','Big Data'],'Product':['Product','PM','Product Manager','Product Owner'],'QA':['QA','Test','Testing','Quality'],'Security':['Security','Cyber','InfoSec']};for(const[team,keywords]of Object.entries(teams)){if(keywords.some(keyword=>title.includes(keyword))){return team;}}return'Engineering';};const estimateSalary=title=>{// 基于职位名称估算薪资范围\nconst seniorKeywords=['Senior','Sr','Lead','Principal','Staff','Architect'];const midKeywords=['II','2','Mid','Intermediate'];const juniorKeywords=['Junior','Jr','Entry','Associate','Intern'];const isSenior=seniorKeywords.some(key=>title.includes(key));const isMid=midKeywords.some(key=>title.includes(key));const isJunior=juniorKeywords.some(key=>title.includes(key));// 基础薪资范围\nlet baseSalary;if(title.includes('Manager')||title.includes('Director')){baseSalary=130;}else if(title.includes('Architect')||title.includes('Principal')){baseSalary=140;}else if(title.includes('DevOps')||title.includes('SRE')){baseSalary=125;}else if(title.includes('Data')||title.includes('Machine Learning')){baseSalary=110;}else if(title.includes('UI')||title.includes('UX')||title.includes('Design')){baseSalary=115;}else if(title.includes('Mobile')||title.includes('iOS')||title.includes('Android')){baseSalary=120;}else{baseSalary=100;}// 根据级别调整薪资\nif(isSenior){return baseSalary+20;}else if(isMid){return baseSalary;}else if(isJunior){return baseSalary-30;}else{return baseSalary;}};// 综合获取真实工作数据\nexport const fetchRealRemoteJobs=async function(){let searchTerm=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{// 并行调用多个API\nconst[remoteOKJobs,githubJobs,wwrJobs]=await Promise.allSettled([fetchRemoteOKJobs(),fetchGitHubJobs(),fetchWeWorkRemotelyJobs(filters.category)]);let allJobs=[...(remoteOKJobs.status==='fulfilled'?remoteOKJobs.value:[]),...(githubJobs.status==='fulfilled'?githubJobs.value:[]),...(wwrJobs.status==='fulfilled'?wwrJobs.value:[])];// 如果所有API都失败，返回空数组\nif(allJobs.length===0){throw new Error('Failed to fetch jobs from any source');}// 按搜索词过滤\nif(searchTerm){allJobs=allJobs.filter(job=>job.title.toLowerCase().includes(searchTerm.toLowerCase())||job.company.toLowerCase().includes(searchTerm.toLowerCase())||job.description.toLowerCase().includes(searchTerm.toLowerCase()));}// 去重和排序\nconst uniqueJobs=removeDuplicateJobs(allJobs);const sortedJobs=uniqueJobs.sort((a,b)=>{// 优先显示今天发布的工作\nif(a.postedDate==='Today'&&b.postedDate!=='Today')return-1;if(a.postedDate!=='Today'&&b.postedDate==='Today')return 1;return 0;});return{jobs:sortedJobs,total:sortedJobs.length,sources:['RemoteOK','WeWorkRemotely','GitHub Jobs'].filter(source=>allJobs.some(job=>job.source===source))};}catch(error){console.error('Error fetching real remote jobs:',error);throw error;}};// 去重函数\nconst removeDuplicateJobs=jobs=>{const seen=new Set();return jobs.filter(job=>{const key=`${job.title}-${job.company}`.toLowerCase().replace(/\\s+/g,'');if(seen.has(key)){return false;}seen.add(key);return true;});};export default{fetchRealRemoteJobs,fetchRemoteOKJobs,fetchGitHubJobs,fetchWeWorkRemotelyJobs};","map":{"version":3,"names":["logoService","fetchRemoteOKJobs","console","log","corsProxies","remoteOkUrl","data","lastError","corsProxy","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","encodeURIComponent","headers","window","location","origin","signal","clearTimeout","ok","Error","status","statusText","json","length","error","warn","message","jobs","slice","Promise","all","map","job","id","title","position","company","companyLogo","getCompanyLogo","company_logo","type","job_type","salary","estimateSalary","team","extractTeam","postedDate","formatDate","date","views","Math","floor","random","applicants","description","skills","extractSkills","tags","source","sourceUrl","url","sourceId","fetchGitHubJobs","created_at","fetchWeWorkRemotelyJobs","category","arguments","undefined","categoryPath","rssUrl","rss2jsonServices","serviceUrl","_data$items","includes","responseData","items","item","index","titleMatch","match","trim","Date","now","pubDate","content","link","dateString","diffTime","abs","diffDays","ceil","commonSkills","foundSkills","filter","skill","toLowerCase","teams","keywords","Object","entries","some","keyword","seniorKeywords","midKeywords","juniorKeywords","isSenior","key","isMid","isJunior","baseSalary","fetchRealRemoteJobs","searchTerm","filters","remoteOKJobs","githubJobs","wwrJobs","allSettled","allJobs","value","uniqueJobs","removeDuplicateJobs","sortedJobs","sort","a","b","total","sources","seen","Set","replace","has","add"],"sources":["D:/Kiro/remote-job-website/src/services/realJobAPI.js"],"sourcesContent":["// 使用真实的Job API服务\r\n// 这里集成一些公开的工作API\r\n\r\nimport logoService from './logoService';\r\n\r\n// RemoteOK API (免费，无需API密钥)\r\nexport const fetchRemoteOKJobs = async () => {\r\n  try {\r\n    console.log('🔄 尝试获取RemoteOK工作数据...');\r\n    \r\n    // 尝试多个CORS代理，提高成功率\r\n    const corsProxies = [\r\n      'https://api.allorigins.win/raw?url=',\r\n      'https://cors-anywhere.herokuapp.com/',\r\n      'https://api.codetabs.com/v1/proxy?quest=',\r\n      'https://thingproxy.freeboard.io/fetch/'\r\n    ];\r\n    \r\n    const remoteOkUrl = 'https://remoteok.io/api';\r\n    let data = null;\r\n    let lastError = null;\r\n    \r\n    // 尝试不同的代理\r\n    for (const corsProxy of corsProxies) {\r\n      try {\r\n        console.log(`🔗 尝试使用代理: ${corsProxy}`);\r\n        \r\n        const controller = new AbortController();\r\n        const timeoutId = setTimeout(() => controller.abort(), 8000); // 8秒超时\r\n        \r\n        const response = await fetch(`${corsProxy}${encodeURIComponent(remoteOkUrl)}`, {\r\n          headers: {\r\n            'Origin': window.location.origin,\r\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\r\n          },\r\n          signal: controller.signal\r\n        });\r\n        \r\n        clearTimeout(timeoutId);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n        }\r\n        \r\n        data = await response.json();\r\n        console.log('✅ 成功获取RemoteOK数据，工作数量:', data.length);\r\n        break; // 成功获取数据，跳出循环\r\n      } catch (error) {\r\n        console.warn(`❌ 代理 ${corsProxy} 失败:`, error.message);\r\n        lastError = error;\r\n        continue; // 尝试下一个代理\r\n      }\r\n    }\r\n    \r\n    // 如果所有代理都失败，抛出最后一个错误\r\n    if (!data) {\r\n      throw lastError || new Error('所有CORS代理都失败了');\r\n    }\r\n    \r\n    // RemoteOK返回的第一个元素是统计信息，需要跳过\r\n    const jobs = data.slice(1);\r\n    \r\n    return Promise.all(jobs.map(async job => ({\r\n      id: job.id,\r\n      title: job.position,\r\n      company: job.company,\r\n      companyLogo: await logoService.getCompanyLogo(job.company, job.company_logo),\r\n      location: job.location || 'Remote',\r\n      type: job.job_type || 'Full-time',\r\n      salary: estimateSalary(job.position),\r\n      team: extractTeam(job.position),\r\n      postedDate: formatDate(job.date),\r\n      views: Math.floor(Math.random() * 500) + 50,\r\n      applicants: Math.floor(Math.random() * 50) + 5,\r\n      description: job.description || 'No description available',\r\n      skills: extractSkills(job.tags || []),\r\n      source: 'RemoteOK',\r\n      sourceUrl: job.url || `https://remoteok.io/l/${job.id}`,\r\n      sourceId: job.id\r\n    })));\r\n  } catch (error) {\r\n    console.error('Error fetching RemoteOK jobs:', error);\r\n    // 如果API调用失败，返回空数组\r\n    return [];\r\n  }\r\n};\r\n\r\n// GitHub Jobs API (通过公共API代理)\r\nexport const fetchGitHubJobs = async () => {\r\n  try {\r\n    const response = await fetch('https://jobs.github.com/positions.json');\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch GitHub jobs: ${response.status}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    return data.map(job => ({\r\n      id: job.id,\r\n      title: job.title,\r\n      company: job.company,\r\n      companyLogo: job.company_logo,\r\n      location: job.location || 'Remote',\r\n      type: job.type || 'Full-time',\r\n      salary: estimateSalary(job.title),\r\n      team: extractTeam(job.title),\r\n      postedDate: formatDate(job.created_at),\r\n      views: Math.floor(Math.random() * 500) + 50,\r\n      applicants: Math.floor(Math.random() * 50) + 5,\r\n      description: job.description || 'No description available',\r\n      skills: extractSkills(job.description || ''),\r\n      source: 'GitHub Jobs'\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching GitHub jobs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// WeWorkRemotely API (通过RSS2JSON)\r\nexport const fetchWeWorkRemotelyJobs = async (category = 'all') => {\r\n  try {\r\n    console.log('🔄 尝试获取WeWorkRemotely工作数据...');\r\n    \r\n    // 获取RSS feed URL\r\n    const categoryPath = {\r\n      'programming': 'remote-jobs/remote-programming-jobs',\r\n      'design': 'remote-jobs/remote-design-jobs',\r\n      'marketing': 'remote-jobs/remote-marketing-jobs',\r\n      'management': 'remote-jobs/remote-management-executive-jobs',\r\n      'sales': 'remote-jobs/remote-sales-jobs',\r\n      'customer-support': 'remote-jobs/remote-customer-support-jobs',\r\n      'all': 'categories/remote-jobs'\r\n    }[category] || 'categories/remote-jobs';\r\n    \r\n    const rssUrl = `https://weworkremotely.com/${categoryPath}.rss`;\r\n    \r\n    // 尝试多个RSS2JSON服务\r\n    const rss2jsonServices = [\r\n      `https://api.rss2json.com/v1/api.json?rss_url=${encodeURIComponent(rssUrl)}`,\r\n      `https://api.allorigins.win/get?url=${encodeURIComponent(rssUrl)}`\r\n    ];\r\n    \r\n    let data = null;\r\n    let lastError = null;\r\n    \r\n    for (const serviceUrl of rss2jsonServices) {\r\n      try {\r\n        console.log(`🔗 尝试RSS服务: ${serviceUrl.includes('rss2json') ? 'RSS2JSON' : 'AllOrigins'}`);\r\n        \r\n        const controller = new AbortController();\r\n        const timeoutId = setTimeout(() => controller.abort(), 8000);\r\n        \r\n        const response = await fetch(serviceUrl, {\r\n          signal: controller.signal\r\n        });\r\n        \r\n        clearTimeout(timeoutId);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n        }\r\n        \r\n        const responseData = await response.json();\r\n        \r\n        // 处理不同服务的响应格式\r\n        if (serviceUrl.includes('rss2json')) {\r\n          if (responseData.status !== 'ok') {\r\n            throw new Error('Invalid response from RSS2JSON');\r\n          }\r\n          data = responseData;\r\n        } else {\r\n          // AllOrigins返回的是原始RSS内容，需要解析\r\n          // 这里简化处理，如果需要可以添加XML解析\r\n          throw new Error('AllOrigins RSS parsing not implemented');\r\n        }\r\n        \r\n        console.log('✅ 成功获取WeWorkRemotely数据，工作数量:', data.items?.length || 0);\r\n        break;\r\n      } catch (error) {\r\n        console.warn(`❌ RSS服务失败:`, error.message);\r\n        lastError = error;\r\n        continue;\r\n      }\r\n    }\r\n    \r\n    if (!data) {\r\n      throw lastError || new Error('所有RSS服务都失败了');\r\n    }\r\n    \r\n    return Promise.all(data.items.map(async (item, index) => {\r\n      // 从标题中提取公司名称和职位\r\n      const titleMatch = item.title.match(/(.*?):(.*)/);\r\n      const company = titleMatch ? titleMatch[1].trim() : 'Unknown Company';\r\n      const title = titleMatch ? titleMatch[2].trim() : item.title;\r\n      \r\n      return {\r\n        id: `wwr-${index}-${Date.now()}`,\r\n        title: title,\r\n        company: company,\r\n        companyLogo: await logoService.getCompanyLogo(company),\r\n        location: 'Remote',\r\n        type: 'Full-time',\r\n        salary: estimateSalary(title),\r\n        team: extractTeam(title),\r\n        postedDate: formatDate(item.pubDate),\r\n        views: Math.floor(Math.random() * 500) + 50,\r\n        applicants: Math.floor(Math.random() * 50) + 5,\r\n        description: item.description || item.content || 'No description available',\r\n        skills: extractSkills(item.description || item.content || title),\r\n        source: 'WeWorkRemotely',\r\n        sourceUrl: item.link,\r\n        sourceId: `wwr-${index}-${Date.now()}`\r\n      };\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching WeWorkRemotely jobs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// 辅助函数\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return 'Recently';\r\n  \r\n  const date = new Date(dateString);\r\n  const now = new Date();\r\n  const diffTime = Math.abs(now - date);\r\n  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n  if (diffDays === 0) return 'Today';\r\n  if (diffDays === 1) return 'Yesterday';\r\n  if (diffDays <= 7) return `${diffDays} days ago`;\r\n  if (diffDays <= 30) return `${Math.ceil(diffDays / 7)} weeks ago`;\r\n  return `${Math.ceil(diffDays / 30)} months ago`;\r\n};\r\n\r\nconst extractSkills = (description) => {\r\n  const commonSkills = [\r\n    'JavaScript', 'Python', 'React', 'Node.js', 'TypeScript', 'Angular', 'Vue.js', 'Java', 'C#', '.NET',\r\n    'MongoDB', 'PostgreSQL', 'MySQL', 'AWS', 'Azure', 'Docker', 'Kubernetes', 'CI/CD', 'DevOps',\r\n    'Git', 'Linux', 'Figma', 'Sketch', 'Adobe XD', 'UI/UX', 'CSS', 'HTML', 'REST API', 'GraphQL'\r\n  ];\r\n\r\n  const foundSkills = commonSkills.filter(skill => \r\n    typeof description === 'string' && description.toLowerCase().includes(skill.toLowerCase())\r\n  );\r\n  \r\n  return foundSkills.length > 0 ? foundSkills.slice(0, 5) : ['Remote Work'];\r\n};\r\n\r\nconst extractTeam = (title) => {\r\n  const teams = {\r\n    'Frontend': ['Frontend', 'Front-end', 'Front End', 'UI', 'React', 'Angular', 'Vue', 'JavaScript'],\r\n    'UX/UI': ['UX', 'UI', 'User Experience', 'User Interface', 'Designer', 'Design'],\r\n    'Backend': ['Backend', 'Back-end', 'Back End', 'API', 'Server', 'Java', 'Python', 'Ruby', 'PHP', 'Node'],\r\n    'Full Stack': ['Full Stack', 'Fullstack', 'Full-stack'],\r\n    'DevOps': ['DevOps', 'SRE', 'Infrastructure', 'Cloud', 'AWS', 'Azure', 'GCP', 'Kubernetes', 'Docker'],\r\n    'Mobile': ['Mobile', 'iOS', 'Android', 'React Native', 'Flutter', 'Swift', 'Kotlin'],\r\n    'Data': ['Data', 'Analytics', 'Machine Learning', 'AI', 'ML', 'Data Science', 'Big Data'],\r\n    'Product': ['Product', 'PM', 'Product Manager', 'Product Owner'],\r\n    'QA': ['QA', 'Test', 'Testing', 'Quality'],\r\n    'Security': ['Security', 'Cyber', 'InfoSec']\r\n  };\r\n  \r\n  for (const [team, keywords] of Object.entries(teams)) {\r\n    if (keywords.some(keyword => title.includes(keyword))) {\r\n      return team;\r\n    }\r\n  }\r\n  \r\n  return 'Engineering';\r\n};\r\n\r\nconst estimateSalary = (title) => {\r\n  // 基于职位名称估算薪资范围\r\n  const seniorKeywords = ['Senior', 'Sr', 'Lead', 'Principal', 'Staff', 'Architect'];\r\n  const midKeywords = ['II', '2', 'Mid', 'Intermediate'];\r\n  const juniorKeywords = ['Junior', 'Jr', 'Entry', 'Associate', 'Intern'];\r\n  \r\n  const isSenior = seniorKeywords.some(key => title.includes(key));\r\n  const isMid = midKeywords.some(key => title.includes(key));\r\n  const isJunior = juniorKeywords.some(key => title.includes(key));\r\n  \r\n  // 基础薪资范围\r\n  let baseSalary;\r\n  if (title.includes('Manager') || title.includes('Director')) {\r\n    baseSalary = 130;\r\n  } else if (title.includes('Architect') || title.includes('Principal')) {\r\n    baseSalary = 140;\r\n  } else if (title.includes('DevOps') || title.includes('SRE')) {\r\n    baseSalary = 125;\r\n  } else if (title.includes('Data') || title.includes('Machine Learning')) {\r\n    baseSalary = 110;\r\n  } else if (title.includes('UI') || title.includes('UX') || title.includes('Design')) {\r\n    baseSalary = 115;\r\n  } else if (title.includes('Mobile') || title.includes('iOS') || title.includes('Android')) {\r\n    baseSalary = 120;\r\n  } else {\r\n    baseSalary = 100;\r\n  }\r\n  \r\n  // 根据级别调整薪资\r\n  if (isSenior) {\r\n    return baseSalary + 20;\r\n  } else if (isMid) {\r\n    return baseSalary;\r\n  } else if (isJunior) {\r\n    return baseSalary - 30;\r\n  } else {\r\n    return baseSalary;\r\n  }\r\n};\r\n\r\n// 综合获取真实工作数据\r\nexport const fetchRealRemoteJobs = async (searchTerm = '', filters = {}) => {\r\n  try {\r\n    // 并行调用多个API\r\n    const [remoteOKJobs, githubJobs, wwrJobs] = await Promise.allSettled([\r\n      fetchRemoteOKJobs(),\r\n      fetchGitHubJobs(),\r\n      fetchWeWorkRemotelyJobs(filters.category)\r\n    ]);\r\n    \r\n    let allJobs = [\r\n      ...(remoteOKJobs.status === 'fulfilled' ? remoteOKJobs.value : []),\r\n      ...(githubJobs.status === 'fulfilled' ? githubJobs.value : []),\r\n      ...(wwrJobs.status === 'fulfilled' ? wwrJobs.value : [])\r\n    ];\r\n    \r\n    // 如果所有API都失败，返回空数组\r\n    if (allJobs.length === 0) {\r\n      throw new Error('Failed to fetch jobs from any source');\r\n    }\r\n    \r\n    // 按搜索词过滤\r\n    if (searchTerm) {\r\n      allJobs = allJobs.filter(job => \r\n        job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        job.company.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        job.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    \r\n    // 去重和排序\r\n    const uniqueJobs = removeDuplicateJobs(allJobs);\r\n    const sortedJobs = uniqueJobs.sort((a, b) => {\r\n      // 优先显示今天发布的工作\r\n      if (a.postedDate === 'Today' && b.postedDate !== 'Today') return -1;\r\n      if (a.postedDate !== 'Today' && b.postedDate === 'Today') return 1;\r\n      return 0;\r\n    });\r\n    \r\n    return {\r\n      jobs: sortedJobs,\r\n      total: sortedJobs.length,\r\n      sources: ['RemoteOK', 'WeWorkRemotely', 'GitHub Jobs'].filter(source => \r\n        allJobs.some(job => job.source === source)\r\n      )\r\n    };\r\n  } catch (error) {\r\n    console.error('Error fetching real remote jobs:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 去重函数\r\nconst removeDuplicateJobs = (jobs) => {\r\n  const seen = new Set();\r\n  return jobs.filter(job => {\r\n    const key = `${job.title}-${job.company}`.toLowerCase().replace(/\\s+/g, '');\r\n    if (seen.has(key)) {\r\n      return false;\r\n    }\r\n    seen.add(key);\r\n    return true;\r\n  });\r\n};\r\n\r\nexport default {\r\n  fetchRealRemoteJobs,\r\n  fetchRemoteOKJobs,\r\n  fetchGitHubJobs,\r\n  fetchWeWorkRemotelyJobs\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}