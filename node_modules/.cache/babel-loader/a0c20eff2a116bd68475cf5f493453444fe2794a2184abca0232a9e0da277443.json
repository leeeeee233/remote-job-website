{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kiro\\\\remote-job-website\\\\src\\\\pages\\\\JobFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Header from '../components/Header';\nimport JobCard from '../components/JobCard';\nimport JobDetailsDrawer from '../components/JobDetailsDrawer';\nimport { mockJobs } from '../services/mockData';\nimport jobService from '../services/jobService';\nimport './JobFeed.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobFeed = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searching, setSearching] = useState(false);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [activeFilters, setActiveFilters] = useState({});\n  const [dataSources, setDataSources] = useState([]);\n  const observer = useRef();\n  const lastJobElementRef = useCallback(node => {\n    if (loading || loadingMore) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        loadMoreJobs();\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, loadingMore, hasMore]);\n\n  // 加载更多工作\n  const loadMoreJobs = async () => {\n    if (loadingMore || !hasMore) return;\n    setLoadingMore(true);\n    try {\n      const nextPage = page + 1;\n      const result = await jobService.searchRemoteJobs(searchTerm, {\n        ...activeFilters,\n        page: nextPage\n      });\n      if (result.jobs.length === 0) {\n        setHasMore(false);\n      } else {\n        setJobs(prevJobs => [...prevJobs, ...result.jobs]);\n        setFilteredJobs(prevFiltered => [...prevFiltered, ...result.jobs]);\n        setPage(nextPage);\n      }\n    } catch (error) {\n      console.error('Failed to load more jobs:', error);\n    } finally {\n      setLoadingMore(false);\n    }\n  };\n  useEffect(() => {\n    // 获取真实的远程工作数据\n    const fetchJobs = async () => {\n      setLoading(true);\n      setJobs([]);\n      setFilteredJobs([]);\n      setPage(0);\n      setHasMore(true);\n      try {\n        // 尝试从真实API获取数据\n        const result = await jobService.searchRemoteJobs(searchTerm, activeFilters);\n        setJobs(result.jobs);\n        setFilteredJobs(result.jobs);\n        setDataSources(result.sources || []);\n\n        // 如果返回的工作数量小于预期，可能没有更多数据了\n        if (result.jobs.length < 20) {\n          setHasMore(false);\n        }\n      } catch (error) {\n        console.error('Failed to fetch jobs from API, using mock data:', error);\n        // 如果API失败，使用模拟数据作为后备\n        setJobs(mockJobs);\n        setFilteredJobs(mockJobs);\n        setDataSources(['Mock Data']);\n        setHasMore(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, [searchTerm, JSON.stringify(activeFilters)]);\n  const handleSearch = (term, activeFilters) => {\n    // 更新搜索词状态\n    if (term !== undefined && term !== null) {\n      setSearchTerm(term);\n    }\n\n    // 设置搜索状态为正在搜索\n    setSearching(true);\n\n    // 使用setTimeout模拟搜索延迟，提供更好的用户体验\n    setTimeout(() => {\n      let results = [...jobs];\n      const searchValue = term !== undefined && term !== null ? term : searchTerm;\n\n      // 按搜索词过滤\n      if (searchValue) {\n        results = results.filter(job => job.title.toLowerCase().includes(searchValue.toLowerCase()) || job.company.toLowerCase().includes(searchValue.toLowerCase()) || job.location.toLowerCase().includes(searchValue.toLowerCase()));\n      }\n\n      // 按职位类型过滤\n      if (activeFilters && activeFilters.length > 0) {\n        results = results.filter(job => {\n          // 这里简化处理，实际应用中需要更复杂的匹配逻辑\n          if (activeFilters.includes('ux-designer') && job.title.toLowerCase().includes('ux')) {\n            return true;\n          }\n          if (activeFilters.includes('ui-designer') && job.title.toLowerCase().includes('ui')) {\n            return true;\n          }\n          if (activeFilters.includes('product-designer') && job.title.toLowerCase().includes('product')) {\n            return true;\n          }\n          if (activeFilters.includes('visual-identity') && (job.title.toLowerCase().includes('visual') || job.title.toLowerCase().includes('graphic'))) {\n            return true;\n          }\n          return false;\n        });\n      }\n      setFilteredJobs(results);\n      setSearching(false);\n    }, 300); // 300ms的延迟，提供更流畅的搜索体验\n  };\n  const handleFilter = filters => {\n    // 更新活动筛选条件\n    setActiveFilters(prevFilters => ({\n      ...prevFilters,\n      ...filters\n    }));\n\n    // 重置页码和加载状态，触发useEffect重新获取数据\n    setPage(0);\n    setHasMore(true);\n  };\n  const handleSort = sortOption => {\n    // 更新排序选项\n    setActiveFilters(prevFilters => ({\n      ...prevFilters,\n      sort: sortOption\n    }));\n\n    // 本地排序当前已加载的工作\n    let sorted = [...filteredJobs];\n    switch (sortOption) {\n      case 'salary':\n        sorted.sort((a, b) => b.salary - a.salary);\n        break;\n      case 'newest':\n        sorted.sort((a, b) => {\n          if (a.postedDate === 'Today') return -1;\n          if (b.postedDate === 'Today') return 1;\n          if (a.postedDate === 'Yesterday' && b.postedDate !== 'Today') return -1;\n          if (b.postedDate === 'Yesterday' && a.postedDate !== 'Today') return 1;\n\n          // 比较天数\n          const getNumericDays = dateStr => {\n            if (dateStr.includes('days ago')) {\n              return parseInt(dateStr.split(' ')[0], 10);\n            }\n            if (dateStr.includes('weeks ago')) {\n              return parseInt(dateStr.split(' ')[0], 10) * 7;\n            }\n            if (dateStr.includes('months ago')) {\n              return parseInt(dateStr.split(' ')[0], 10) * 30;\n            }\n            return 0;\n          };\n          return getNumericDays(a.postedDate) - getNumericDays(b.postedDate);\n        });\n        break;\n      case 'relevant':\n        // 这里可以实现更复杂的相关性排序逻辑\n        break;\n      default:\n        break;\n    }\n    setFilteredJobs(sorted);\n  };\n\n  // 处理工作卡片点击\n  const handleJobSelect = job => {\n    setSelectedJob(job);\n    setIsDrawerOpen(true);\n  };\n\n  // 处理关闭抽屉\n  const handleCloseDrawer = () => {\n    setIsDrawerOpen(false);\n  };\n\n  // 处理申请工作\n  const handleApplyJob = jobId => {\n    console.log(`Applying for job: ${jobId}`);\n    // 这里可以添加申请工作的逻辑\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `job-feed ${isDrawerOpen ? 'drawer-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onSearch: term => handleSearch(term),\n      onFilter: handleFilter,\n      onSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-list-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this) : searching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searching-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Searching...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: filteredJobs.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-count\",\n            children: [\"\\u627E\\u5230 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"count-highlight\",\n              children: filteredJobs.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 22\n            }, this), \" \\u4E2A\\u5DE5\\u4F5C\\u673A\\u4F1A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-sources\",\n            children: [\"\\u6570\\u636E\\u6765\\u6E90: \", dataSources.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-list\",\n            children: [filteredJobs.map((job, index) => {\n              if (filteredJobs.length === index + 1) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: lastJobElementRef,\n                  children: /*#__PURE__*/_jsxDEV(JobCard, {\n                    job: job,\n                    onSelect: () => handleJobSelect(job)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 27\n                  }, this)\n                }, job.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 25\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(JobCard, {\n                  job: job,\n                  onSelect: () => handleJobSelect(job)\n                }, job.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 25\n                }, this);\n              }\n            }), loadingMore && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-more\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-spinner small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u52A0\\u8F7D\\u66F4\\u591A\\u5DE5\\u4F5C...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-jobs-found\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No jobs found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Try adjusting your search filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JobDetailsDrawer, {\n      job: selectedJob,\n      isOpen: isDrawerOpen,\n      onClose: handleCloseDrawer,\n      onApply: handleApplyJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(JobFeed, \"DErdVoOsOIGVgndSL8FjcMJPpVo=\");\n_c = JobFeed;\nexport default JobFeed;\nvar _c;\n$RefreshReg$(_c, \"JobFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Header","JobCard","JobDetailsDrawer","mockJobs","jobService","jsxDEV","_jsxDEV","Fragment","_Fragment","JobFeed","_s","jobs","setJobs","filteredJobs","setFilteredJobs","loading","setLoading","searchTerm","setSearchTerm","searching","setSearching","selectedJob","setSelectedJob","isDrawerOpen","setIsDrawerOpen","page","setPage","hasMore","setHasMore","loadingMore","setLoadingMore","activeFilters","setActiveFilters","dataSources","setDataSources","observer","lastJobElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","loadMoreJobs","observe","nextPage","result","searchRemoteJobs","length","prevJobs","prevFiltered","error","console","fetchJobs","sources","JSON","stringify","handleSearch","term","undefined","setTimeout","results","searchValue","filter","job","title","toLowerCase","includes","company","location","handleFilter","filters","prevFilters","handleSort","sortOption","sort","sorted","a","b","salary","postedDate","getNumericDays","dateStr","parseInt","split","handleJobSelect","handleCloseDrawer","handleApplyJob","jobId","log","className","children","onSearch","onFilter","onSort","fileName","_jsxFileName","lineNumber","columnNumber","join","map","index","ref","onSelect","id","isOpen","onClose","onApply","_c","$RefreshReg$"],"sources":["D:/Kiro/remote-job-website/src/pages/JobFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport Header from '../components/Header';\r\nimport JobCard from '../components/JobCard';\r\nimport JobDetailsDrawer from '../components/JobDetailsDrawer';\r\nimport { mockJobs } from '../services/mockData';\r\nimport jobService from '../services/jobService';\r\nimport './JobFeed.css';\r\n\r\nconst JobFeed = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searching, setSearching] = useState(false);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [activeFilters, setActiveFilters] = useState({});\r\n  const [dataSources, setDataSources] = useState([]);\r\n  const observer = useRef();\r\n  const lastJobElementRef = useCallback(node => {\r\n    if (loading || loadingMore) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        loadMoreJobs();\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, [loading, loadingMore, hasMore]);\r\n\r\n  // 加载更多工作\r\n  const loadMoreJobs = async () => {\r\n    if (loadingMore || !hasMore) return;\r\n    \r\n    setLoadingMore(true);\r\n    try {\r\n      const nextPage = page + 1;\r\n      const result = await jobService.searchRemoteJobs(searchTerm, {\r\n        ...activeFilters,\r\n        page: nextPage\r\n      });\r\n      \r\n      if (result.jobs.length === 0) {\r\n        setHasMore(false);\r\n      } else {\r\n        setJobs(prevJobs => [...prevJobs, ...result.jobs]);\r\n        setFilteredJobs(prevFiltered => [...prevFiltered, ...result.jobs]);\r\n        setPage(nextPage);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load more jobs:', error);\r\n    } finally {\r\n      setLoadingMore(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 获取真实的远程工作数据\r\n    const fetchJobs = async () => {\r\n      setLoading(true);\r\n      setJobs([]);\r\n      setFilteredJobs([]);\r\n      setPage(0);\r\n      setHasMore(true);\r\n      \r\n      try {\r\n        // 尝试从真实API获取数据\r\n        const result = await jobService.searchRemoteJobs(searchTerm, activeFilters);\r\n        setJobs(result.jobs);\r\n        setFilteredJobs(result.jobs);\r\n        setDataSources(result.sources || []);\r\n        \r\n        // 如果返回的工作数量小于预期，可能没有更多数据了\r\n        if (result.jobs.length < 20) {\r\n          setHasMore(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch jobs from API, using mock data:', error);\r\n        // 如果API失败，使用模拟数据作为后备\r\n        setJobs(mockJobs);\r\n        setFilteredJobs(mockJobs);\r\n        setDataSources(['Mock Data']);\r\n        setHasMore(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [searchTerm, JSON.stringify(activeFilters)]);\r\n\r\n  const handleSearch = (term, activeFilters) => {\r\n    // 更新搜索词状态\r\n    if (term !== undefined && term !== null) {\r\n      setSearchTerm(term);\r\n    }\r\n    \r\n    // 设置搜索状态为正在搜索\r\n    setSearching(true);\r\n    \r\n    // 使用setTimeout模拟搜索延迟，提供更好的用户体验\r\n    setTimeout(() => {\r\n      let results = [...jobs];\r\n      const searchValue = term !== undefined && term !== null ? term : searchTerm;\r\n      \r\n      // 按搜索词过滤\r\n      if (searchValue) {\r\n        results = results.filter(job => \r\n          job.title.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          job.company.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          job.location.toLowerCase().includes(searchValue.toLowerCase())\r\n        );\r\n      }\r\n      \r\n      // 按职位类型过滤\r\n      if (activeFilters && activeFilters.length > 0) {\r\n        results = results.filter(job => {\r\n          // 这里简化处理，实际应用中需要更复杂的匹配逻辑\r\n          if (activeFilters.includes('ux-designer') && job.title.toLowerCase().includes('ux')) {\r\n            return true;\r\n          }\r\n          if (activeFilters.includes('ui-designer') && job.title.toLowerCase().includes('ui')) {\r\n            return true;\r\n          }\r\n          if (activeFilters.includes('product-designer') && job.title.toLowerCase().includes('product')) {\r\n            return true;\r\n          }\r\n          if (activeFilters.includes('visual-identity') && \r\n              (job.title.toLowerCase().includes('visual') || job.title.toLowerCase().includes('graphic'))) {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n      }\r\n      \r\n      setFilteredJobs(results);\r\n      setSearching(false);\r\n    }, 300); // 300ms的延迟，提供更流畅的搜索体验\r\n  };\r\n\r\n  const handleFilter = (filters) => {\r\n    // 更新活动筛选条件\r\n    setActiveFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      ...filters\r\n    }));\r\n    \r\n    // 重置页码和加载状态，触发useEffect重新获取数据\r\n    setPage(0);\r\n    setHasMore(true);\r\n  };\r\n  \r\n  const handleSort = (sortOption) => {\r\n    // 更新排序选项\r\n    setActiveFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      sort: sortOption\r\n    }));\r\n    \r\n    // 本地排序当前已加载的工作\r\n    let sorted = [...filteredJobs];\r\n    \r\n    switch (sortOption) {\r\n      case 'salary':\r\n        sorted.sort((a, b) => b.salary - a.salary);\r\n        break;\r\n      case 'newest':\r\n        sorted.sort((a, b) => {\r\n          if (a.postedDate === 'Today') return -1;\r\n          if (b.postedDate === 'Today') return 1;\r\n          if (a.postedDate === 'Yesterday' && b.postedDate !== 'Today') return -1;\r\n          if (b.postedDate === 'Yesterday' && a.postedDate !== 'Today') return 1;\r\n          \r\n          // 比较天数\r\n          const getNumericDays = (dateStr) => {\r\n            if (dateStr.includes('days ago')) {\r\n              return parseInt(dateStr.split(' ')[0], 10);\r\n            }\r\n            if (dateStr.includes('weeks ago')) {\r\n              return parseInt(dateStr.split(' ')[0], 10) * 7;\r\n            }\r\n            if (dateStr.includes('months ago')) {\r\n              return parseInt(dateStr.split(' ')[0], 10) * 30;\r\n            }\r\n            return 0;\r\n          };\r\n          \r\n          return getNumericDays(a.postedDate) - getNumericDays(b.postedDate);\r\n        });\r\n        break;\r\n      case 'relevant':\r\n        // 这里可以实现更复杂的相关性排序逻辑\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    setFilteredJobs(sorted);\r\n  };\r\n\r\n  // 处理工作卡片点击\r\n  const handleJobSelect = (job) => {\r\n    setSelectedJob(job);\r\n    setIsDrawerOpen(true);\r\n  };\r\n  \r\n  // 处理关闭抽屉\r\n  const handleCloseDrawer = () => {\r\n    setIsDrawerOpen(false);\r\n  };\r\n  \r\n  // 处理申请工作\r\n  const handleApplyJob = (jobId) => {\r\n    console.log(`Applying for job: ${jobId}`);\r\n    // 这里可以添加申请工作的逻辑\r\n  };\r\n\r\n  return (\r\n    <div className={`job-feed ${isDrawerOpen ? 'drawer-open' : ''}`}>\r\n      <Header \r\n        onSearch={(term) => handleSearch(term)} \r\n        onFilter={handleFilter}\r\n        onSort={handleSort}\r\n      />\r\n      \r\n      <div className=\"job-list-container\">\r\n        {loading ? (\r\n          <div className=\"loading-container\">\r\n            <div className=\"loading-spinner\"></div>\r\n            <p>Loading jobs...</p>\r\n          </div>\r\n        ) : searching ? (\r\n          <div className=\"searching-container\">\r\n            <div className=\"loading-spinner small\"></div>\r\n            <p>Searching...</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {filteredJobs.length > 0 ? (\r\n              <>\r\n                <div className=\"results-count\">\r\n                  找到 <span className=\"count-highlight\">{filteredJobs.length}</span> 个工作机会\r\n                </div>\r\n                <div className=\"data-sources\">\r\n                  数据来源: {dataSources.join(', ')}\r\n                </div>\r\n                <div className=\"job-list\">\r\n                  {filteredJobs.map((job, index) => {\r\n                    if (filteredJobs.length === index + 1) {\r\n                      return (\r\n                        <div ref={lastJobElementRef} key={job.id}>\r\n                          <JobCard \r\n                            job={job} \r\n                            onSelect={() => handleJobSelect(job)}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <JobCard \r\n                          key={job.id} \r\n                          job={job} \r\n                          onSelect={() => handleJobSelect(job)}\r\n                        />\r\n                      );\r\n                    }\r\n                  })}\r\n                  {loadingMore && (\r\n                    <div className=\"loading-more\">\r\n                      <div className=\"loading-spinner small\"></div>\r\n                      <p>加载更多工作...</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"no-jobs-found\">\r\n                <h3>No jobs found</h3>\r\n                <p>Try adjusting your search filters</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      \r\n      <JobDetailsDrawer \r\n        job={selectedJob}\r\n        isOpen={isDrawerOpen}\r\n        onClose={handleCloseDrawer}\r\n        onApply={handleApplyJob}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}