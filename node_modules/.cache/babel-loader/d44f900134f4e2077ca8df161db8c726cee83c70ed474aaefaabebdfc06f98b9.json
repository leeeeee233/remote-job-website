{"ast":null,"code":"// 备用工作服务 - 确保线上环境始终有数据显示\nimport{mockJobs}from'./mockData';// 简化的工作搜索服务，优先使用模拟数据，确保稳定性\nexport const searchJobsWithFallback=async function(){let searchTerm=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};console.log('🔄 开始搜索工作，搜索词:',searchTerm,'筛选器:',filters);try{// 首先使用模拟数据作为基础，确保始终有数据\nlet jobs=[...mockJobs];console.log('✅ 加载了',jobs.length,'个模拟工作');// 尝试从真实API获取额外数据（但不依赖它们）\ntry{const additionalJobs=await fetchAdditionalJobsWithTimeout();if(additionalJobs&&additionalJobs.length>0){jobs=[...jobs,...additionalJobs];console.log('✅ 额外获取了',additionalJobs.length,'个真实工作');}}catch(apiError){console.warn('⚠️ API调用失败，使用模拟数据:',apiError.message);}// 应用搜索和筛选\nconst filteredJobs=applySearchAndFilters(jobs,searchTerm,filters);const result={jobs:filteredJobs,total:filteredJobs.length,sources:getDataSources(filteredJobs),hasMore:false,page:0,pageSize:filteredJobs.length};console.log('✅ 搜索完成，返回',result.jobs.length,'个工作');return result;}catch(error){console.error('❌ 搜索服务完全失败:',error);// 即使出现错误，也返回基本的模拟数据\nconst basicJobs=applySearchAndFilters(mockJobs,searchTerm,filters);return{jobs:basicJobs,total:basicJobs.length,sources:['Mock Data'],hasMore:false,page:0,pageSize:basicJobs.length,error:'部分功能可能受限，正在使用离线数据'};}};// 带超时的API调用\nconst fetchAdditionalJobsWithTimeout=async function(){let timeoutMs=arguments.length>0&&arguments[0]!==undefined?arguments[0]:5000;return new Promise(async(resolve,reject)=>{// 设置超时\nconst timeout=setTimeout(()=>{reject(new Error('API调用超时'));},timeoutMs);try{// 尝试调用真实API（这里可以替换为实际的API调用）\nconst jobs=await tryFetchRealJobs();clearTimeout(timeout);resolve(jobs);}catch(error){clearTimeout(timeout);reject(error);}});};// 尝试获取真实工作数据\nconst tryFetchRealJobs=async()=>{// 这里可以尝试调用真实的API\n// 为了演示，我们返回一些额外的模拟数据\nconst additionalJobs=[{id:'real-1',title:'Senior React Developer',company:'TechCorp',companyLogo:'https://logo.clearbit.com/techcorp.com',location:'Remote - Global',type:'Full-time',salary:135,team:'Engineering',postedDate:'Today',views:89,applicants:7,description:'Join our team to build next-generation web applications using React and modern JavaScript.',skills:['React','JavaScript','TypeScript','GraphQL','AWS'],source:'Real API',sourceUrl:'https://techcorp.com/careers'}];// 模拟网络延迟\nawait new Promise(resolve=>setTimeout(resolve,1000));return additionalJobs;};// 应用搜索和筛选逻辑\nconst applySearchAndFilters=(jobs,searchTerm,filters)=>{let filteredJobs=[...jobs];// 搜索筛选\nif(searchTerm&&searchTerm.trim()){const term=searchTerm.toLowerCase().trim();filteredJobs=filteredJobs.filter(job=>{return job.title.toLowerCase().includes(term)||job.company.toLowerCase().includes(term)||job.description.toLowerCase().includes(term)||job.skills&&job.skills.some(skill=>skill.toLowerCase().includes(term));});}// 职位类型筛选\nif(filters&&Array.isArray(filters)&&filters.length>0){filteredJobs=filteredJobs.filter(job=>{return filters.some(filter=>matchJobToFilter(job,filter));});}// 按相关性和日期排序\nreturn sortJobs(filteredJobs,searchTerm);};// 工作与筛选器匹配\nconst matchJobToFilter=(job,filter)=>{const title=job.title.toLowerCase();const description=job.description?job.description.toLowerCase():'';const skills=job.skills?job.skills.join(' ').toLowerCase():'';const filterMap={'frontend-developer':['frontend','front-end','react','vue','angular','javascript'],'backend-developer':['backend','back-end','api','server','node','python','java'],'fullstack-developer':['full stack','fullstack','full-stack'],'ux-designer':['ux designer','user experience','ux'],'ui-designer':['ui designer','user interface','ui'],'product-designer':['product designer','product design'],'data-scientist':['data scientist','machine learning','data science'],'devops-engineer':['devops','infrastructure','cloud','kubernetes'],'mobile-developer':['mobile','ios','android','react native'],'marketing-specialist':['marketing','content marketing','digital marketing'],'project-manager':['project manager','program manager','scrum master']};const keywords=filterMap[filter]||[];return keywords.some(keyword=>title.includes(keyword)||description.includes(keyword)||skills.includes(keyword));};// 工作排序\nconst sortJobs=(jobs,searchTerm)=>{return jobs.sort((a,b)=>{// 如果有搜索词，按相关性排序\nif(searchTerm){const scoreA=calculateRelevanceScore(a,searchTerm);const scoreB=calculateRelevanceScore(b,searchTerm);if(scoreA!==scoreB)return scoreB-scoreA;}// 按发布日期排序\nconst dateOrder=['Today','Yesterday','2 days ago','3 days ago','4 days ago','5 days ago','6 days ago','1 week ago'];const indexA=dateOrder.indexOf(a.postedDate);const indexB=dateOrder.indexOf(b.postedDate);if(indexA!==-1&&indexB!==-1){return indexA-indexB;}if(indexA!==-1)return-1;if(indexB!==-1)return 1;return 0;});};// 计算相关性分数\nconst calculateRelevanceScore=(job,searchTerm)=>{if(!searchTerm)return 0;const term=searchTerm.toLowerCase();let score=0;// 标题匹配（最高权重）\nif(job.title.toLowerCase().includes(term))score+=10;// 公司匹配\nif(job.company.toLowerCase().includes(term))score+=5;// 技能匹配\nif(job.skills&&job.skills.some(skill=>skill.toLowerCase().includes(term)))score+=8;// 描述匹配\nif(job.description&&job.description.toLowerCase().includes(term))score+=3;return score;};// 获取数据源\nconst getDataSources=jobs=>{const sources=[...new Set(jobs.map(job=>job.source||'Mock Data'))];return sources;};export default{searchJobsWithFallback};","map":{"version":3,"names":["mockJobs","searchJobsWithFallback","searchTerm","arguments","length","undefined","filters","console","log","jobs","additionalJobs","fetchAdditionalJobsWithTimeout","apiError","warn","message","filteredJobs","applySearchAndFilters","result","total","sources","getDataSources","hasMore","page","pageSize","error","basicJobs","timeoutMs","Promise","resolve","reject","timeout","setTimeout","Error","tryFetchRealJobs","clearTimeout","id","title","company","companyLogo","location","type","salary","team","postedDate","views","applicants","description","skills","source","sourceUrl","trim","term","toLowerCase","filter","job","includes","some","skill","Array","isArray","matchJobToFilter","sortJobs","join","filterMap","keywords","keyword","sort","a","b","scoreA","calculateRelevanceScore","scoreB","dateOrder","indexA","indexOf","indexB","score","Set","map"],"sources":["D:/Kiro/remote-job-website/src/services/fallbackJobService.js"],"sourcesContent":["// 备用工作服务 - 确保线上环境始终有数据显示\r\nimport { mockJobs } from './mockData';\r\n\r\n// 简化的工作搜索服务，优先使用模拟数据，确保稳定性\r\nexport const searchJobsWithFallback = async (searchTerm = '', filters = {}) => {\r\n  console.log('🔄 开始搜索工作，搜索词:', searchTerm, '筛选器:', filters);\r\n  \r\n  try {\r\n    // 首先使用模拟数据作为基础，确保始终有数据\r\n    let jobs = [...mockJobs];\r\n    console.log('✅ 加载了', jobs.length, '个模拟工作');\r\n    \r\n    // 尝试从真实API获取额外数据（但不依赖它们）\r\n    try {\r\n      const additionalJobs = await fetchAdditionalJobsWithTimeout();\r\n      if (additionalJobs && additionalJobs.length > 0) {\r\n        jobs = [...jobs, ...additionalJobs];\r\n        console.log('✅ 额外获取了', additionalJobs.length, '个真实工作');\r\n      }\r\n    } catch (apiError) {\r\n      console.warn('⚠️ API调用失败，使用模拟数据:', apiError.message);\r\n    }\r\n    \r\n    // 应用搜索和筛选\r\n    const filteredJobs = applySearchAndFilters(jobs, searchTerm, filters);\r\n    \r\n    const result = {\r\n      jobs: filteredJobs,\r\n      total: filteredJobs.length,\r\n      sources: getDataSources(filteredJobs),\r\n      hasMore: false,\r\n      page: 0,\r\n      pageSize: filteredJobs.length\r\n    };\r\n    \r\n    console.log('✅ 搜索完成，返回', result.jobs.length, '个工作');\r\n    return result;\r\n    \r\n  } catch (error) {\r\n    console.error('❌ 搜索服务完全失败:', error);\r\n    \r\n    // 即使出现错误，也返回基本的模拟数据\r\n    const basicJobs = applySearchAndFilters(mockJobs, searchTerm, filters);\r\n    return {\r\n      jobs: basicJobs,\r\n      total: basicJobs.length,\r\n      sources: ['Mock Data'],\r\n      hasMore: false,\r\n      page: 0,\r\n      pageSize: basicJobs.length,\r\n      error: '部分功能可能受限，正在使用离线数据'\r\n    };\r\n  }\r\n};\r\n\r\n// 带超时的API调用\r\nconst fetchAdditionalJobsWithTimeout = async (timeoutMs = 5000) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    // 设置超时\r\n    const timeout = setTimeout(() => {\r\n      reject(new Error('API调用超时'));\r\n    }, timeoutMs);\r\n    \r\n    try {\r\n      // 尝试调用真实API（这里可以替换为实际的API调用）\r\n      const jobs = await tryFetchRealJobs();\r\n      clearTimeout(timeout);\r\n      resolve(jobs);\r\n    } catch (error) {\r\n      clearTimeout(timeout);\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\n// 尝试获取真实工作数据\r\nconst tryFetchRealJobs = async () => {\r\n  // 这里可以尝试调用真实的API\r\n  // 为了演示，我们返回一些额外的模拟数据\r\n  const additionalJobs = [\r\n    {\r\n      id: 'real-1',\r\n      title: 'Senior React Developer',\r\n      company: 'TechCorp',\r\n      companyLogo: 'https://logo.clearbit.com/techcorp.com',\r\n      location: 'Remote - Global',\r\n      type: 'Full-time',\r\n      salary: 135,\r\n      team: 'Engineering',\r\n      postedDate: 'Today',\r\n      views: 89,\r\n      applicants: 7,\r\n      description: 'Join our team to build next-generation web applications using React and modern JavaScript.',\r\n      skills: ['React', 'JavaScript', 'TypeScript', 'GraphQL', 'AWS'],\r\n      source: 'Real API',\r\n      sourceUrl: 'https://techcorp.com/careers'\r\n    }\r\n  ];\r\n  \r\n  // 模拟网络延迟\r\n  await new Promise(resolve => setTimeout(resolve, 1000));\r\n  \r\n  return additionalJobs;\r\n};\r\n\r\n// 应用搜索和筛选逻辑\r\nconst applySearchAndFilters = (jobs, searchTerm, filters) => {\r\n  let filteredJobs = [...jobs];\r\n  \r\n  // 搜索筛选\r\n  if (searchTerm && searchTerm.trim()) {\r\n    const term = searchTerm.toLowerCase().trim();\r\n    filteredJobs = filteredJobs.filter(job => {\r\n      return (\r\n        job.title.toLowerCase().includes(term) ||\r\n        job.company.toLowerCase().includes(term) ||\r\n        job.description.toLowerCase().includes(term) ||\r\n        (job.skills && job.skills.some(skill => skill.toLowerCase().includes(term)))\r\n      );\r\n    });\r\n  }\r\n  \r\n  // 职位类型筛选\r\n  if (filters && Array.isArray(filters) && filters.length > 0) {\r\n    filteredJobs = filteredJobs.filter(job => {\r\n      return filters.some(filter => matchJobToFilter(job, filter));\r\n    });\r\n  }\r\n  \r\n  // 按相关性和日期排序\r\n  return sortJobs(filteredJobs, searchTerm);\r\n};\r\n\r\n// 工作与筛选器匹配\r\nconst matchJobToFilter = (job, filter) => {\r\n  const title = job.title.toLowerCase();\r\n  const description = job.description ? job.description.toLowerCase() : '';\r\n  const skills = job.skills ? job.skills.join(' ').toLowerCase() : '';\r\n  \r\n  const filterMap = {\r\n    'frontend-developer': ['frontend', 'front-end', 'react', 'vue', 'angular', 'javascript'],\r\n    'backend-developer': ['backend', 'back-end', 'api', 'server', 'node', 'python', 'java'],\r\n    'fullstack-developer': ['full stack', 'fullstack', 'full-stack'],\r\n    'ux-designer': ['ux designer', 'user experience', 'ux'],\r\n    'ui-designer': ['ui designer', 'user interface', 'ui'],\r\n    'product-designer': ['product designer', 'product design'],\r\n    'data-scientist': ['data scientist', 'machine learning', 'data science'],\r\n    'devops-engineer': ['devops', 'infrastructure', 'cloud', 'kubernetes'],\r\n    'mobile-developer': ['mobile', 'ios', 'android', 'react native'],\r\n    'marketing-specialist': ['marketing', 'content marketing', 'digital marketing'],\r\n    'project-manager': ['project manager', 'program manager', 'scrum master']\r\n  };\r\n  \r\n  const keywords = filterMap[filter] || [];\r\n  return keywords.some(keyword => \r\n    title.includes(keyword) || description.includes(keyword) || skills.includes(keyword)\r\n  );\r\n};\r\n\r\n// 工作排序\r\nconst sortJobs = (jobs, searchTerm) => {\r\n  return jobs.sort((a, b) => {\r\n    // 如果有搜索词，按相关性排序\r\n    if (searchTerm) {\r\n      const scoreA = calculateRelevanceScore(a, searchTerm);\r\n      const scoreB = calculateRelevanceScore(b, searchTerm);\r\n      if (scoreA !== scoreB) return scoreB - scoreA;\r\n    }\r\n    \r\n    // 按发布日期排序\r\n    const dateOrder = ['Today', 'Yesterday', '2 days ago', '3 days ago', '4 days ago', '5 days ago', '6 days ago', '1 week ago'];\r\n    const indexA = dateOrder.indexOf(a.postedDate);\r\n    const indexB = dateOrder.indexOf(b.postedDate);\r\n    \r\n    if (indexA !== -1 && indexB !== -1) {\r\n      return indexA - indexB;\r\n    }\r\n    if (indexA !== -1) return -1;\r\n    if (indexB !== -1) return 1;\r\n    \r\n    return 0;\r\n  });\r\n};\r\n\r\n// 计算相关性分数\r\nconst calculateRelevanceScore = (job, searchTerm) => {\r\n  if (!searchTerm) return 0;\r\n  \r\n  const term = searchTerm.toLowerCase();\r\n  let score = 0;\r\n  \r\n  // 标题匹配（最高权重）\r\n  if (job.title.toLowerCase().includes(term)) score += 10;\r\n  \r\n  // 公司匹配\r\n  if (job.company.toLowerCase().includes(term)) score += 5;\r\n  \r\n  // 技能匹配\r\n  if (job.skills && job.skills.some(skill => skill.toLowerCase().includes(term))) score += 8;\r\n  \r\n  // 描述匹配\r\n  if (job.description && job.description.toLowerCase().includes(term)) score += 3;\r\n  \r\n  return score;\r\n};\r\n\r\n// 获取数据源\r\nconst getDataSources = (jobs) => {\r\n  const sources = [...new Set(jobs.map(job => job.source || 'Mock Data'))];\r\n  return sources;\r\n};\r\n\r\nexport default {\r\n  searchJobsWithFallback\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}